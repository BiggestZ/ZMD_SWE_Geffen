{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"file":"module.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/module.ts"],"sourcesContent":["/*\n * Deepkit Framework\n * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the MIT License.\n *\n * You should have received a copy of the MIT License along with this program.\n */\n\nimport { InjectorModule, ProviderWithScope, Token, NormalizedProvider } from '@deepkit/injector';\nimport { AbstractClassType, ClassType, CustomError, ExtractClassType, isClass } from '@deepkit/core';\nimport { EventListener, EventToken } from '@deepkit/event';\nimport { WorkflowDefinition } from '@deepkit/workflow';\nimport { getPartialSerializeFunction, reflect, ReflectionFunction, ReflectionMethod, serializer, Type, TypeClass } from '@deepkit/type';\nimport { ControllerConfig } from './service-container.js';\n\nexport type DefaultObject<T> = T extends undefined ? {} : T;\n\nexport interface MiddlewareConfig {\n    getClassTypes(): ClassType[];\n}\n\nexport type MiddlewareFactory = () => MiddlewareConfig;\n\nexport type ExportType = AbstractClassType | string | AppModule<any> | Type | NormalizedProvider;\n\n/**\n * @reflection never\n */\nexport interface AddedListener {\n    eventToken: EventToken;\n    reflection: ReflectionMethod | ReflectionFunction;\n    module?: InjectorModule;\n    classType?: ClassType;\n    methodName?: string;\n    order: number;\n}\n\nexport function stringifyListener(listener: AddedListener): string {\n    if (listener.classType) {\n        return listener.classType.name + '.' + listener.methodName;\n    }\n    return listener.reflection.name || 'anonymous function';\n}\n\nexport interface ModuleDefinition {\n    /**\n     * Providers.\n     */\n    providers?: (ProviderWithScope | ProviderWithScope[])[];\n\n    /**\n     * Export providers (its token `provide` value) or modules you imported first.\n     */\n    exports?: ExportType[];\n\n    /**\n     * Module bootstrap class|function.\n     * This class is instantiated or function executed on bootstrap and can set up various injected services.\n     */\n    bootstrap?: ClassType | Function;\n\n    /**\n     * Configuration definition.\n     *\n     * @example\n     * ```typescript\n     *\n     * class MyModuleConfig {\n     *     debug: boolean = false;\n     * });\n     *\n     * class MyModule extends createModule({\n     *     config: MyModuleConfig\n     * });\n     * ```\n     */\n    config?: ClassType;\n\n    /**\n     * CLI controllers.\n     */\n    controllers?: ClassType[];\n\n    /**\n     * Register created workflows. This allows the Framework Debugger to collect\n     * debug information and display the graph of your workflow.\n     */\n    workflows?: WorkflowDefinition<any>[];\n\n    /**\n     * Event listeners.\n     *\n     * @example with simple functions\n     * ```typescript\n     * {\n     *     listeners: [\n     *         onEvent.listen((event: MyEvent) => {console.log('event triggered', event);}),\n     *     ]\n     * }\n     * ```\n     *\n     * @example with services\n     * ```typescript\n     *\n     * class MyListener {\n     *     @eventDispatcher.listen(onEvent)\n     *     onEvent(event: typeof onEvent['type']) {\n     *         console.log('event triggered', event);\n     *     }\n     * }\n     *\n     * {\n     *     listeners: [\n     *         MyListener,\n     *     ]\n     * }\n     * ```\n     */\n    listeners?: (EventListener<any> | ClassType)[];\n\n    /**\n     * HTTP middlewares.\n     */\n    middlewares?: MiddlewareFactory[];\n}\n\nexport interface CreateModuleDefinition extends ModuleDefinition {\n    /**\n     * Whether all services should be moved to the root module/application.\n     */\n    forRoot?: true;\n\n    /**\n     * Modules can not import other modules in the module definitions.\n     * Use instead:\n     *\n     * ```typescript\n     * class MyModule extends createModule({}) {\n     *     imports = [new AnotherModule];\n     * }\n     * ```\n     *\n     * or\n     *\n     * ```typescript\n     * class MyModule extends createModule({}) {\n     *     process() {\n     *         this.addModuleImport(new AnotherModule);\n     *     }\n     * }\n     * ```\n     *\n     * or switch to functional modules\n     *\n     * ```typescript\n     * function myModule(module: AppModule) {\n     *     module.addModuleImport(new AnotherModule);\n     * }\n     * ```\n     */\n    imports?: undefined;\n}\n\nexport type FunctionalModule = (module: AppModule<any>) => void;\nexport type FunctionalModuleFactory = (...args: any[]) => (module: AppModule<any>) => void;\n\nexport interface RootModuleDefinition extends ModuleDefinition {\n    /**\n     * Import another module.\n     */\n    imports?: (AppModule<any> | FunctionalModule)[];\n}\n\nexport class ConfigurationInvalidError extends CustomError {\n}\n\nlet moduleId = 0;\n\n/**\n * @reflection never\n */\ntype PartialDeep<T> = T extends string | number | bigint | boolean | null | undefined | symbol | Date\n    ? T | undefined\n    // Arrays, Sets and Maps and their readonly counterparts have their items made\n    // deeply partial, but their own instances are left untouched\n    : T extends Array<infer ArrayType>\n        ? Array<PartialDeep<ArrayType>>\n        : T extends ReadonlyArray<infer ArrayType>\n            ? ReadonlyArray<ArrayType>\n            : T extends Set<infer SetType>\n                ? Set<PartialDeep<SetType>>\n                : T extends ReadonlySet<infer SetType>\n                    ? ReadonlySet<SetType>\n                    : T extends Map<infer KeyType, infer ValueType>\n                        ? Map<PartialDeep<KeyType>, PartialDeep<ValueType>>\n                        : T extends ReadonlyMap<infer KeyType, infer ValueType>\n                            ? ReadonlyMap<PartialDeep<KeyType>, PartialDeep<ValueType>>\n                            // ...and finally, all other objects.\n                            : {\n                                [K in keyof T]?: PartialDeep<T[K]>;\n                            };\n\nexport interface AppModuleClass<C> {\n    new(config?: PartialDeep<C>): AppModule<any, C>;\n}\n\n/**\n * Creates a new module class type from which you can extend.\n *\n * name: The lowercase alphanumeric module name. This is used in the configuration system.\n * Choose a short unique name for best usability. If you don't have any configuration\n * or if you want that your configuration options are available without prefix, you can keep this undefined.\n *\n * ```typescript\n * class MyModule extends createModule({}) {}\n *\n * //and used like this\n * new App({\n *     imports: [new MyModule]\n * });\n * ```\n */\nexport function createModule<T extends CreateModuleDefinition>(options: T, name: string = ''): AppModuleClass<ExtractClassType<T['config']>> {\n    return class AnonAppModule extends AppModule<T> {\n        constructor(config?: PartialDeep<ExtractClassType<T['config']>>) {\n            super(options, name);\n            if (config) {\n                this.configure(config);\n            }\n        }\n    } as any;\n}\n\nexport type ListenerType = EventListener<any> | ClassType;\n\n/**\n * The AppModule is the base class for all modules.\n *\n * You can use `createModule` to create a new module class or extend from `AppModule` manually.\n *\n * @example\n * ```typescript\n *\n * class MyModule extends AppModule {\n *   providers = [MyService];\n *   exports = [MyService];\n *\n *   constructor(config: MyConfig) {\n *      super();\n *      this.setConfigDefinition(MyConfig);\n *      this.configure(config);\n *      this.name = 'myModule';\n *   }\n * }\n */\nexport class AppModule<T extends RootModuleDefinition = {}, C extends ExtractClassType<T['config']> = any> extends InjectorModule<C, AppModule<any>> {\n    public setupConfigs: ((module: AppModule<any>, config: any) => void)[] = [];\n\n    public imports: AppModule<any>[] = [];\n    public controllers: ClassType[] = [];\n    public commands: { name?: string, callback: Function }[] = [];\n    public workflows: WorkflowDefinition<any>[] = [];\n    public listeners: ListenerType[] = [];\n    public middlewares: MiddlewareFactory[] = [];\n    public uses: ((...args: any[]) => void)[] = [];\n\n    constructor(\n        public options: T = {} as T,\n        public name: string = '',\n        public setups: ((module: AppModule<any>, config: any) => void)[] = [],\n        public id: number = moduleId++,\n    ) {\n        super();\n        if (this.options.imports) for (const m of this.options.imports) this.addModuleImport(m);\n        if (this.options.providers) this.providers.push(...this.options.providers.flat());\n        if (this.options.exports) this.exports.push(...this.options.exports);\n        if (this.options.controllers) this.controllers.push(...this.options.controllers);\n        if (this.options.workflows) this.workflows.push(...this.options.workflows);\n        if (this.options.listeners) this.listeners.push(...this.options.listeners);\n        if (this.options.middlewares) this.middlewares.push(...this.options.middlewares);\n\n        if ('forRoot' in this.options) this.forRoot();\n\n        if (this.options.config) {\n            this.setConfigDefinition(this.options.config);\n            // this.configDefinition = this.options.config;\n            //apply defaults\n            // const defaults: any = jsonSerializer.for(this.options.config.schema).deserialize({});\n            // //we iterate over so we have the name available on the object, even if its undefined\n            // for (const property of this.options.config.schema.getProperties()) {\n            //     (this.config as any)[property.name] = defaults[property.name];\n            // }\n        }\n    }\n\n    protected addModuleImport(m: AppModule<any> | FunctionalModule) {\n        if (m instanceof AppModule) {\n            this.addImport(m);\n        } else {\n            const module = new AppModule({});\n            m(module);\n            this.addImport(module);\n        }\n    }\n\n    /**\n     * When all configuration loaders have been loaded, this method is called.\n     * It allows to further manipulate the module state depending on the final config.\n     */\n    process() {\n\n    }\n\n    /**\n     * A hook that allows to react on a registered provider in some module.\n     */\n    processProvider(module: AppModule<any>, token: Token, provider: ProviderWithScope) {\n\n    }\n\n    /**\n     * A hook that allows to react on a registered controller in some module.\n     */\n    processController(module: AppModule<any>, config: ControllerConfig) {\n\n    }\n\n    /**\n     * A hook that allows to react on a registered event listeners in some module.\n     */\n    processListener(module: AppModule<any>, listener: AddedListener) {\n\n    }\n\n    /**\n     * After `process` and when all modules have been processed by the service container.\n     * This is also after `processController` and `processProvider` have been called and the full\n     * final module tree is known. Adding now new providers or modules doesn't have any effect.\n     *\n     * Last chance to set up the injector context, via this.setupProvider().\n     */\n    postProcess() {\n\n    }\n\n    /**\n     * Renames this module instance.\n     */\n    rename(name: string): this {\n        this.name = name;\n        return this;\n    }\n\n    getListeners(): ListenerType[] {\n        return this.listeners;\n    }\n\n    getWorkflows(): WorkflowDefinition<any>[] {\n        return this.workflows;\n    }\n\n    getMiddlewares(): MiddlewareFactory[] {\n        return this.middlewares;\n    }\n\n    getControllers(): ClassType[] {\n        return this.controllers;\n    }\n\n    getCommands(): { name?: string, callback: Function }[] {\n        return this.commands;\n    }\n\n    addCommand(name: string | undefined, callback: (...args: []) => any): this {\n        this.assertInjectorNotBuilt();\n        this.commands.push({ name, callback });\n        return this;\n    }\n\n    addController(...controller: ClassType[]): this {\n        this.assertInjectorNotBuilt();\n        this.controllers.push(...controller);\n        return this;\n    }\n\n    addListener(...listener: (EventListener<any> | ClassType)[]): this {\n        this.assertInjectorNotBuilt();\n\n        for (const l of listener) {\n            if (!isClass(l)) continue;\n            if (this.isProvided(l)) continue;\n            this.addProvider(l);\n        }\n        this.listeners.push(...listener);\n        return this;\n    }\n\n    addMiddleware(...middlewares: MiddlewareFactory[]): this {\n        this.middlewares.push(...middlewares);\n        return this;\n    }\n\n    /**\n     * Allows to change the module config before `setup` and bootstrap is called.\n     * This is the last step right before the config is validated.\n     */\n    setupConfig(callback: (module: AppModule<T>, config: C) => void): this {\n        this.setupConfigs.push(callback as any);\n        return this;\n    }\n\n    /**\n     * Allows to change the module after the configuration has been loaded, right before the service container is built.\n     *\n     * This enables you to change the module or its imports depending on the configuration the last time before their services are built.\n     *\n     * At this point no services can be requested as the service container was not built.\n     */\n    setup(callback: (module: AppModule<T>, config: C) => void): this {\n        this.setups.push(callback);\n        return this;\n    }\n\n    /**\n     * Allows to call services before the application bootstraps.\n     *\n     * This enables you to configure modules and request their services.\n     */\n    use(callback: (...args: any[]) => void): this {\n        this.uses.push(callback);\n        return this;\n    }\n\n    getImports(): AppModule<any>[] {\n        return super.getImports() as AppModule<any>[];\n    }\n\n    getName(): string {\n        return this.name;\n    }\n\n    /**\n     * Sets configured values.\n     */\n    configure(config: Partial<C>): this {\n        for (const module of this.getImports()) {\n            if (!module.getName()) continue;\n            if (!(module.getName() in config)) continue;\n            const newModuleConfig = (config as any)[module.getName()];\n            module.configure(newModuleConfig);\n        }\n\n        if (this.options.config) {\n            const configNormalized = getPartialSerializeFunction(reflect(this.options.config) as TypeClass, serializer.deserializeRegistry)(config);\n            Object.assign(this.config, configNormalized);\n        }\n\n        return this;\n    }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 486, "column": 0}, "map": {"version":3,"file":"command.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/command.ts"],"sourcesContent":["/*\n * Deepkit Framework\n * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the MIT License.\n *\n * You should have received a copy of the MIT License along with this program.\n */\n\nimport { ClassType, getClassName } from '@deepkit/core';\nimport {\n    ClassDecoratorResult,\n    createClassDecoratorContext,\n    deserialize,\n    hasDefaultValue,\n    isCustomTypeClass,\n    isDateType,\n    isOptional,\n    isReferenceType,\n    metaAnnotation,\n    reflect,\n    ReflectionClass,\n    ReflectionFunction,\n    ReflectionKind,\n    stringifyType,\n    Type,\n    TypeAnnotation,\n    TypeParameter,\n    TypeProperty,\n    TypePropertySignature,\n    typeToObject,\n    validate,\n    ValidationError,\n} from '@deepkit/type';\nimport { EventDispatcher } from '@deepkit/event';\nimport { getInjectOptions, InjectorContext, InjectorModule, ServiceNotFoundError } from '@deepkit/injector';\nimport { ControllerConfig } from './service-container.js';\nimport { LoggerInterface } from '@deepkit/logger';\nimport { onAppError, onAppExecute, onAppExecuted, onAppShutdown } from './app.js';\nimport { FrameCategory, Stopwatch } from '@deepkit/stopwatch';\n\n/**\n * Flag is a command line argument that is prefixed with `--` and can have a value.\n */\nexport type Flag<Options extends { char?: string, hidden?: boolean, description?: string, prefix?: string } = {}> = TypeAnnotation<'cli:flag', Options>;\n\nclass CommandDecoratorDefinition {\n    name: string = '';\n    description: string = '';\n}\n\nclass CommandDecorator {\n    t = new CommandDecoratorDefinition;\n\n    controller(name: string, options?: { description?: string }) {\n        this.t.name = name;\n        if (options) {\n            if (options.description) this.t.description = options.description;\n        }\n    }\n\n}\n\nexport const cli: ClassDecoratorResult<typeof CommandDecorator> = createClassDecoratorContext(CommandDecorator);\n\nexport interface Command {\n    execute(...args: any[]): Promise<number | void> | number | void;\n}\n\nexport function isCommand(classType: ClassType<Command>) {\n    return !!cli._fetch(classType);\n}\n\n\nfunction convert(parameter: CommandParameter, value: any) {\n    if (value === undefined) {\n        if (parameter.optional) return undefined;\n        throw new Error(`Value is required`);\n    }\n    if (parameter.type.kind === ReflectionKind.array && !Array.isArray(value)) {\n        value = [value];\n    }\n    value = deserialize(value, undefined, undefined, undefined, parameter.type);\n    const errors = validate(value, parameter.type);\n    if (errors.length) {\n        throw errors[0];\n    }\n    return value;\n}\n\n/**\n * Auto-detect some types as flag.\n */\nfunction isFlagForced(type: Type): boolean {\n    if (supportedAsArgument(type)) return false;\n\n    return type.kind === ReflectionKind.boolean;\n}\n\nfunction supportedFlags(type: Type): boolean {\n    return supportedAsArgument(type) || isFlagForced(type);\n}\n\nfunction supportedAsArgument(type: Type): boolean {\n    if (type.kind === ReflectionKind.string || type.kind === ReflectionKind.number\n        || type.kind === ReflectionKind.any || type.kind === ReflectionKind.unknown || isDateType(type)\n        || type.kind === ReflectionKind.bigint || type.kind === ReflectionKind.literal) return true;\n    if (type.kind === ReflectionKind.union) return type.types.every(v => supportedAsArgument(v));\n    if (type.kind === ReflectionKind.array) return supportedAsArgument(type.type);\n    if (isReferenceType(type)) return true;\n    return false;\n}\n\ndeclare const process: any;\ndeclare const Deno: any;\ndeclare const Bun: any;\n\nexport function getBinFromEnvironment(): string[] {\n    if ('undefined' !== typeof process && process.argv) {\n        return process.argv.slice(0, 2);\n    }\n\n    if ('undefined' !== typeof Deno && Deno.args) {\n        return ['deno', 'run', Deno.main?.filename || ''];\n    }\n\n    if ('undefined' !== typeof Bun && Bun.argv) {\n        return Bun.argv.slice(0, 2);\n    }\n\n    return [];\n}\n\nexport function getArgsFromEnvironment(): string[] {\n    if ('undefined' !== typeof process && process.argv) {\n        return process.argv.slice(2);\n    }\n\n    if ('undefined' !== typeof Deno && Deno.args) {\n        return Deno.args;\n    }\n\n    if ('undefined' !== typeof Bun && Bun.argv) {\n        return Bun.argv.slice(2);\n    }\n\n    return [];\n}\n\nexport function parseCliArgs(args: string[], aliases: { [name: string]: string } = {}): { [name: string]: boolean | string | string[] } {\n    const result: { [name: string]: boolean | string | string[] } = {};\n    let current: string | undefined = undefined;\n\n    function append(name: string, value: string | boolean) {\n        name = aliases[name] || name;\n\n        const existing = result[name];\n\n        if ('string' === typeof existing) {\n            result[name] = [existing];\n        }\n\n        if (Array.isArray(result[name])) {\n            (result[name] as any).push(value);\n        } else {\n            result[name] = value;\n        }\n    }\n\n    for (const arg of args) {\n        if (arg.startsWith('--')) {\n            if (current) {\n                append(current, true);\n            }\n            current = arg.substr(2);\n            if (current.includes(' ')) {\n                const [name, value] = current.split(' ');\n                append(name, value);\n                current = undefined;\n            }\n        } else if (arg.startsWith('-')) {\n            if (current) {\n                append(current, true);\n            }\n            current = arg.substr(1);\n        } else {\n            if (current) {\n                append(current, arg);\n            } else {\n                //no current flag, so it's a positional argument\n                if (!result['@']) result['@'] = [];\n                (result['@'] as any).push(arg);\n            }\n            current = undefined;\n        }\n    }\n\n    if (current) {\n        result[current] = true;\n    }\n\n    return result;\n}\n\n/**\n * Returns the longest string length of all names.\n */\nfunction getSpacing(names: string[]): number {\n    return names.reduce((max, name) => Math.max(max, name.length), 0) + 1;\n}\n\nexport interface ParsedCliControllerConfig {\n    controller?: ClassType,\n    callback?: Function;\n    description?: string;\n    name: string;\n    module: InjectorModule;\n}\n\n/**\n * Tries to create a command name from a class name or function name.\n * //test => test\n * //testCommand => test-command\n * //TestCommand => test-command\n * //Test => test\n * //TestSomething => test-something\n * //system_crazyCommand => system:crazy-command\n * //system_crazy => system:crazy\n * //system_crazyCommandSomething => system:crazy-command-something\n * //system_subSystem_test => system:sub-system:test\n */\nfunction commandNameFromSymbol(symbolName: string) {\n    return symbolName.replace(/_+/g, ':')\n        .replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase()\n        .replace(/-command$/, '').replace(/-controller/, '-');\n}\n\nexport function parseControllerConfig(config: ControllerConfig): ParsedCliControllerConfig {\n    let name = config.name || '';\n    let description = '';\n    if (!name && config.controller) {\n        name = commandNameFromSymbol(getClassName(config.controller));\n    } else if (!name && config.callback) {\n        name = commandNameFromSymbol(config.callback.name);\n    }\n\n    const decoratorConfig = config.controller ? cli._fetch(config.controller) : undefined;\n    if (decoratorConfig) {\n        if (decoratorConfig.description) description = decoratorConfig.description;\n        if (decoratorConfig.name) name = decoratorConfig.name;\n    }\n\n    if (!description) {\n        const type = reflect(config.controller || config.callback);\n        if (type.kind === ReflectionKind.function && type.description) description = type.description || '';\n        if (type.kind === ReflectionKind.class && type.description) description = type.description || '';\n    }\n\n    return { controller: config.controller, callback: config.callback, description, name, module: config.module };\n}\n\nfunction printTopics(script: string, forTopic: string, commands: ParsedCliControllerConfig[], writer: CommandWriter) {\n    writer('<yellow>USAGE</yellow>');\n    writer(`  $ ${script} ${forTopic ? forTopic + ':' : ''}[COMMAND]`);\n    writer('');\n    writer('<yellow>COMMANDS</yellow>');\n    const descriptionSpacing = getSpacing(commands.map(cmd => cmd.name));\n\n    let lastTopic = '';\n    for (const cmd of commands) {\n        const topic = cmd.name.lastIndexOf(':') ? cmd.name.substr(0, cmd.name.lastIndexOf(':')) : '';\n        if (lastTopic !== topic) {\n            lastTopic = topic;\n            writer(topic);\n        }\n        if (cmd.description) {\n            const nameWithSpacing = `<green>${cmd.name}</green>` + ' '.repeat(descriptionSpacing - cmd.name.length);\n            writer('  ' + nameWithSpacing + ' ' + cmd.description);\n        } else {\n            writer(`  <green>${cmd.name}</green>`);\n        }\n    }\n    writer('');\n    writer(`For more information on a specific command or topic, type '[command/topic] --help'`);\n}\n\nfunction getParamFlags(parameter: CommandParameter): string {\n    const flags: string[] = [];\n    if (!parameter.optional) flags.push('required');\n\n    if (parameter.type.kind === ReflectionKind.array) {\n        flags.push('multiple');\n    }\n    if (parameter.defaultValue !== undefined) flags.push('default=' + parameter.defaultValue);\n    return flags.length ? `[${flags.join(', ')}]` : '';\n}\n\nfunction getParamIdentifier(parameter: CommandParameter): string {\n    const elementType = parameter.type.kind === ReflectionKind.array ? parameter.type.type : parameter.type;\n\n    if (parameter.kind === 'flag' || parameter.kind === 'flag-property') {\n        let name = `--${parameter.name}`;\n        if (parameter.char) name = `-${parameter.char}, ${name}`;\n\n        if (parameter.type.kind === ReflectionKind.boolean) {\n            return `<green>${name}</green>`;\n        }\n        let type = isReferenceType(elementType)\n            ? stringifyType(ReflectionClass.from(elementType).getPrimary().type)\n            : stringifyType(elementType);\n\n        return `<green>${name} ${type}</green>`;\n    }\n    return `<green>${parameter.name}</green>`;\n}\n\nfunction printHelp(script: string, command: ParsedCliControllerConfig, writer: CommandWriter) {\n    const commandParameters = collectCommandParameter(command);\n    const args = commandParameters.filter(v => v.kind === 'argument');\n\n    writer(`<yellow>Usage:</yellow> ${script} ${command.name} [OPTIONS] ${args.map(v => `[${v.name}]`).join(' ')}`);\n    writer('');\n\n    if (command.description) {\n        writer(`${command.description || ''}`);\n        writer('');\n    }\n\n    if (args.length) {\n        writer('<yellow>Arguments:</yellow>');\n        for (const parameter of args) {\n            writer(`  ${parameter.name}</green>\\t${parameter.description || ''}<yellow>${getParamFlags(parameter)}</yellow>`);\n        }\n    }\n\n    writer('<yellow>Options:</yellow>');\n\n    const descriptionSpacing = getSpacing(commandParameters.map(getParamIdentifier));\n\n    for (const parameter of commandParameters) {\n        if (parameter.kind === 'argument' || parameter.kind === 'service') continue;\n        if (parameter.hidden) continue;\n        const label = getParamIdentifier(parameter);\n        const nameWithSpacing = label + ' '.repeat(descriptionSpacing - label.length);\n        writer(`  ${nameWithSpacing}${parameter.description || ''}<yellow>${getParamFlags(parameter)}</yellow>`);\n    }\n}\n\nexport type CommandWriter = (...message: any[]) => void;\n\ninterface ParameterMeta {\n    flag: boolean;\n    char: string;\n    hidden: boolean;\n    description: string;\n    prefix?: string;\n}\n\nfunction getParameterMeta(parameter: TypeParameter | TypeProperty | TypePropertySignature): ParameterMeta {\n    const metaFlag = metaAnnotation.getForName(parameter.type, 'cli:flag');\n    const flagOptions = metaFlag && metaFlag.length ? typeToObject(metaFlag[0]) : {};\n\n    return {\n        flag: !!metaFlag,\n        char: flagOptions.char || '',\n        hidden: flagOptions.hidden === true,\n        prefix: flagOptions.prefix,\n        description: flagOptions.description || '',\n    };\n}\n\n/**\n * bin: the binary name, e.g. ['node', 'app.ts']\n * argv: the arguments, e.g. ['command', '--help']\n * writer: a function used to write the output. Defaults to console.log.\n */\nexport async function executeCommand(\n    script: string,\n    argv: string[],\n    eventDispatcher: EventDispatcher,\n    logger: LoggerInterface,\n    injector: InjectorContext,\n    commandsConfigs: ControllerConfig[],\n    writer?: CommandWriter,\n): Promise<number> {\n    let commands = commandsConfigs.map(v => parseControllerConfig(v));\n\n    if (!writer) {\n        writer = (...message: string[]) => logger.log(...message);\n    }\n    const help = argv.some(v => v === '--help') || argv[0] === 'help';\n\n    const first = argv[0] === 'help' || argv[0] === '--help' ? '' : argv[0];\n    const command = commands.find(cmd => cmd.name === first);\n\n    if (argv.length === 0 || (argv.length === 1) || help) {\n        const topicPrefix = argv.length === 1 && first ? first + ':' : '';\n\n        if (command && help) {\n            printHelp(script, command, writer);\n            return 0;\n        } else if (!command) {\n            //print topics\n            commands = commands.filter(cmd => cmd.name?.startsWith(topicPrefix));\n\n            //sort so that the ones without topics ( no ':' ) are first, then by name\n            commands.sort((a, b) => {\n                if (a.name?.includes(':') && !b.name?.includes(':')) return 1;\n                if (!a.name?.includes(':') && b.name?.includes(':')) return -1;\n                return a.name?.localeCompare(b.name || '') || 0;\n            });\n\n            printTopics(script, topicPrefix.slice(0, -1), commands, writer);\n            return 0;\n        }\n    }\n\n    if (!command) {\n        writer(`Command \"${first}\" not found.`);\n        return 1;\n    }\n    try {\n        return await runCommand(command, argv.slice(1), injector, eventDispatcher, logger);\n    } catch (e) {\n        writer(`The command \"${command.name}\" failed.`);\n        writer(e);\n        return 1;\n    }\n}\n\nfunction handleConvertError(logger: LoggerInterface, parameter: CommandParameter, value: any, error: any) {\n    let group = parameter.kind === 'argument' ? 'argument' : 'property';\n    let name = getActualCliParameterName(parameter);\n    if (parameter.kind === 'flag' || parameter.kind === 'flag-property') {\n        name = '--' + name;\n        group = 'option';\n    }\n    if (error instanceof ValidationError) {\n        logger.log(`<red>Invalid value for ${group} ${name}: ${value}.</red> ${error.errors[0].message} [${error.errors[0].code}]`);\n        return;\n    }\n    logger.log(`<red>Invalid value for ${group} ${name}: ${value}.</red> ${String(error.message)}`);\n}\n\ninterface CommandParameter {\n    name: string;\n    char: string;\n    hidden: boolean;\n    flag: boolean;\n    optional: boolean;\n    description: string;\n    kind: 'argument' | 'flag' | 'flag-property' | 'service';\n    defaultValue?: any;\n    type: Type;\n    prefix: string;\n    collectInto?: string; //members of object literal\n}\n\nfunction collectCommandParameter(config: ParsedCliControllerConfig) {\n    const parameters = config.callback\n        ? ReflectionFunction.from(config.callback).getParameters()\n        : config.controller\n            ? ReflectionClass.from(config.controller).getMethod('execute').getParameters()\n            : [];\n\n    const result: CommandParameter[] = [];\n\n    let objectLiterals = 0;\n    for (const reflection of parameters) {\n        if (reflection.parameter.type.kind === ReflectionKind.objectLiteral || reflection.parameter.type.kind === ReflectionKind.class) {\n            objectLiterals++;\n        }\n    }\n\n    const names = new Set<string>();\n\n    function add(parameter: TypeParameter | TypeProperty | TypePropertySignature, prefixIn: string, collectInto?: string, forceFlag?: boolean) {\n        const meta = getParameterMeta(parameter);\n        const injectToken = getInjectOptions(parameter.type);\n        const isSimple = supportedAsArgument(parameter.type);\n        const char = meta.char || '';\n        const hidden = meta.hidden || false;\n        const prefix = prefixIn || meta.prefix || '';\n        const optional = isOptional(parameter) || hasDefaultValue(parameter);\n        const description = meta.description || parameter.description || '';\n        const name = String(parameter.name);\n        let defaultValue: any = undefined;\n        try {\n            defaultValue = parameter.kind === ReflectionKind.property || parameter.kind === ReflectionKind.parameter ? parameter.default?.() : undefined;\n        } catch {\n        }\n\n        if (forceFlag || (meta.flag || isFlagForced(parameter.type)) && !injectToken) {\n            // check if parameter.type is an object, e.g. { name: string, age: number }\n            // split it into multiple flags, e.g. --name --age\n            if (parameter.type.kind === ReflectionKind.objectLiteral || isCustomTypeClass(parameter.type)) {\n                if (isReferenceType(parameter.type)) {\n                    result.push({ name, defaultValue, char, hidden, optional, description, prefix, collectInto, kind: 'flag', flag: true, type: parameter.type });\n                    return;\n                }\n\n                for (const property of parameter.type.types) {\n                    if (property.kind !== ReflectionKind.property && property.kind !== ReflectionKind.propertySignature) continue;\n                    if (!supportedFlags(property.type)) continue;\n                    const subName = String(property.name);\n                    if (names.has(prefix + '.' + subName)) {\n                        throw new Error(`Duplicate CLI argument/flag name ${subName} in object literal. Try setting a prefix via ${name}: ${stringifyType(parameter.type)} & Flag<{prefix: '${name}'}> `);\n                    }\n                    names.add(prefix + '.' + subName);\n                    add(property, prefix, name, true);\n                }\n            } else {\n                names.add(name);\n                result.push({ name, defaultValue, char, hidden, optional, description, prefix, collectInto, kind: 'flag', flag: true, type: parameter.type });\n            }\n        } else {\n            names.add(name);\n            //it's either a simple string|number positional argument or a service\n            if (isSimple && !injectToken) {\n                result.push({ name, defaultValue, flag: false, char, optional, description, hidden, collectInto, prefix, kind: 'argument', type: parameter.type });\n            } else {\n                result.push({ name, defaultValue, flag: false, char, optional, description, hidden, collectInto, prefix, kind: 'service', type: parameter.type });\n            }\n        }\n    }\n\n    for (const reflection of parameters) {\n        add(reflection.parameter, '');\n    }\n\n    if (config.controller) {\n        const classSchema = ReflectionClass.from(config.controller);\n        for (const reflection of classSchema.getProperties()) {\n            const meta = getParameterMeta(reflection.property);\n            const optional = reflection.isOptional() || reflection.hasDefault();\n            const description = meta.description || reflection.property.description || '';\n\n            if (!meta.flag) continue;\n            result.push({\n                name: reflection.name, hidden: meta.hidden || false, prefix: meta.prefix || '', char: meta.char || '',\n                kind: 'flag-property', flag: true, description, optional, type: reflection.property.type,\n            });\n        }\n    }\n\n    return result;\n}\n\nfunction getActualCliParameterName(parameter: { prefix: string, name: string }) {\n    return parameter.prefix ? parameter.prefix + '.' + parameter.name : parameter.name;\n}\n\nexport async function runCommand(\n    config: ParsedCliControllerConfig,\n    argv: string[],\n    injector: InjectorContext,\n    eventDispatcher: EventDispatcher,\n    logger: LoggerInterface,\n): Promise<any> {\n    const parameters = config.callback\n        ? ReflectionFunction.from(config.callback).getParameters()\n        : config.controller\n            ? ReflectionClass.from(config.controller).getMethod('execute').getParameters()\n            : [];\n\n    const stopwatch = injector.get(Stopwatch);\n    const aliases: { [name: string]: string } = {};\n    const parameterValues: { [name: string]: any } = {};\n\n    for (const parameter of parameters) {\n        const meta = getParameterMeta(parameter.parameter);\n        if (meta.char) {\n            aliases[meta.char] = parameter.name;\n        }\n    }\n\n    const parsedArgs = parseCliArgs(argv, aliases);\n\n    const args: any[] = [];\n    let positionalIndex = 0;\n    const positionalArguments: any[] = Array.isArray(parsedArgs['@']) ? parsedArgs['@'] : [];\n    const commandParameters = collectCommandParameter(config);\n\n    for (const parameter of commandParameters) {\n        if (parameter.kind === 'service') {\n            const injectToken = getInjectOptions(parameter.type);\n            try {\n                args.push(injector.get(injectToken || parameter.type));\n            } catch (error) {\n                if (parameter.optional && error instanceof ServiceNotFoundError)  {\n                    continue;\n                }\n                handleConvertError(logger, parameter, parsedArgs[parameter.name], error);\n                return 1;\n            }\n            continue;\n        }\n        const id = getActualCliParameterName(parameter);\n        let raw = parsedArgs[id];\n        if (parameter.kind === 'argument') {\n            raw = positionalArguments[positionalIndex];\n            positionalIndex++;\n        }\n\n        try {\n            const v = convert(parameter, raw) ?? parameter.defaultValue;\n            if (parameter.collectInto) {\n                if (!parameterValues[parameter.collectInto]) {\n                    parameterValues[parameter.collectInto] = {};\n                    if (parameter.kind !== 'flag-property') {\n                        args.push(parameterValues[parameter.collectInto]);\n                    }\n                }\n                if (v !== undefined) {\n                    // Important to not have undefined properties in the object\n                    parameterValues[parameter.collectInto][parameter.name] = v;\n                }\n            } else {\n                parameterValues[parameter.name] = v;\n                if (parameter.kind !== 'flag-property') {\n                    args.push(v);\n                }\n            }\n        } catch (error) {\n            handleConvertError(logger, parameter, raw, error);\n            return 1;\n        }\n    }\n\n    const label = config.controller ? getClassName(config.controller) : config.callback ? config.callback.name : '';\n\n    await eventDispatcher.dispatch(onAppExecute, { command: config.name, parameters: parameterValues, injector });\n    const frame = stopwatch.active ? stopwatch.start(config.name + '(' + label + ')', FrameCategory.cli, true) : undefined;\n\n    let exitCode: any = 1;\n    try {\n        //property injection possible, too\n        if (config.controller) {\n            const instance = injector.get(config.controller, config.module);\n            for (const parameter of commandParameters) {\n                if (parameter.kind !== 'flag-property') continue;\n                instance[parameter.name] = parameterValues[parameter.name];\n            }\n            if (frame) {\n                exitCode = await frame.run(() => instance.execute(...args));\n            } else {\n                exitCode = await instance.execute(...args);\n            }\n        } else if (config.callback) {\n            if (frame) {\n                exitCode = await frame.run(() => config.callback!(...args));\n            } else {\n                exitCode = await config.callback(...args);\n            }\n        }\n        exitCode = 'number' === typeof exitCode ? exitCode : 0;\n        await eventDispatcher.dispatch(onAppExecuted, { exitCode, command: config.name, parameters: parameterValues, injector });\n        return exitCode;\n    } catch (error) {\n        await eventDispatcher.dispatch(onAppError, {\n            command: config.name,\n            parameters: parameterValues,\n            injector,\n            error: error instanceof Error ? error : new Error(String(error)),\n        });\n        throw error;\n    } finally {\n        if (frame) frame.end();\n        await eventDispatcher.dispatch(onAppShutdown, { command: config.name, parameters: parameterValues, injector });\n    }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1395, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1401, "column": 0}, "map": {"version":3,"file":"service-container.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/service-container.ts"],"sourcesContent":["/*\n * Deepkit Framework\n * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the MIT License.\n *\n * You should have received a copy of the MIT License along with this program.\n */\n\nimport { ClassType, getClassName, isClass, isFunction } from '@deepkit/core';\nimport { EventDispatcher, EventListenerRegistered, isEventListenerContainerEntryCallback } from '@deepkit/event';\nimport { AddedListener, AppModule, ConfigurationInvalidError, MiddlewareConfig, ModuleDefinition } from './module.js';\nimport {\n    injectedFunction,\n    Injector,\n    InjectorContext,\n    InjectorModule,\n    isProvided,\n    ProviderWithScope,\n    resolveToken,\n    Token,\n} from '@deepkit/injector';\nimport { cli } from './command.js';\nimport { WorkflowDefinition } from '@deepkit/workflow';\nimport { deserialize, ReflectionClass, ReflectionFunction, validate } from '@deepkit/type';\nimport { ConsoleTransport, Logger, ScopedLogger } from '@deepkit/logger';\nimport { Stopwatch } from '@deepkit/stopwatch';\n\n/**\n * @reflection never\n */\nexport interface ControllerConfig {\n    controller?: ClassType,\n    name?: string;\n    for?: string; //e.g. cli\n    callback?: Function;\n    module: InjectorModule;\n}\n\nexport class CliControllerRegistry {\n    public readonly controllers: ControllerConfig[] = [];\n}\n\nexport type MiddlewareRegistryEntry = { config: MiddlewareConfig, module: AppModule<any> };\n\nexport class MiddlewareRegistry {\n    public readonly configs: MiddlewareRegistryEntry[] = [];\n}\n\nexport class WorkflowRegistry {\n    constructor(public readonly workflows: WorkflowDefinition<any>[]) {\n    }\n\n    public get(name: string): WorkflowDefinition<any> {\n        for (const w of this.workflows) {\n            if (w.name === name) return w;\n        }\n\n        throw new Error(`Workflow with name ${name} does not exist`);\n    }\n\n    public add(workflow: WorkflowDefinition<any>) {\n        this.workflows.push(workflow);\n    }\n}\n\nexport interface ConfigLoader {\n    load(module: AppModule<any>, config: { [name: string]: any }, schema: ReflectionClass<any>): void;\n}\n\nexport class ServiceContainer {\n    public readonly cliControllerRegistry = new CliControllerRegistry;\n    public readonly middlewareRegistry = new MiddlewareRegistry;\n    public readonly workflowRegistry = new WorkflowRegistry([]);\n\n    protected injectorContext?: InjectorContext;\n\n    //todo: move that to EventModule\n    protected eventDispatcher: EventDispatcher;\n\n    protected configLoaders: ConfigLoader[] = [];\n\n    /**\n     * All modules in the whole module tree.\n     * This is stored to call service container hooks like processController/processProvider.\n     */\n    protected modules = new Set<AppModule<any>>();\n\n    constructor(\n        public appModule: AppModule<any>\n    ) {\n        this.eventDispatcher = new EventDispatcher(this.injectorContext);\n    }\n\n    addConfigLoader(loader: ConfigLoader) {\n        this.configLoaders.push(loader);\n    }\n\n    /**\n     * Builds the whole module tree, processes all providers, controllers, and listeners.\n     * Makes InjectorContext available. Is usually automatically called when the injector is requested.\n     */\n    public process() {\n        if (this.injectorContext) return;\n\n        this.appModule.addProvider({ provide: ServiceContainer, useValue: this });\n        this.appModule.addProvider({ provide: EventDispatcher, useValue: this.eventDispatcher });\n        this.appModule.addProvider({ provide: CliControllerRegistry, useValue: this.cliControllerRegistry });\n        this.appModule.addProvider({ provide: MiddlewareRegistry, useValue: this.middlewareRegistry });\n        this.appModule.addProvider({ provide: InjectorContext, useFactory: () => this.injectorContext! });\n        this.appModule.addProvider({ provide: Stopwatch });\n        this.appModule.addProvider(ConsoleTransport);\n        if (!this.appModule.isProvided(Logger)) {\n            this.appModule.addProvider({ provide: Logger, useFactory: (t: ConsoleTransport) => new Logger([t]) });\n        }\n        this.appModule.addProvider(ScopedLogger);\n\n        this.setupHook(this.appModule);\n        this.findModules(this.appModule);\n\n        this.processModule(this.appModule);\n\n        this.postProcess();\n\n        this.injectorContext = new InjectorContext(this.appModule);\n        this.injectorContext.getRootInjector(); //trigger all injector builds\n        this.bootstrapModules();\n    }\n\n    protected postProcess() {\n        for (const m of this.modules) {\n            m.postProcess();\n        }\n    }\n\n    protected findModules(module: AppModule<any>) {\n        if (this.modules.has(module)) return;\n        this.modules.add(module);\n\n        for (const m of module.getImports()) {\n            this.findModules(m);\n        }\n    }\n\n    public getInjectorContext(): InjectorContext {\n        this.process();\n        return this.injectorContext!;\n    }\n\n    private setupHook(module: AppModule<any>) {\n        let config = module.getConfig();\n\n        if (module.configDefinition) {\n            const schema = ReflectionClass.from(module.configDefinition);\n            for (const loader of this.configLoaders) {\n                loader.load(module, config, schema);\n            }\n\n            //config loads can set arbitrary values (like string for numbers), so we try deserialize them automatically\n            Object.assign(config, deserialize(config, undefined, undefined, undefined, schema.type));\n\n            for (const setupConfig of module.setupConfigs) setupConfig(module, config);\n\n            //at this point, no deserialization needs to happen anymore, so validation happens on the config object itself.\n            const errors = validate(config, schema.type);\n            if (errors.length) {\n                const errorsMessage = errors.map(v => v.toString(module.getName())).join(', ');\n                throw new ConfigurationInvalidError(`Configuration for module ${module.getName() || 'root'} is invalid. Make sure the module is correctly configured. Error: ` + errorsMessage);\n            }\n        }\n\n        module.process();\n\n        for (const setup of module.setups) setup(module, config);\n\n        for (const importModule of module.getImports()) {\n            this.setupHook(importModule);\n        }\n        return module;\n    }\n\n    protected bootstrapModules(): void {\n        for (const module of this.modules) {\n            if (module.options.bootstrap) {\n                this.getInjector(module).get(module.options.bootstrap);\n            }\n\n            for (const use of module.uses) {\n                const resolvedFunction = injectedFunction(use, this.getInjector(module));\n                resolvedFunction();\n            }\n        }\n    }\n\n    public getInjector<T extends AppModule<any>>(moduleOrClass: ClassType<T> | T): Injector {\n        this.process();\n        if (!isClass(moduleOrClass)) return this.getInjectorContext().getInjector(moduleOrClass);\n\n        for (const m of this.modules) {\n            if (m instanceof moduleOrClass) {\n                return this.getInjectorContext().getInjector(m);\n            }\n        }\n        throw new Error(`No module loaded from type ${getClassName(moduleOrClass)}`);\n    }\n\n    public getModule(moduleClass: ClassType<AppModule<any>>): AppModule<any> {\n        this.process();\n        for (const m of this.modules) {\n            if (m instanceof moduleClass) {\n                return m;\n            }\n        }\n        throw new Error(`No module loaded from type ${getClassName(moduleClass)}`);\n    }\n\n    /**\n     * Returns all known instantiated modules.\n     */\n    getModules(): AppModule<any>[] {\n        this.process();\n        return [...this.modules];\n    }\n\n    public getRootInjector(): Injector {\n        this.process();\n        return this.getInjectorContext().getInjector(this.appModule);\n    }\n\n    protected processModule(\n        module: AppModule<ModuleDefinition>\n    ): void {\n        if (module.injector) {\n            throw new Error(`Module ${getClassName(module)} (id=${module.name}) was already imported. Can not re-use module instances.`);\n        }\n\n        const providers = module.getProviders();\n        const controllers = module.getControllers();\n        const commands = module.getCommands();\n        const listeners = module.getListeners();\n        const middlewares = module.getMiddlewares();\n\n        if (module.options.bootstrap && !isFunction(module.options.bootstrap) && !module.isProvided(module.options.bootstrap)) {\n            providers.push(module.options.bootstrap);\n        }\n\n        for (const w of module.getWorkflows()) this.workflowRegistry.add(w);\n\n        for (const middleware of middlewares) {\n            const config = middleware();\n\n            for (const fnOrClassTye of config.getClassTypes()) {\n                if (!isClass(fnOrClassTye)) continue;\n                if (!isProvided(providers, fnOrClassTye)) {\n                    providers.unshift(fnOrClassTye);\n                }\n            }\n            this.middlewareRegistry.configs.push({ config, module });\n        }\n\n        for (const controller of controllers) {\n            this.processController(module, { module, controller });\n        }\n\n        for (const command of commands) {\n            this.processController(module, { module, for: 'cli', ...command });\n        }\n\n        for (const provider of providers) {\n            this.processProvider(module, resolveToken(provider), provider);\n        }\n\n        for (const listener of listeners) {\n            if (isClass(listener)) {\n                providers.unshift({ provide: listener });\n                for (const listenerEntry of this.eventDispatcher.registerListener(listener, module)) {\n                    this.processListener(module, listenerEntry);\n                }\n            } else {\n                const listenerObject = { fn: listener.callback, order: listener.order, module: listener.module || module };\n                this.eventDispatcher.add(listener.eventToken, listenerObject);\n                this.processListener(module, { eventToken: listener.eventToken, listener: listenerObject });\n            }\n        }\n\n        for (const imp of module.getImports()) {\n            if (!imp) continue;\n            this.processModule(imp);\n        }\n    }\n\n    protected processListener(module: AppModule<any>, listener: EventListenerRegistered) {\n        const addedListener: AddedListener = {\n            eventToken: listener.eventToken,\n            reflection: isEventListenerContainerEntryCallback(listener.listener)\n                ? ReflectionFunction.from(listener.listener.fn) : ReflectionClass.from(listener.listener.classType).getMethod(listener.listener.methodName),\n            module: listener.listener.module,\n            order: listener.listener.order,\n        };\n        for (const m of this.modules) {\n            m.processListener(module, addedListener);\n        }\n    }\n\n    protected processController(module: AppModule<any>, controller: ControllerConfig) {\n        let name = controller.name || '';\n        if (controller.controller) {\n\n            if (!name) {\n                const cliConfig = cli._fetch(controller.controller);\n                if (cliConfig) {\n                    controller.name = name || cliConfig.name || '';\n\n                    //make sure CLI controllers are provided in cli scope\n                    if (!module.isProvided(controller.controller)) {\n                        module.addProvider({ provide: controller.controller, scope: 'cli' });\n                    }\n                    this.cliControllerRegistry.controllers.push(controller);\n                }\n            }\n\n        } else if (controller.for === 'cli') {\n            this.cliControllerRegistry.controllers.push(controller);\n        }\n\n        for (const m of this.modules) {\n            m.processController(module, controller);\n        }\n    }\n\n    protected processProvider(module: AppModule<any>, token: Token, provider: ProviderWithScope) {\n        for (const m of this.modules) {\n            m.processProvider(module, token, provider);\n        }\n    }\n}\n"],"names":[],"mappings":";;;;;;;;6BAU6D,eAAe;mDAE4B,aAAa;0DADrB,gBAAgB;;AAYhH,OAAO,EAAE,GAAG,EAAE,MAAM,cAAc,CAAC;;;AAGnC,OAAO,EAAE,gBAAgB,EAAE,MAAM,EAAE,YAAY,EAAE,MAAM,iBAAiB,CAAC;;AAFzE,OAAO,EAAE,kBAAkB,EAAE,MAAM,mBAAmB,CAAC;AACvD,OAAO,EAAE,WAAW,EAAE,eAAe,EAAE,kBAAkB,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AAd3F,OAAO,EAAE,eAAe,EAA2B,qCAAqC,EAAE,MAAM,gBAAgB,CAAC;AAEjH,OAAO,EACH,gBAAgB,EAChB,QAAQ,EACR,eAAe,EAEf,UAAU,EAEV,YAAY,GAEf,MAAM,mBAAmB,CAAC;AAK3B,OAAO,EAAE,SAAS,EAAE,MAAM,oBAAoB,CAAC;;;;AA3B/C;;;;;;;;GAQG,CAEH,OAAO,EAAa,YAAY,EAAE,OAAO,EAAE,UAAU,EAAE,MAAM,eAAe,CAAC;;;;;;;;;;;;;;;;;;;AA8BvE,MAAO,qBAAqB;IAAlC,aAAA;QACoB,IAAA,CAAA,WAAW,GAAuB,EAAE,CAAC;KACxD;;;;;;eADqD,EAAE;IAAA;IAAA;IAAA;CAAA;;;;;;;;;;AAKlD,MAAO,kBAAkB;IAA/B,aAAA;QACoB,IAAA,CAAA,OAAO,GAA8B,EAAE,CAAC;KAC3D;;;;;;eADwD,EAAE;IAAA;IAAA;IAAA;CAAA;AAGrD,MAAO,gBAAgB;IACzB,YAA4B,SAAoC,CAAA;QAApC,IAAA,CAAA,SAAS,GAAT,SAAS,CAA2B;IAChE,CAAC;IAEM,GAAG,CAAC,IAAY,EAAA;QACnB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,SAAS,CAAE,CAAC;YAC7B,IAAI,CAAC,CAAC,IAAI,KAAK,IAAI,EAAE,OAAO,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,IAAI,KAAK,CAAC,CAAA,mBAAA,EAAsB,IAAI,CAAA,eAAA,CAAiB,CAAC,CAAC;IACjE,CAAC;IAEM,GAAG,CAAC,QAAiC,EAAA;QACxC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IAClC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;AAOC,MAAO,gBAAgB;IAkBzB,YACW,SAAyB,CAAA;QAAzB,IAAA,CAAA,SAAS,GAAT,SAAS,CAAgB;QAlBpB,IAAA,CAAA,qBAAqB,GAAG,IAAI,qBAAqB,CAAC;QAClD,IAAA,CAAA,kBAAkB,GAAG,IAAI,kBAAkB,CAAC;QAC5C,IAAA,CAAA,gBAAgB,GAAG,IAAI,gBAAgB,CAAC,EAAE,CAAC,CAAC;QAOlD,IAAA,CAAA,aAAa,GAAmB,EAAE,CAAC;QAE7C;;;WAGG,CACO,IAAA,CAAA,OAAO,GAAA,CAAO,GAAG,CAAA,CAAA,GAAA;YAAA;gBAAA,IAAA,gKAAA,CAAA,YAAA;gBAAA;aAAA;SAAA,EAAP,IAAI,GAAG,EAAkB,EAAC;QAK1C,IAAI,CAAC,eAAe,GAAG,sKAAI,kBAAe,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;IACrE,CAAC;IAED,eAAe,CAAC,MAAoB,EAAA;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAED;;;OAGG,CACI,OAAO,GAAA;QACV,IAAI,IAAI,CAAC,eAAe,EAAE,OAAO;QAEjC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,EAAE,gBAAgB;YAAE,QAAQ,EAAE,IAAI;QAAA,CAAE,CAAC,CAAC;QAC1E,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,oKAAE,kBAAe;YAAE,QAAQ,EAAE,IAAI,CAAC,eAAe;QAAA,CAAE,CAAC,CAAC;QACzF,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,EAAE,qBAAqB;YAAE,QAAQ,EAAE,IAAI,CAAC,qBAAqB;QAAA,CAAE,CAAC,CAAC;QACrG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,EAAE,kBAAkB;YAAE,QAAQ,EAAE,IAAI,CAAC,kBAAkB;QAAA,CAAE,CAAC,CAAC;QAC/F,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,0KAAE,kBAAe;YAAE,UAAU,EAAE,GAAG,CAAG,CAAD,GAAK,CAAC,eAAgB;QAAA,CAAE,CAAC,CAAC;QAClG,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;YAAE,OAAO,4KAAE,YAAS;QAAA,CAAE,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,CAAC,WAAW,qKAAC,mBAAgB,CAAC,CAAC;QAC7C,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,UAAU,oKAAC,UAAM,CAAC,EAAE,CAAC;YACrC,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;gBAAE,OAAO,sKAAE,SAAM;gBAAE,UAAU,EAAA,aAAE,CAAC,CAAmB,EAAE,CAAG,CAAD,uKAAK,SAAM,CAAC;wBAAC,CAAC;qBAAC,CAAC,EAAA;oBAAA,IAAA,mKAAA,CAAA,mBAAA;oBAAA;oBAAA;oBAAA;iBAAA,CAAA;YAAA,CAAE,CAAC,CAAC;QAC1G,CAAC;QACD,IAAI,CAAC,SAAS,CAAC,WAAW,qKAAC,eAAY,CAAC,CAAC;QAEzC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC/B,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEnC,IAAI,CAAC,WAAW,EAAE,CAAC;QAEnB,IAAI,CAAC,eAAe,GAAG,4KAAI,kBAAe,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3D,IAAI,CAAC,eAAe,CAAC,eAAe,EAAE,CAAC,CAAC,6BAA6B;QACrE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC5B,CAAC;IAES,WAAW,GAAA;QACjB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,CAAC,CAAC,WAAW,EAAE,CAAC;QACpB,CAAC;IACL,CAAC;IAES,WAAW,CAAC,MAAsB,EAAA;QACxC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,OAAO;QACrC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAEzB,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,UAAU,EAAE,CAAE,CAAC;YAClC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;QACxB,CAAC;IACL,CAAC;IAEM,kBAAkB,GAAA;QACrB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,eAAgB,CAAC;IACjC,CAAC;IAEO,SAAS,CAAC,MAAsB,EAAA;QACpC,IAAI,MAAM,GAAG,MAAM,CAAC,SAAS,EAAE,CAAC;QAEhC,IAAI,MAAM,CAAC,gBAAgB,EAAE,CAAC;YAC1B,MAAM,MAAM,uLAAG,kBAAe,CAAC,IAAI,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC;YAC7D,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,CAAE,CAAC;gBACtC,MAAM,CAAC,IAAI,CAAC,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,CAAC;YACxC,CAAC;YAED,2GAA2G;YAC3G,MAAM,CAAC,MAAM,CAAC,MAAM,sLAAE,cAAA,AAAW,EAAC,MAAM,EAAE,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;YAEzF,KAAK,MAAM,WAAW,IAAI,MAAM,CAAC,YAAY,CAAE,WAAW,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;YAE3E,+GAA+G;YAC/G,MAAM,MAAM,4KAAG,WAAA,AAAQ,EAAC,MAAM,EAAE,MAAM,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,MAAM,CAAC,MAAM,EAAE,CAAC;gBAChB,MAAM,aAAa,GAAG,MAAM,CAAC,GAAG,CAAA,cAAC,CAAC,CAAC,EAAE,AAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,OAAO,EAAE,CAAC,EAAA;oBAAA;oBAAA;oBAAA;iBAAA,EAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;gBAC/E,MAAM,IAAI,6LAAyB,CAAC,CAAA,yBAAA,EAA4B,MAAM,CAAC,OAAO,EAAE,IAAI,MAAM,CAAA,kEAAA,CAAoE,GAAG,aAAa,CAAC,CAAC;YACpL,CAAC;QACL,CAAC;QAED,MAAM,CAAC,OAAO,EAAE,CAAC;QAEjB,KAAK,MAAM,KAAK,IAAI,MAAM,CAAC,MAAM,CAAE,KAAK,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QAEzD,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,UAAU,EAAE,CAAE,CAAC;YAC7C,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACjC,CAAC;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAES,gBAAgB,GAAA;QACtB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAChC,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,EAAE,CAAC;gBAC3B,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;YAC3D,CAAC;YAED,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAE,CAAC;gBAC5B,MAAM,gBAAgB,+KAAG,mBAAA,AAAgB,EAAC,GAAG,EAAE,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;gBACzE,gBAAgB,EAAE,CAAC;YACvB,CAAC;QACL,CAAC;IACL,CAAC;IAEM,WAAW,CAA2B,aAA+B,EAAA;QACxE,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,qKAAC,UAAA,AAAO,EAAC,aAAa,CAAC,EAAE,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAEzF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,aAAa,EAAE,CAAC;gBAC7B,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC;YACpD,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,CAAA,2BAAA,sKAA8B,eAAA,AAAY,EAAC,aAAa,CAAC,EAAE,CAAC,CAAC;IACjF,CAAC;IAEM,SAAS,CAAC,WAAsC,EAAA;QACnD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,IAAI,CAAC,YAAY,WAAW,EAAE,CAAC;gBAC3B,OAAO,CAAC,CAAC;YACb,CAAC;QACL,CAAC;QACD,MAAM,IAAI,KAAK,CAAC,CAAA,2BAAA,sKAA8B,eAAA,AAAY,EAAC,WAAW,CAAC,EAAE,CAAC,CAAC;IAC/E,CAAC;IAED;;OAEG,CACH,UAAU,GAAA;QACN,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,CAAC;eAAG,IAAI,CAAC,OAAO;SAAC,CAAC;IAC7B,CAAC;IAEM,eAAe,GAAA;QAClB,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,OAAO,IAAI,CAAC,kBAAkB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IACjE,CAAC;IAES,aAAa,CACnB,MAAmC,EAAA;QAEnC,IAAI,MAAM,CAAC,QAAQ,EAAE,CAAC;YAClB,MAAM,IAAI,KAAK,CAAC,CAAA,OAAA,sKAAU,eAAA,AAAY,EAAC,MAAM,CAAC,CAAA,KAAA,EAAQ,MAAM,CAAC,IAAI,CAAA,wDAAA,CAA0D,CAAC,CAAC;QACjI,CAAC;QAED,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACxC,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAC5C,MAAM,QAAQ,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QACtC,MAAM,SAAS,GAAG,MAAM,CAAC,YAAY,EAAE,CAAC;QACxC,MAAM,WAAW,GAAG,MAAM,CAAC,cAAc,EAAE,CAAC;QAE5C,IAAI,MAAM,CAAC,OAAO,CAAC,SAAS,IAAI,qKAAC,aAAA,AAAU,EAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,EAAE,CAAC;YACpH,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC7C,CAAC;QAED,KAAK,MAAM,CAAC,IAAI,MAAM,CAAC,YAAY,EAAE,CAAE,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;QAEpE,KAAK,MAAM,UAAU,IAAI,WAAW,CAAE,CAAC;YACnC,MAAM,MAAM,GAAG,UAAU,EAAE,CAAC;YAE5B,KAAK,MAAM,YAAY,IAAI,MAAM,CAAC,aAAa,EAAE,CAAE,CAAC;gBAChD,IAAI,qKAAC,UAAA,AAAO,EAAC,YAAY,CAAC,EAAE,SAAS;gBACrC,IAAI,2KAAC,aAAA,AAAU,EAAC,SAAS,EAAE,YAAY,CAAC,EAAE,CAAC;oBACvC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC;gBACpC,CAAC;YACL,CAAC;YACD,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC;gBAAE,MAAM;gBAAE,MAAM;YAAA,CAAE,CAAC,CAAC;QAC7D,CAAC;QAED,KAAK,MAAM,UAAU,IAAI,WAAW,CAAE,CAAC;YACnC,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;gBAAE,MAAM;gBAAE,UAAU;YAAA,CAAE,CAAC,CAAC;QAC3D,CAAC;QAED,KAAK,MAAM,OAAO,IAAI,QAAQ,CAAE,CAAC;YAC7B,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE;gBAAE,MAAM;gBAAE,GAAG,EAAE,KAAK;gBAAE,GAAG,OAAO;YAAA,CAAE,CAAC,CAAC;QACvE,CAAC;QAED,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAE,CAAC;YAC/B,IAAI,CAAC,eAAe,CAAC,MAAM,8KAAE,eAAA,AAAY,EAAC,QAAQ,CAAC,EAAE,QAAQ,CAAC,CAAC;QACnE,CAAC;QAED,KAAK,MAAM,QAAQ,IAAI,SAAS,CAAE,CAAC;YAC/B,wKAAI,UAAA,AAAO,EAAC,QAAQ,CAAC,EAAE,CAAC;gBACpB,SAAS,CAAC,OAAO,CAAC;oBAAE,OAAO,EAAE,QAAQ;gBAAA,CAAE,CAAC,CAAC;gBACzC,KAAK,MAAM,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC,gBAAgB,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAE,CAAC;oBAClF,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;gBAChD,CAAC;YACL,CAAC,MAAM,CAAC;gBACJ,MAAM,cAAc,GAAG;oBAAE,EAAE,EAAE,QAAQ,CAAC,QAAQ;oBAAE,KAAK,EAAE,QAAQ,CAAC,KAAK;oBAAE,MAAM,EAAE,QAAQ,CAAC,MAAM,IAAI,MAAM;gBAAA,CAAE,CAAC;gBAC3G,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,QAAQ,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;gBAC9D,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE;oBAAE,UAAU,EAAE,QAAQ,CAAC,UAAU;oBAAE,QAAQ,EAAE,cAAc;gBAAA,CAAE,CAAC,CAAC;YAChG,CAAC;QACL,CAAC;QAED,KAAK,MAAM,GAAG,IAAI,MAAM,CAAC,UAAU,EAAE,CAAE,CAAC;YACpC,IAAI,CAAC,GAAG,EAAE,SAAS;YACnB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;QAC5B,CAAC;IACL,CAAC;IAES,eAAe,CAAC,MAAsB,EAAE,QAAiC,EAAA;QAC/E,MAAM,aAAa,GAAkB;YACjC,UAAU,EAAE,QAAQ,CAAC,UAAU;YAC/B,UAAU,GAAE,6MAAA,AAAqC,EAAC,QAAQ,CAAC,QAAQ,CAAC,uLAC9D,qBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,qLAAC,kBAAe,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,UAAU,CAAC;YAC/I,MAAM,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM;YAChC,KAAK,EAAE,QAAQ,CAAC,QAAQ,CAAC,KAAK;SACjC,CAAC;QACF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,aAAa,CAAC,CAAC;QAC7C,CAAC;IACL,CAAC;IAES,iBAAiB,CAAC,MAAsB,EAAE,UAA4B,EAAA;QAC5E,IAAI,IAAI,GAAG,UAAU,CAAC,IAAI,IAAI,EAAE,CAAC;QACjC,IAAI,UAAU,CAAC,UAAU,EAAE,CAAC;YAExB,IAAI,CAAC,IAAI,EAAE,CAAC;gBACR,MAAM,SAAS,GAAG,wKAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;gBACpD,IAAI,SAAS,EAAE,CAAC;oBACZ,UAAU,CAAC,IAAI,GAAG,IAAI,IAAI,SAAS,CAAC,IAAI,IAAI,EAAE,CAAC;oBAE/C,qDAAqD;oBACrD,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,CAAC;wBAC5C,MAAM,CAAC,WAAW,CAAC;4BAAE,OAAO,EAAE,UAAU,CAAC,UAAU;4BAAE,KAAK,EAAE,KAAK;wBAAA,CAAE,CAAC,CAAC;oBACzE,CAAC;oBACD,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBAC5D,CAAC;YACL,CAAC;QAEL,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,KAAK,KAAK,EAAE,CAAC;YAClC,IAAI,CAAC,qBAAqB,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAC5D,CAAC;QAED,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,CAAC,CAAC,iBAAiB,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;QAC5C,CAAC;IACL,CAAC;IAES,eAAe,CAAC,MAAsB,EAAE,KAAY,EAAE,QAA2B,EAAA;QACvF,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,OAAO,CAAE,CAAC;YAC3B,CAAC,CAAC,eAAe,CAAC,MAAM,EAAE,KAAK,EAAE,QAAQ,CAAC,CAAC;QAC/C,CAAC;IACL,CAAC;;;;;;;;;;eA9PyC,EAAE;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA;IAAA,IAAA;IAAA;IAAA;IAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA;IAAA,IAAA,uKAAA,CAAA,kBAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA;IAAA,IAAA,+JAAA,CAAA,eAAA;IAAA;IAAA,IAAA,uKAAA,CAAA,WAAA;IAAA;IAAA,IAAA,+JAAA,CAAA,eAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA,IAAA,uKAAA,CAAA,WAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,sBAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA,IAAA,iKAAA,CAAA,6BAAA;IAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA;IAAA;IAAA,IAAA,gKAAA,CAAA,YAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;IAAA;CAAA"}},
    {"offset": {"line": 1854, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1860, "column": 0}, "map": {"version":3,"file":"configuration.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/configuration.ts"],"sourcesContent":["/*\n * Deepkit Framework\n * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the MIT License.\n *\n * You should have received a copy of the MIT License along with this program.\n */\n\nimport { isAbsolute, join } from 'path';\nimport { existsSync, readFileSync } from 'fs';\n\nclass ConfigOptionNotFound extends Error {\n}\n\nexport function resolveEnvFilePath(path: string): string | undefined {\n    const resolvedPath = isAbsolute(path) ? path : findFileUntilPackageRoot(path);\n    if (!resolvedPath || !existsSync(resolvedPath)) return undefined;\n\n    return resolvedPath;\n}\n\nfunction findFileUntilPackageRoot(fileName: string): string | undefined {\n    let dir = process.cwd();\n    while (true) {\n        const candidate = join(dir, fileName);\n        if (existsSync(candidate)) {\n            return candidate;\n        }\n\n        // reached root, so stop\n        if (existsSync(join(dir, 'package.json'))) return;\n\n        const next = join(dir, '../');\n        if (next === dir) return; //reached root\n        dir = next;\n    }\n}\n\nexport class EnvConfiguration {\n    protected container: { [name: string]: any } = {};\n\n    /**\n     * Reads a .env file from given path, based to basePath.\n     */\n    public loadEnvFile(path: string): boolean {\n        const resolvedPath = resolveEnvFilePath(path);\n        if (!resolvedPath) return false;\n\n        const RE_INI_KEY_VAL = /^\\s*([\\w.-]+)\\s*=\\s*(.*)?\\s*$/;\n\n        const content = readFileSync(resolvedPath);\n        for (const line of content.toString('utf8').split('\\n')) {\n            const keyValueArr = line.match(RE_INI_KEY_VAL);\n            if (!keyValueArr) continue;\n\n            const key = keyValueArr[1];\n            let value = keyValueArr[2] || '';\n            const end = value.length - 1;\n\n            const isDoubleQuoted = value[0] === '\"' && value[end] === '\"';\n            const isSingleQuoted = value[0] === '\\'' && value[end] === '\\'';\n\n            // if single or double quoted, remove quotes\n            if (isSingleQuoted) {\n                value = value.substring(1, end);\n            } else if (isDoubleQuoted) {\n                value = JSON.parse(value);\n            } else {\n                value = value.trim();\n            }\n\n            this.container[key] = value;\n        }\n        return true;\n    }\n\n    public getKeys(): string[] {\n        return Object.keys(this.container);\n    }\n\n    public getAll(): { [name: string]: any } {\n        return this.container;\n    }\n\n    /**\n     * Returns the value for a configuration option.\n     *\n     * Priority is first process.env, then manually set options, then values from the loaded env file.\n     */\n    public get<T = any>(name: string): T {\n        if (process.env[name] !== undefined) return process.env[name] as any;\n\n        if (this.container[name] !== undefined) return this.container[name];\n\n        throw new ConfigOptionNotFound(`Config option ${name} not found.`);\n    }\n\n    /**\n     * Sets an option value. If a env file has been read, it will be overwritten.\n     */\n    public set(name: string, value: any) {\n        this.container[name] = value;\n    }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1980, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1986, "column": 0}, "map": {"version":3,"file":"app.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/app.ts"],"sourcesContent":["/*\n * Deepkit Framework\n * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt\n *\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the MIT License.\n *\n * You should have received a copy of the MIT License along with this program.\n */\n\nimport { ClassType, ExtractClassType, isFunction, isObject, pathBasename, setPathValue } from '@deepkit/core';\nimport { ConfigLoader, ServiceContainer } from './service-container.js';\nimport { ConfigureProviderOptions, InjectorContext, ResolveToken, Token } from '@deepkit/injector';\nimport { AppModule, RootModuleDefinition } from './module.js';\nimport { EnvConfiguration } from './configuration.js';\nimport { DataEventToken, EventDispatcher, EventListener, EventListenerCallback, EventOfEventToken, EventToken } from '@deepkit/event';\nimport { ReceiveType, ReflectionClass, ReflectionKind } from '@deepkit/type';\nimport { Logger } from '@deepkit/logger';\nimport { executeCommand, getArgsFromEnvironment, getBinFromEnvironment } from './command.js';\n\nexport function setPartialConfig(target: { [name: string]: any }, partial: { [name: string]: any }, incomingPath: string = '') {\n    for (const i in partial) {\n        const path = (incomingPath ? incomingPath + '.' : '') + i;\n        if (isObject(partial[i])) {\n            setPartialConfig(target, partial[i], path);\n        } else {\n            setPathValue(target, path, partial[i]);\n        }\n    }\n}\n\ntype EnvNamingStrategy = 'same' | 'upper' | 'lower' | ((name: string) => string | 'same' | 'upper' | 'lower' | undefined);\n\nfunction camelToUpperCase(str: string) {\n    return str.replace(/[A-Z]+/g, (letter: string) => `_${letter.toUpperCase()}`).toUpperCase();\n}\n\nfunction camelToLowerCase(str: string) {\n    return str.replace(/[A-Z]+/g, (letter: string) => `_${letter.toLowerCase()}`).toLowerCase();\n}\n\nfunction convertNameStrategy(namingStrategy: EnvNamingStrategy, name: string): string {\n    const strategy = isFunction(namingStrategy) ? namingStrategy(name) || 'same' : namingStrategy;\n    if (strategy === 'upper') {\n        return camelToUpperCase(name);\n    } else if (strategy === 'lower') {\n        return camelToLowerCase(name);\n    } else if (strategy === 'same') {\n        return name;\n    } else {\n        return strategy;\n    }\n}\n\nfunction parseEnv(\n    config: { [name: string]: any },\n    prefix: string,\n    schema: ReflectionClass<any>,\n    incomingDotPath: string,\n    incomingEnvPath: string,\n    namingStrategy: EnvNamingStrategy,\n    envContainer: { [name: string]: any },\n) {\n    for (const property of schema.getProperties()) {\n        const name = convertNameStrategy(namingStrategy, property.name);\n\n        if (property.type.kind === ReflectionKind.class || property.type.kind === ReflectionKind.objectLiteral) {\n            parseEnv(\n                config,\n                prefix,\n                ReflectionClass.from(property.type),\n                (incomingDotPath ? incomingDotPath + '.' : '') + property.name,\n                (incomingEnvPath ? incomingEnvPath + '_' : '') + name,\n                namingStrategy,\n                envContainer,\n            );\n        } else {\n            const dotPath = (incomingDotPath ? incomingDotPath + '.' : '') + property.name;\n            const envName = prefix + (incomingEnvPath ? incomingEnvPath + '_' : '') + name;\n\n            if (envContainer[envName] === undefined) continue;\n\n            setPathValue(config, dotPath, envContainer[envName]);\n        }\n    }\n}\n\n/**\n * Options for configuring an instance of the EnvConfigLoader\n */\ninterface EnvConfigOptions {\n    /**\n     * A path or paths to optional .env files that will be processed and mapped to app/module config\n     */\n    envFilePath?: string | string[],\n    /**\n     * A naming strategy for converting env variables to app/module config. Defaults to 'upper'.\n     * For example, allows converting DB_HOST to dbHost\n     */\n    namingStrategy?: EnvNamingStrategy,\n    /**\n     * A prefix for environment variables that helps to avoid potential collisions\n     * By default this will be set to APP_\n     *\n     * Eg.\n     * APP_DATABASE_URL=\"mongodb://localhost/mydb\" will be mapped to databaseUrl when using the upper\n     * naming strategy\n     *\n     */\n    prefix?: string\n}\n\nconst defaultEnvConfigOptions: Required<EnvConfigOptions> = {\n    prefix: 'APP_',\n    envFilePath: ['.env'],\n    namingStrategy: 'upper',\n};\n\nclass EnvConfigLoader {\n    private readonly prefix: string;\n    private readonly envFilePaths: string[];\n    private readonly namingStrategy: EnvNamingStrategy;\n\n    constructor(options?: EnvConfigOptions) {\n        const normalizedOptions = {\n            ...defaultEnvConfigOptions,\n            ...options,\n        };\n\n        const { prefix, envFilePath, namingStrategy } = normalizedOptions;\n\n        this.prefix = prefix;\n        this.envFilePaths = Array.isArray(envFilePath) ? envFilePath : [envFilePath];\n        this.namingStrategy = namingStrategy;\n    }\n\n    load(module: AppModule<any>, config: { [p: string]: any }, schema: ReflectionClass<any>) {\n        const envConfiguration = new EnvConfiguration();\n        for (const path of this.envFilePaths) {\n            if (envConfiguration.loadEnvFile(path)) break;\n        }\n        const env = Object.assign({}, envConfiguration.getAll());\n        Object.assign(env, process.env);\n\n        parseEnv(config, this.prefix, schema, '', convertNameStrategy(this.namingStrategy, module.name), this.namingStrategy, env);\n    }\n}\n\nexport class RootAppModule<T extends RootModuleDefinition> extends AppModule<T> {\n}\n\nexport interface AppEvent {\n    /**\n     * The command that is about to be executed.\n     */\n    command: string;\n\n    parameters: { [name: string]: any };\n\n    /**\n     * Scoped 'cli' injector context.\n     */\n    injector: InjectorContext;\n}\n\nexport interface AppExecutedEvent extends AppEvent {\n    exitCode: number;\n}\n\n\nexport interface AppErrorEvent extends AppEvent {\n    error: Error;\n}\n\n/**\n * When a CLI command is about to be executed, this event is emitted.\n *\n * This is different to @deepkit/framework's onBootstrap event, which is only executed\n * when the server:start is execute. This event is executed for every CLI command (including server:start).\n */\nexport const onAppExecute = new DataEventToken<AppEvent>('app.execute');\n\n/**\n * When a CLI command is successfully executed, this event is emitted.\n */\nexport const onAppExecuted = new DataEventToken<AppExecutedEvent>('app.executed');\n\n/**\n * When a CLI command failed to execute, this event is emitted.\n */\nexport const onAppError = new DataEventToken<AppErrorEvent>('app.error');\n\n/**\n * When the application is about to shut down, this event is emitted.\n * This is always executed, even when an error occurred. So it's a good place to clean up.\n */\nexport const onAppShutdown = new DataEventToken<AppEvent>('app.shutdown');\n\n/**\n * This is the smallest available application abstraction in Deepkit.\n *\n * It is based on a module and executes registered CLI controllers in `execute`.\n *\n * @deepkit/framework extends that with a more powerful Application class, that contains also HTTP and RPC controllers.\n *\n * You can use this class for more integrated unit-tests.\n */\nexport class App<T extends RootModuleDefinition> {\n    protected envConfigLoader?: EnvConfigLoader;\n\n    public readonly serviceContainer: ServiceContainer;\n\n    public appModule: AppModule<T>;\n\n    constructor(\n        appModuleOptions: T,\n        serviceContainer?: ServiceContainer,\n        appModule?: AppModule<any>,\n    ) {\n        this.appModule = appModule || new RootAppModule(appModuleOptions) as any;\n        this.serviceContainer = serviceContainer || new ServiceContainer(this.appModule);\n    }\n\n    static fromModule<T extends RootModuleDefinition>(module: AppModule<T>): App<T> {\n        return new App({} as T, undefined, module);\n    }\n\n    /**\n     * Allows to change the module after the configuration has been loaded, right before the service container is built.\n     *\n     * This enables you to change the module or its imports depending on the configuration the last time before their services are built.\n     *\n     * At this point no services can be requested as the service container was not built.\n     */\n    setup(...args: Parameters<this['appModule']['setup']>): this {\n        this.appModule = (this.appModule.setup as any)(...args as any[]);\n        return this;\n    }\n\n    /**\n     * Allows to call services before the application bootstraps.\n     *\n     * This enables you to configure modules and request their services.\n     */\n    use(setup: (...args: any[]) => void): this {\n        this.appModule.use(setup);\n        return this;\n    }\n\n    command(name: string | ((...args: any[]) => any), callback?: (...args: any[]) => any): this {\n        callback = isFunction(name) ? name : callback!;\n        name = isFunction(name) ? '' : name;\n        this.appModule.addCommand(name, callback);\n        return this;\n    }\n\n    addConfigLoader(loader: ConfigLoader): this {\n        this.serviceContainer.addConfigLoader(loader);\n        return this;\n    }\n\n    configure(config: Partial<ExtractClassType<T['config']>>): this {\n        this.serviceContainer.appModule.configure(config);\n        return this;\n    }\n\n    listen<T extends EventToken<any>, DEPS extends any[]>(eventToken: T, callback: EventListenerCallback<T['event']>, order: number = 0): this {\n        const listener: EventListener<any> = { callback, order, eventToken };\n        this.appModule.listeners.push(listener);\n        return this;\n    }\n\n    public async dispatch<T extends EventToken<any>>(eventToken: T, event?: EventOfEventToken<T>, injector?: InjectorContext): Promise<void> {\n        return await this.get(EventDispatcher).dispatch(eventToken, event, injector);\n    }\n\n    /**\n     * Loads environment variables and optionally reads from .env files in order to find matching configuration options\n     * in your application and modules in order to set their values.\n     *\n     * Prefixing ENV variables is encouraged to avoid collisions and by default a prefix of APP_ is used\n     * Example:\n     *\n     * APP_databaseUrl=\"mongodb://localhost/mydb\"\n     *\n     * new App({}).loadConfigFromEnvVariables('APP_').run();\n     *\n     *\n     * `envFilePath` can be either an absolute or relative path. For relative paths the first\n     * folder with a package.json starting from process.cwd() upwards is picked.\n     *\n     * So if you use 'local.env' make sure a 'local.env' file is located beside your 'package.json'.\n     *\n     * @param options Configuration options for retrieving configuration from env\n     * @returns\n     */\n    loadConfigFromEnv(options?: EnvConfigOptions): this {\n        this.addConfigLoader(new EnvConfigLoader(options));\n        return this;\n    }\n\n    /**\n     * Loads a JSON encoded environment variable and applies its content to the configuration.\n     *\n     * Example:\n     *\n     * APP_CONFIG={'databaseUrl\": \"mongodb://localhost/mydb\", \"moduleA\": {\"foo\": \"bar'}}\n     *\n     * new App().run().loadConfigFromEnvVariable('APP_CONFIG').run();\n     */\n    loadConfigFromEnvVariable(variableName: string = 'APP_CONFIG'): this {\n        if (!process.env[variableName]) return this;\n\n        this.addConfigLoader({\n            load(module: AppModule<any>, config: { [p: string]: any }, schema: ReflectionClass<any>) {\n                try {\n                    const jsonConfig = JSON.parse(process.env[variableName] || '');\n\n                    setPartialConfig(config, module.name ? jsonConfig[module.name] : jsonConfig);\n                } catch (error) {\n                    throw new Error(`Invalid JSON in env variable ${variableName}. Parse error: ${error}`);\n                }\n            },\n        });\n        return this;\n    }\n\n    async run(argv?: any[], bin?: string[]) {\n        const exitCode = await this.execute(argv, bin);\n        if (exitCode > 0) process.exit(exitCode);\n    }\n\n    get<T>(token?: ReceiveType<T> | Token<T>, moduleOrClass?: AppModule<any> | ClassType<AppModule<any>>): ResolveToken<T> {\n        return this.serviceContainer.getInjector(moduleOrClass || this.appModule).get(token) as ResolveToken<T>;\n    }\n\n    public getInjectorContext(): InjectorContext {\n        return this.serviceContainer.getInjectorContext();\n    }\n\n    /**\n     * @see InjectorModule.configureProvider\n     */\n    configureProvider<T>(configure: (instance: T, ...args: any[]) => any, options: Partial<ConfigureProviderOptions> = {}, type?: ReceiveType<T>): this {\n        this.appModule.configureProvider<T>(configure, options, type);\n        return this;\n    }\n\n    public async execute(argv?: string[], bin?: string[] | string): Promise<number> {\n        const eventDispatcher = this.get(EventDispatcher);\n        const logger = this.get(Logger);\n\n        if ('undefined' !== typeof process) {\n            process.on('unhandledRejection', error => {\n                // Will print \"unhandledRejection err is not defined\"\n                logger.error('unhandledRejection', error);\n            });\n        }\n\n        const scopedInjectorContext = this.getInjectorContext().createChildScope('cli');\n\n        if ('string' !== typeof bin) {\n            bin = bin || getBinFromEnvironment();\n            let binary = pathBasename(bin[0]);\n            let file = pathBasename(bin[1]);\n            bin = `${binary} ${file}`;\n        }\n\n        return await executeCommand(\n            bin, argv || getArgsFromEnvironment(),\n            eventDispatcher, logger,\n            scopedInjectorContext,\n            this.serviceContainer.cliControllerRegistry.controllers,\n        );\n    }\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 2501, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2507, "column": 0}, "map": {"version":3,"file":"utils.js","sources":["turbopack://[project]/node_modules/@deepkit/app/src/utils.ts"],"sourcesContent":["import { getCurrentFileName } from '@deepkit/core';\nimport { existsSync } from 'fs';\nimport { dirname, join, resolve } from 'path';\n\nexport function findParentPath(path: string, origin: string = dirname(getCurrentFileName())): string | undefined {\n    let current = origin;\n\n    while (!existsSync(join(current, path))) {\n        const nextFolder = resolve(current, '..');\n\n        if (nextFolder === current) {\n            return undefined;\n        }\n\n        current = nextFolder;\n    }\n\n    return join(current, path);\n}\n"],"names":[],"mappings":";;;AAAA,OAAO,EAAE,kBAAkB,EAAE,MAAM,eAAe,CAAC;AACnD,OAAO,EAAE,UAAU,EAAE,MAAM,IAAI,CAAC;AAChC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,MAAM,MAAM,CAAC;;;;;AAExC,SAAU,cAAc,CAAC,IAAY,EAAE,2GAAiB,UAAA,AAAO,sKAAC,qBAAA,AAAkB,EAAE,EAAC;IACvF,IAAI,OAAO,GAAG,MAAM,CAAC;IAErB,MAAO,EAAC,4GAAA,AAAU,oGAAC,OAAA,AAAI,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAE,CAAC;QACtC,MAAM,UAAU,qGAAG,UAAA,AAAO,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;QAE1C,IAAI,UAAU,KAAK,OAAO,EAAE,CAAC;YACzB,OAAO,SAAS,CAAC;QACrB,CAAC;QAED,OAAO,GAAG,UAAU,CAAC;IACzB,CAAC;IAED,yGAAO,OAAA,AAAI,EAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AAC/B,CAAC"}},
    {"offset": {"line": 2535, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 2541, "column": 0}, "map": {"version":3,"file":"index.js","sources":["turbopack://[project]/node_modules/@deepkit/app/index.ts"],"sourcesContent":["export * from './src/app.js';\nexport * from './src/command.js';\nexport * from './src/configuration.js';\nexport * from './src/module.js';\nexport * from './src/service-container.js';\nexport * from './src/utils.js';\n"],"names":[],"mappings":""}},
    {"offset": {"line": 2549, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}