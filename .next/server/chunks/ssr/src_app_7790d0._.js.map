{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/tagTableSearch.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\ninterface TagTableProps {\r\n  resetTrigger: boolean;\r\n  onResetHandled: () => void;\r\n  onTagsSelected: (tags: string[]) => void; // Callback to send selected tags to parent\r\n}\r\n\r\nexport default function TagTable({ resetTrigger, onResetHandled, onTagsSelected }: TagTableProps) {\r\n  const [subTags, setSubTags] = useState<string[]>([]);\r\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\r\n  const [topics, setTopics] = useState<any[]>([]);\r\n\r\n  const subTag_View = (selectedValue: \"1\" | \"2\" | \"3\") => {\r\n    const tagOptions = {\r\n      \"1\": [\"Art\", \"Language\", \"Music\"],\r\n      \"2\": [\"Community\", \"Events\", \"Networking\"],\r\n      \"3\": [\"Parenting\", \"Education\", \"Health\"],\r\n    };\r\n\r\n    const newSubTags = tagOptions[selectedValue] || [];\r\n    setSubTags(newSubTags);\r\n  };\r\n\r\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedValue = e.target.value as \"1\" | \"2\" | \"3\";\r\n    subTag_View(selectedValue);\r\n  };\r\n\r\n  const handleCheckboxChange = (tag: string) => {\r\n    setSelectedTags((prevSelectedTags) => {\r\n      const updatedTags = prevSelectedTags.includes(tag)\r\n        ? prevSelectedTags.filter((t) => t !== tag)\r\n        : [...prevSelectedTags, tag];\r\n      return updatedTags;\r\n    });\r\n  };\r\n\r\n  // Notify parent about selected tags after `selectedTags` state updates\r\n  useEffect(() => {\r\n    onTagsSelected(selectedTags);\r\n  }, [selectedTags, onTagsSelected]);\r\n\r\n  // Reset logic when resetTrigger changes\r\n  useEffect(() => {\r\n    if (resetTrigger) {\r\n      setSubTags([]);\r\n      setSelectedTags([]);\r\n      onResetHandled();\r\n    }\r\n  }, [resetTrigger, onResetHandled]);\r\n\r\n  return (\r\n    <div>\r\n      <select className=\"form-select\" aria-label=\"Default select example\" onChange={handleSelectChange}>\r\n        <option value=\"0\">Select a tag</option>\r\n        <option value=\"1\">culture</option>\r\n        <option value=\"2\">social</option>\r\n        <option value=\"3\">family</option>\r\n      </select>\r\n\r\n      {subTags.length > 0 && (\r\n        <div>\r\n          {subTags.map((tag, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={tag}\r\n                name={tag}\r\n                value={tag}\r\n                checked={selectedTags.includes(tag)}\r\n                onChange={() => handleCheckboxChange(tag)}\r\n              />\r\n              <label htmlFor={tag}>{tag}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {selectedTags.length > 0 && (\r\n        <div>\r\n          <h3>Selected Tags:</h3>\r\n          <ul>\r\n            {selectedTags.map((tag, index) => (\r\n              <li key={index}>{tag}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;AAFA;;;AAUe,SAAS,SAAS,EAAE,YAAY,EAAE,cAAc,EAAE,cAAc,EAAiB;IAC9F,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IACnD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAE9C,MAAM,cAAc,CAAC;QACnB,MAAM,aAAa;YACjB,KAAK;gBAAC;gBAAO;gBAAY;aAAQ;YACjC,KAAK;gBAAC;gBAAa;gBAAU;aAAa;YAC1C,KAAK;gBAAC;gBAAa;gBAAa;aAAS;QAC3C;QAEA,MAAM,aAAa,UAAU,CAAC,cAAc,IAAI,EAAE;QAClD,WAAW;IACb;IAEA,MAAM,qBAAqB,CAAC;QAC1B,MAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;QACpC,YAAY;IACd;IAEA,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB,CAAC;YACf,MAAM,cAAc,iBAAiB,QAAQ,CAAC,OAC1C,iBAAiB,MAAM,CAAC,CAAC,IAAM,MAAM,OACrC;mBAAI;gBAAkB;aAAI;YAC9B,OAAO;QACT;IACF;IAEA,uEAAuE;IACvE,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,eAAe;IACjB,GAAG;QAAC;QAAc;KAAe;IAEjC,wCAAwC;IACxC,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,cAAc;YAChB,WAAW,EAAE;YACb,gBAAgB,EAAE;YAClB;QACF;IACF,GAAG;QAAC;QAAc;KAAe;IAEjC,qBACE,8OAAC;;0BACC,8OAAC;gBAAO,WAAU;gBAAc,cAAW;gBAAyB,UAAU;;kCAC5E,8OAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,8OAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,8OAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,8OAAC;wBAAO,OAAM;kCAAI;;;;;;;;;;;;YAGnB,QAAQ,MAAM,GAAG,mBAChB,8OAAC;0BACE,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,8OAAC;;0CACC,8OAAC;gCACC,MAAK;gCACL,IAAI;gCACJ,MAAM;gCACN,OAAO;gCACP,SAAS,aAAa,QAAQ,CAAC;gCAC/B,UAAU,IAAM,qBAAqB;;;;;;0CAEvC,8OAAC;gCAAM,SAAS;0CAAM;;;;;;;uBATd;;;;;;;;;;YAef,aAAa,MAAM,GAAG,mBACrB,8OAAC;;kCACC,8OAAC;kCAAG;;;;;;kCACJ,8OAAC;kCACE,aAAa,GAAG,CAAC,CAAC,KAAK,sBACtB,8OAAC;0CAAgB;+BAAR;;;;;;;;;;;;;;;;;;;;;;AAOvB"}},
    {"offset": {"line": 185, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 191, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/filters/search.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport TagTable from \"../tagTableSearch\";\r\nimport { useState,  useEffect, useMemo } from 'react';\r\nimport { useAppDispatch,useAppSelector } from \"./hooks\";\r\nimport { setSearch } from \"./store\";\r\n\r\n// thoughts\r\n// figure out the function/api to call all subtopics and IDs at once DONE\r\n// array.filter(tag)\r\n    // probably not, since books aren't being rendered within the form\r\n// try: export the checked tags on submit, feed those to the search page.tsx getallbooks\r\n// follow logic from there after\r\n// won't need to submit form? maybe?\r\n\r\nconst SearchBlock : React.FC = () => {\r\n\r\n    const dispatch = useAppDispatch();\r\n    const search = useAppSelector((state) => state.filterSearch.SubtopicName)\r\n\r\n    const [selectedTags,setSelectedTags] = useState<string[]>([]);\r\n    const [resetTrigger, setResetTrigger] = useState(false);\r\n\r\n    const handleResetHandled = () => {\r\n        setResetTrigger(false);\r\n    };\r\n\r\n    /*\r\n    async function searchSubmit (e: React.FormEvent) {\r\n        e.preventDefault();\r\n\r\n        console.log(TagTable)\r\n\r\n        /*selectedTags.map((tag) => {\r\n            myFormData.append(tag, tag)\r\n        })\r\n    \r\n        console.log(\"formdata\", myFormData)\r\n    }*/\r\n\r\n    return (\r\n        <div className = \"flex fixed left-0 h-full bg-slate-200 overscroll-contain w-48 grid grid-cols-1 justify-top\">\r\n            <form>        \r\n                <h2 className=\"grow-0\">Search</h2>\r\n                <TagTable \r\n                    resetTrigger={resetTrigger}\r\n                    onResetHandled={handleResetHandled}\r\n                    onTagsSelected={(e) => dispatch(setSearch(e[0]))}\r\n                />\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\n\r\nexport default SearchBlock;"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;;;;AAJA;;;;;;AAOA,WAAW;AACX,yEAAyE;AACzE,oBAAoB;AAChB,kEAAkE;AACtE,wFAAwF;AACxF,gCAAgC;AAChC,oCAAoC;AAEpC,MAAM,cAAyB;IAE3B,MAAM,WAAW,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD;IAC9B,MAAM,SAAS,CAAA,GAAA,4IAAA,CAAA,iBAAc,AAAD,EAAE,CAAC,QAAU,MAAM,YAAY,CAAC,YAAY;IAExE,MAAM,CAAC,cAAa,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC5D,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,qBAAqB;QACvB,gBAAgB;IACpB;IAEA;;;;;;;;;;;KAWC,GAED,qBACI,8OAAC;QAAI,WAAY;kBACb,cAAA,8OAAC;;8BACG,8OAAC;oBAAG,WAAU;8BAAS;;;;;;8BACvB,8OAAC,2IAAA,CAAA,UAAQ;oBACL,cAAc;oBACd,gBAAgB;oBAChB,gBAAgB,CAAC,IAAM,SAAS,UAAU,CAAC,CAAC,EAAE;;;;;;;;;;;;;;;;;AAKlE;uCAGe"}},
    {"offset": {"line": 269, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}