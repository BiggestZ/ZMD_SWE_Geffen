module.exports = {

"[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "AppModule": (()=>AppModule),
    "ConfigurationInvalidError": (()=>ConfigurationInvalidError),
    "__ΩAppModuleClass": (()=>__ΩAppModuleClass),
    "__ΩCreateModuleDefinition": (()=>__ΩCreateModuleDefinition),
    "__ΩDefaultObject": (()=>__ΩDefaultObject),
    "__ΩExportType": (()=>__ΩExportType),
    "__ΩFunctionalModule": (()=>__ΩFunctionalModule),
    "__ΩFunctionalModuleFactory": (()=>__ΩFunctionalModuleFactory),
    "__ΩListenerType": (()=>__ΩListenerType),
    "__ΩMiddlewareConfig": (()=>__ΩMiddlewareConfig),
    "__ΩMiddlewareFactory": (()=>__ΩMiddlewareFactory),
    "__ΩModuleDefinition": (()=>__ΩModuleDefinition),
    "__ΩRootModuleDefinition": (()=>__ΩRootModuleDefinition),
    "createModule": (()=>createModule),
    "stringifyListener": (()=>stringifyListener)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/serializer.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-ssr] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
;
;
;
;
;
;
;
const __ΩDefaultObject = [
    'T',
    'DefaultObject',
    'l5PMRe$!RPe#!-qk#&QRb!Pde"!p*w"y'
];
;
const __ΩMiddlewareConfig = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'getClassTypes',
    'MiddlewareConfig',
    'PPn!F1"Mw#y'
];
;
const __ΩMiddlewareFactory = [
    ()=>__ΩMiddlewareConfig,
    '',
    'MiddlewareFactory',
    'Pn!/"w#y'
];
;
const __ΩExportType = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩAbstractClassType"],
    ()=>AppModule,
    'Type',
    'NormalizedProvider',
    'ExportType',
    'Pn!&P"7""w#"w$Jw%y'
];
;
function stringifyListener(listener) {
    if (listener.classType) {
        return listener.classType.name + '.' + listener.methodName;
    }
    return listener.reflection.name || 'anonymous function';
}
stringifyListener.__type = [
    'AddedListener',
    'listener',
    'stringifyListener',
    'P"w!2"&/#'
];
const __ΩModuleDefinition = [
    'ProviderWithScope',
    'providers',
    ()=>__ΩExportType,
    'exports',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>Function,
    'bootstrap',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'controllers',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'workflows',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventListener"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'listeners',
    ()=>__ΩMiddlewareFactory,
    'middlewares',
    'ModuleDefinition',
    'PP"w!"w!FJF4"8n#F4$8Pn%Pu&J4\'8n(4)8n*F4+8P"7,F4-8P"o."n/JF408n1F428Mw3y'
];
;
const __ΩCreateModuleDefinition = [
    ()=>__ΩModuleDefinition,
    true,
    'forRoot',
    'imports',
    'CreateModuleDefinition',
    'Pn!."4#8-4$8Mw%y'
];
;
const __ΩFunctionalModule = [
    ()=>AppModule,
    'module',
    '',
    'FunctionalModule',
    'PP"7!2"$/#w$y'
];
;
const __ΩFunctionalModuleFactory = [
    'args',
    ()=>AppModule,
    'module',
    '',
    'FunctionalModuleFactory',
    'P"@2!PP"7"2#$/$/$w%y'
];
;
const __ΩRootModuleDefinition = [
    ()=>__ΩModuleDefinition,
    ()=>AppModule,
    ()=>__ΩFunctionalModule,
    'imports',
    'RootModuleDefinition',
    'Pn!PP"7"n#JF4$8Mw%y'
];
;
class ConfigurationInvalidError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"] {
}
ConfigurationInvalidError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"],
    'ConfigurationInvalidError',
    'P7!5w"'
];
let moduleId = 0;
const __ΩAppModuleClass = [
    'C',
    'PartialDeep',
    'config',
    ()=>AppModule,
    'new',
    'AppModuleClass',
    'b!PP"w"2#8P"e$!7$1%Mw&y'
];
;
function createModule(options, name = '') {
    var _a;
    return _a = class AnonAppModule extends AppModule {
        constructor(config){
            super(options, name);
            if (config) {
                this.configure(config);
            }
        }
    }, _a.__type = [
        ()=>options,
        ()=>AppModule,
        'PartialDeep',
        'config',
        'constructor',
        ()=>options,
        'AnonAppModule',
        'PPdi!h!!qe!!!j7"P"w#2$8"0%5Pdi&h!!qe!!!j6"w\''
    ], _a;
}
createModule.__type = [
    'options',
    'name',
    ()=>"",
    ()=>__ΩAppModuleClass,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    "config",
    'createModule',
    'P"2!&2">#".&fo%"o$"/\''
];
const __ΩListenerType = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventListener"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'ListenerType',
    'P"o!"n"Jw#y'
];
;
class AppModule extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"] {
    constructor(options = {}, name = '', setups = [], id = moduleId++){
        super();
        this.options = options;
        this.name = name;
        this.setups = setups;
        this.id = id;
        this.setupConfigs = [];
        this.imports = [];
        this.controllers = [];
        this.commands = [];
        this.workflows = [];
        this.listeners = [];
        this.middlewares = [];
        this.uses = [];
        if (this.options.imports) for (const m of this.options.imports)this.addModuleImport(m);
        if (this.options.providers) this.providers.push(...this.options.providers.flat());
        if (this.options.exports) this.exports.push(...this.options.exports);
        if (this.options.controllers) this.controllers.push(...this.options.controllers);
        if (this.options.workflows) this.workflows.push(...this.options.workflows);
        if (this.options.listeners) this.listeners.push(...this.options.listeners);
        if (this.options.middlewares) this.middlewares.push(...this.options.middlewares);
        if ('forRoot' in this.options) this.forRoot();
        if (this.options.config) {
            this.setConfigDefinition(this.options.config);
        // this.configDefinition = this.options.config;
        //apply defaults
        // const defaults: any = jsonSerializer.for(this.options.config.schema).deserialize({});
        // //we iterate over so we have the name available on the object, even if its undefined
        // for (const property of this.options.config.schema.getProperties()) {
        //     (this.config as any)[property.name] = defaults[property.name];
        // }
        }
    }
    addModuleImport(m) {
        if (m instanceof AppModule) {
            this.addImport(m);
        } else {
            const module = new AppModule({});
            m(module);
            this.addImport(module);
        }
    }
    /**
     * When all configuration loaders have been loaded, this method is called.
     * It allows to further manipulate the module state depending on the final config.
     */ process() {}
    /**
     * A hook that allows to react on a registered provider in some module.
     */ processProvider(module, token, provider) {}
    /**
     * A hook that allows to react on a registered controller in some module.
     */ processController(module, config) {}
    /**
     * A hook that allows to react on a registered event listeners in some module.
     */ processListener(module, listener) {}
    /**
     * After `process` and when all modules have been processed by the service container.
     * This is also after `processController` and `processProvider` have been called and the full
     * final module tree is known. Adding now new providers or modules doesn't have any effect.
     *
     * Last chance to set up the injector context, via this.setupProvider().
     */ postProcess() {}
    /**
     * Renames this module instance.
     */ rename(name) {
        this.name = name;
        return this;
    }
    getListeners() {
        return this.listeners;
    }
    getWorkflows() {
        return this.workflows;
    }
    getMiddlewares() {
        return this.middlewares;
    }
    getControllers() {
        return this.controllers;
    }
    getCommands() {
        return this.commands;
    }
    addCommand(name, callback) {
        this.assertInjectorNotBuilt();
        this.commands.push({
            name,
            callback
        });
        return this;
    }
    addController(...controller) {
        this.assertInjectorNotBuilt();
        this.controllers.push(...controller);
        return this;
    }
    addListener(...listener) {
        this.assertInjectorNotBuilt();
        for (const l of listener){
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(l)) continue;
            if (this.isProvided(l)) continue;
            this.addProvider(l);
        }
        this.listeners.push(...listener);
        return this;
    }
    addMiddleware(...middlewares) {
        this.middlewares.push(...middlewares);
        return this;
    }
    /**
     * Allows to change the module config before `setup` and bootstrap is called.
     * This is the last step right before the config is validated.
     */ setupConfig(callback) {
        this.setupConfigs.push(callback);
        return this;
    }
    /**
     * Allows to change the module after the configuration has been loaded, right before the service container is built.
     *
     * This enables you to change the module or its imports depending on the configuration the last time before their services are built.
     *
     * At this point no services can be requested as the service container was not built.
     */ setup(callback) {
        this.setups.push(callback);
        return this;
    }
    /**
     * Allows to call services before the application bootstraps.
     *
     * This enables you to configure modules and request their services.
     */ use(callback) {
        this.uses.push(callback);
        return this;
    }
    getImports() {
        return super.getImports();
    }
    getName() {
        return this.name;
    }
    /**
     * Sets configured values.
     */ configure(config) {
        for (const module of this.getImports()){
            if (!module.getName()) continue;
            if (!(module.getName() in config)) continue;
            const newModuleConfig = config[module.getName()];
            module.configure(newModuleConfig);
        }
        if (this.options.config) {
            const configNormalized = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getPartialSerializeFunction"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["reflect"])(this.options.config), __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["serializer"].deserializeRegistry)(config);
            Object.assign(this.config, configNormalized);
        }
        return this;
    }
}
AppModule.__type = [
    'T',
    'C',
    ()=>AppModule,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    ()=>AppModule,
    'module',
    'config',
    '',
    'setupConfigs',
    function() {
        return [];
    },
    ()=>AppModule,
    'imports',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'controllers',
    function() {
        return [];
    },
    'name',
    ()=>Function,
    'callback',
    'commands',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'workflows',
    function() {
        return [];
    },
    ()=>__ΩListenerType,
    'listeners',
    function() {
        return [];
    },
    ()=>__ΩMiddlewareFactory,
    'middlewares',
    function() {
        return [];
    },
    'args',
    'uses',
    function() {
        return [];
    },
    'options',
    ()=>({}),
    ()=>"",
    ()=>AppModule,
    'setups',
    ()=>[],
    'id',
    ()=>moduleId++,
    'constructor',
    ()=>AppModule,
    ()=>__ΩFunctionalModule,
    'm',
    'addModuleImport',
    'process',
    ()=>AppModule,
    'Token',
    'token',
    'ProviderWithScope',
    'provider',
    'processProvider',
    ()=>AppModule,
    'ControllerConfig',
    'processController',
    ()=>AppModule,
    'AddedListener',
    'listener',
    'processListener',
    'postProcess',
    'rename',
    ()=>__ΩListenerType,
    'getListeners',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'getWorkflows',
    ()=>__ΩMiddlewareFactory,
    'getMiddlewares',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'getControllers',
    ()=>Function,
    'getCommands',
    'addCommand',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'controller',
    'addController',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventListener"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'addListener',
    ()=>__ΩMiddlewareFactory,
    'addMiddleware',
    ()=>AppModule,
    'setupConfig',
    ()=>AppModule,
    'setup',
    'use',
    ()=>AppModule,
    'getImports',
    'getName',
    ()=>__ΩPartial,
    'configure',
    ()=>AppModule,
    'AppModule',
    'PMc!"c"Pe""P"7#7$PP"7%2&"2\'$/(F3)>*P"7+F3,>-n.F3/>0P&418Pu243MF34>5P"76F37>8n9F3:>;n<F3=>>P"@2?$/(F3@>APe"!2B:>C&21:>DPP"7E2&"2\'$/(F2F:>G\'2H:>I"0JPPP"7KnLJ2M"0N<P"0OPP"7P2&"wQ2R"wS2T"0UPP"7V2&"wW2\'"0XPP"7Y2&"wZ2["0\\P"0]P&21!0^Pn_F0`PP"7aF0bPncF0dPneF0fPP&418Pug43MF0hPP&-J21PPG@2?"/(23!0iPnj@2k!0lPP"om"nnJ@2[!0oPnp@2=!0qPPPe$!7r2&e#"2\'$/(23!0sPPPe$!7t2&e#"2\'$/(23!0uPP"@2?$/(23!0vPP"7wF0xP&0yPe""oz"2\'!0{5e!"P"7|6#w}'
]; //# sourceMappingURL=module.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/src/command.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "__ΩCommand": (()=>__ΩCommand),
    "__ΩCommandWriter": (()=>__ΩCommandWriter),
    "__ΩFlag": (()=>__ΩFlag),
    "__ΩParsedCliControllerConfig": (()=>__ΩParsedCliControllerConfig),
    "cli": (()=>cli),
    "executeCommand": (()=>executeCommand),
    "getArgsFromEnvironment": (()=>getArgsFromEnvironment),
    "getBinFromEnvironment": (()=>getBinFromEnvironment),
    "isCommand": (()=>isCommand),
    "parseCliArgs": (()=>parseCliArgs),
    "parseControllerConfig": (()=>parseControllerConfig),
    "runCommand": (()=>runCommand)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/app.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/decorator-builder.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/serializer-facade.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$validator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/validator.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-ssr] (ecmascript)");
;
;
;
;
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
;
const __ΩFlag = [
    'Options',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeAnnotation"],
    "cli:flag",
    'Flag',
    'PMc!.#e!!o"#w$y'
];
;
class CommandDecoratorDefinition {
    constructor(){
        this.name = '';
        this.description = '';
    }
}
CommandDecoratorDefinition.__type = [
    'name',
    function() {
        return '';
    },
    'description',
    function() {
        return '';
    },
    'CommandDecoratorDefinition',
    '&3!>"&3#>$5w%'
];
class CommandDecorator {
    constructor(){
        this.t = new CommandDecoratorDefinition;
    }
    controller(name, options) {
        this.t.name = name;
        if (options) {
            if (options.description) this.t.description = options.description;
        }
    }
}
CommandDecorator.__type = [
    'name',
    'description',
    'options',
    'controller',
    'CommandDecorator',
    'P&2!P&4"8M2#8"0$5w%'
];
const cli = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassDecoratorContext"])(CommandDecorator);
const __ΩCommand = [
    'args',
    'execute',
    'Command',
    'PP"@2!PP\'$J`\'$J1"Mw#y'
];
;
function isCommand(classType) {
    return !!cli._fetch(classType);
}
isCommand.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__ΩCommand,
    'classType',
    'isCommand',
    'Pn"o!"2#"/$'
];
function convert(parameter, value) {
    if (value === undefined) {
        if (parameter.optional) return undefined;
        throw new Error(`Value is required`);
    }
    if (parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].array && !Array.isArray(value)) {
        value = [
            value
        ];
    }
    value = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserialize"])(value, undefined, undefined, undefined, parameter.type);
    const errors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$validator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["validate"])(value, parameter.type);
    if (errors.length) {
        throw errors[0];
    }
    return value;
}
convert.__type = [
    ()=>__ΩCommandParameter,
    'parameter',
    'value',
    'convert',
    'Pn!2""2#"/$'
];
/**
 * Auto-detect some types as flag.
 */ function isFlagForced(type) {
    if (supportedAsArgument(type)) return false;
    return type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].boolean;
}
isFlagForced.__type = [
    'Type',
    'type',
    'isFlagForced',
    'P"w!2")/#'
];
function supportedFlags(type) {
    return supportedAsArgument(type) || isFlagForced(type);
}
supportedFlags.__type = [
    'Type',
    'type',
    'supportedFlags',
    'P"w!2")/#'
];
function supportedAsArgument(type) {
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].string || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].number || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].any || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].unknown || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isDateType"])(type) || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].bigint || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) return true;
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].union) return type.types.every(__assignType((v)=>supportedAsArgument(v), [
        'v',
        '',
        'P"2!"/"'
    ]));
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].array) return supportedAsArgument(type.type);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isReferenceType"])(type)) return true;
    return false;
}
supportedAsArgument.__type = [
    'Type',
    'type',
    'supportedAsArgument',
    'P"w!2")/#'
];
function getBinFromEnvironment() {
    if ('undefined' !== typeof process && process.argv) {
        return process.argv.slice(0, 2);
    }
    if ('undefined' !== typeof Deno && Deno.args) {
        return [
            'deno',
            'run',
            Deno.main?.filename || ''
        ];
    }
    if ('undefined' !== typeof Bun && Bun.argv) {
        return Bun.argv.slice(0, 2);
    }
    return [];
}
getBinFromEnvironment.__type = [
    'getBinFromEnvironment',
    'P&F/!'
];
function getArgsFromEnvironment() {
    if ('undefined' !== typeof process && process.argv) {
        return process.argv.slice(2);
    }
    if ('undefined' !== typeof Deno && Deno.args) {
        return Deno.args;
    }
    if ('undefined' !== typeof Bun && Bun.argv) {
        return Bun.argv.slice(2);
    }
    return [];
}
getArgsFromEnvironment.__type = [
    'getArgsFromEnvironment',
    'P&F/!'
];
function parseCliArgs(args, aliases = {}) {
    const result = {};
    let current = undefined;
    function append(name, value) {
        name = aliases[name] || name;
        const existing = result[name];
        if ('string' === typeof existing) {
            result[name] = [
                existing
            ];
        }
        if (Array.isArray(result[name])) {
            result[name].push(value);
        } else {
            result[name] = value;
        }
    }
    append.__type = [
        'name',
        'value',
        'append',
        'P&2!P&)J2""/#'
    ];
    for (const arg of args){
        if (arg.startsWith('--')) {
            if (current) {
                append(current, true);
            }
            current = arg.substr(2);
            if (current.includes(' ')) {
                const [name, value] = current.split(' ');
                append(name, value);
                current = undefined;
            }
        } else if (arg.startsWith('-')) {
            if (current) {
                append(current, true);
            }
            current = arg.substr(1);
        } else {
            if (current) {
                append(current, arg);
            } else {
                //no current flag, so it's a positional argument
                if (!result['@']) result['@'] = [];
                result['@'].push(arg);
            }
            current = undefined;
        }
    }
    if (current) {
        result[current] = true;
    }
    return result;
}
parseCliArgs.__type = [
    'args',
    'aliases',
    ()=>({}),
    'parseCliArgs',
    'P&F2!P&&LM2">#P&P)&&FJLM/$'
];
/**
 * Returns the longest string length of all names.
 */ function getSpacing(names) {
    return names.reduce(__assignType((max, name)=>Math.max(max, name.length), [
        'max',
        'name',
        '',
        'P"2!"2""/#'
    ]), 0) + 1;
}
getSpacing.__type = [
    'names',
    'getSpacing',
    'P&F2!\'/"'
];
const __ΩParsedCliControllerConfig = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'controller',
    ()=>Function,
    'callback',
    'description',
    'name',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'ParsedCliControllerConfig',
    'Pn!4"8Pu#4$8&4%8&4&P7\'4(Mw)y'
];
;
/**
 * Tries to create a command name from a class name or function name.
 * //test => test
 * //testCommand => test-command
 * //TestCommand => test-command
 * //Test => test
 * //TestSomething => test-something
 * //system_crazyCommand => system:crazy-command
 * //system_crazy => system:crazy
 * //system_crazyCommandSomething => system:crazy-command-something
 * //system_subSystem_test => system:sub-system:test
 */ function commandNameFromSymbol(symbolName) {
    return symbolName.replace(/_+/g, ':').replace(/([A-Z])/g, '-$1').replace(/^-/, '').toLowerCase().replace(/-command$/, '').replace(/-controller/, '-');
}
commandNameFromSymbol.__type = [
    'symbolName',
    'commandNameFromSymbol',
    'P&2!"/"'
];
function parseControllerConfig(config) {
    let name = config.name || '';
    let description = '';
    if (!name && config.controller) {
        name = commandNameFromSymbol((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(config.controller));
    } else if (!name && config.callback) {
        name = commandNameFromSymbol(config.callback.name);
    }
    const decoratorConfig = config.controller ? cli._fetch(config.controller) : undefined;
    if (decoratorConfig) {
        if (decoratorConfig.description) description = decoratorConfig.description;
        if (decoratorConfig.name) name = decoratorConfig.name;
    }
    if (!description) {
        const type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["reflect"])(config.controller || config.callback);
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].function && type.description) description = type.description || '';
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].class && type.description) description = type.description || '';
    }
    return {
        controller: config.controller,
        callback: config.callback,
        description,
        name,
        module: config.module
    };
}
parseControllerConfig.__type = [
    'ControllerConfig',
    'config',
    ()=>__ΩParsedCliControllerConfig,
    'parseControllerConfig',
    'P"w!2"n#/$'
];
function printTopics(script, forTopic, commands, writer) {
    writer('<yellow>USAGE</yellow>');
    writer(`  $ ${script} ${forTopic ? forTopic + ':' : ''}[COMMAND]`);
    writer('');
    writer('<yellow>COMMANDS</yellow>');
    const descriptionSpacing = getSpacing(commands.map(__assignType((cmd)=>cmd.name, [
        'cmd',
        '',
        'P"2!"/"'
    ])));
    let lastTopic = '';
    for (const cmd of commands){
        const topic = cmd.name.lastIndexOf(':') ? cmd.name.substr(0, cmd.name.lastIndexOf(':')) : '';
        if (lastTopic !== topic) {
            lastTopic = topic;
            writer(topic);
        }
        if (cmd.description) {
            const nameWithSpacing = `<green>${cmd.name}</green>` + ' '.repeat(descriptionSpacing - cmd.name.length);
            writer('  ' + nameWithSpacing + ' ' + cmd.description);
        } else {
            writer(`  <green>${cmd.name}</green>`);
        }
    }
    writer('');
    writer(`For more information on a specific command or topic, type '[command/topic] --help'`);
}
printTopics.__type = [
    'script',
    'forTopic',
    ()=>__ΩParsedCliControllerConfig,
    'commands',
    ()=>__ΩCommandWriter,
    'writer',
    'printTopics',
    'P&2!&2"n#F2$n%2&"/\''
];
function getParamFlags(parameter) {
    const flags = [];
    if (!parameter.optional) flags.push('required');
    if (parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].array) {
        flags.push('multiple');
    }
    if (parameter.defaultValue !== undefined) flags.push('default=' + parameter.defaultValue);
    return flags.length ? `[${flags.join(', ')}]` : '';
}
getParamFlags.__type = [
    ()=>__ΩCommandParameter,
    'parameter',
    'getParamFlags',
    'Pn!2"&/#'
];
function getParamIdentifier(parameter) {
    const elementType = parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].array ? parameter.type.type : parameter.type;
    if (parameter.kind === 'flag' || parameter.kind === 'flag-property') {
        let name = `--${parameter.name}`;
        if (parameter.char) name = `-${parameter.char}, ${name}`;
        if (parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].boolean) {
            return `<green>${name}</green>`;
        }
        let type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isReferenceType"])(elementType) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringifyType"])(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(elementType).getPrimary().type) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringifyType"])(elementType);
        return `<green>${name} ${type}</green>`;
    }
    return `<green>${parameter.name}</green>`;
}
getParamIdentifier.__type = [
    ()=>__ΩCommandParameter,
    'parameter',
    'getParamIdentifier',
    'Pn!2"&/#'
];
function printHelp(script, command, writer) {
    const commandParameters = collectCommandParameter(command);
    const args = commandParameters.filter(__assignType((v)=>v.kind === 'argument', [
        'v',
        '',
        'P"2!"/"'
    ]));
    writer(`<yellow>Usage:</yellow> ${script} ${command.name} [OPTIONS] ${args.map(__assignType((v)=>`[${v.name}]`, [
        'v',
        '',
        'P"2!"/"'
    ])).join(' ')}`);
    writer('');
    if (command.description) {
        writer(`${command.description || ''}`);
        writer('');
    }
    if (args.length) {
        writer('<yellow>Arguments:</yellow>');
        for (const parameter of args){
            writer(`  ${parameter.name}</green>\t${parameter.description || ''}<yellow>${getParamFlags(parameter)}</yellow>`);
        }
    }
    writer('<yellow>Options:</yellow>');
    const descriptionSpacing = getSpacing(commandParameters.map(getParamIdentifier));
    for (const parameter of commandParameters){
        if (parameter.kind === 'argument' || parameter.kind === 'service') continue;
        if (parameter.hidden) continue;
        const label = getParamIdentifier(parameter);
        const nameWithSpacing = label + ' '.repeat(descriptionSpacing - label.length);
        writer(`  ${nameWithSpacing}${parameter.description || ''}<yellow>${getParamFlags(parameter)}</yellow>`);
    }
}
printHelp.__type = [
    'script',
    ()=>__ΩParsedCliControllerConfig,
    'command',
    ()=>__ΩCommandWriter,
    'writer',
    'printHelp',
    'P&2!n"2#n$2%"/&'
];
const __ΩCommandWriter = [
    'message',
    '',
    'CommandWriter',
    'P"@2!$/"w#y'
];
;
const __ΩParameterMeta = [
    'flag',
    'char',
    'hidden',
    'description',
    'prefix',
    'ParameterMeta',
    'P)4!&4")4#&4$&4%8Mw&y'
];
function getParameterMeta(parameter) {
    const metaFlag = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["metaAnnotation"].getForName(parameter.type, 'cli:flag');
    const flagOptions = metaFlag && metaFlag.length ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeToObject"])(metaFlag[0]) : {};
    return {
        flag: !!metaFlag,
        char: flagOptions.char || '',
        hidden: flagOptions.hidden === true,
        prefix: flagOptions.prefix,
        description: flagOptions.description || ''
    };
}
getParameterMeta.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeParameter"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeProperty"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypePropertySignature"],
    'parameter',
    ()=>__ΩParameterMeta,
    'getParameterMeta',
    'PPn!n"n#J2$n%/&'
];
async function executeCommand(script, argv, eventDispatcher, logger, injector, commandsConfigs, writer) {
    let commands = commandsConfigs.map(__assignType((v)=>parseControllerConfig(v), [
        'v',
        '',
        'P"2!"/"'
    ]));
    if (!writer) {
        writer = __assignType((...message)=>logger.log(...message), [
            'message',
            '',
            'P&@2!"/"'
        ]);
    }
    const help = argv.some(__assignType((v)=>v === '--help', [
        'v',
        '',
        'P"2!"/"'
    ])) || argv[0] === 'help';
    const first = argv[0] === 'help' || argv[0] === '--help' ? '' : argv[0];
    const command = commands.find(__assignType((cmd)=>cmd.name === first, [
        'cmd',
        '',
        'P"2!"/"'
    ]));
    if (argv.length === 0 || argv.length === 1 || help) {
        const topicPrefix = argv.length === 1 && first ? first + ':' : '';
        if (command && help) {
            printHelp(script, command, writer);
            return 0;
        } else if (!command) {
            //print topics
            commands = commands.filter(__assignType((cmd)=>cmd.name?.startsWith(topicPrefix), [
                'cmd',
                '',
                'P"2!"/"'
            ]));
            //sort so that the ones without topics ( no ':' ) are first, then by name
            commands.sort(__assignType((a, b)=>{
                if (a.name?.includes(':') && !b.name?.includes(':')) return 1;
                if (!a.name?.includes(':') && b.name?.includes(':')) return -1;
                return a.name?.localeCompare(b.name || '') || 0;
            }, [
                'a',
                'b',
                '',
                'P"2!"2""/#'
            ]));
            printTopics(script, topicPrefix.slice(0, -1), commands, writer);
            return 0;
        }
    }
    if (!command) {
        writer(`Command "${first}" not found.`);
        return 1;
    }
    try {
        return await runCommand(command, argv.slice(1), injector, eventDispatcher, logger);
    } catch (e) {
        writer(`The command "${command.name}" failed.`);
        writer(e);
        return 1;
    }
}
executeCommand.__type = [
    'script',
    'argv',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLoggerInterface"],
    'logger',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'ControllerConfig',
    'commandsConfigs',
    ()=>__ΩCommandWriter,
    'writer',
    'executeCommand',
    'P&2!&F2"P7#2$n%2&P7\'2("w)F2*n+2,8\'`/-'
];
function handleConvertError(logger, parameter, value, error) {
    let group = parameter.kind === 'argument' ? 'argument' : 'property';
    let name = getActualCliParameterName(parameter);
    if (parameter.kind === 'flag' || parameter.kind === 'flag-property') {
        name = '--' + name;
        group = 'option';
    }
    if (error instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$validator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ValidationError"]) {
        logger.log(`<red>Invalid value for ${group} ${name}: ${value}.</red> ${error.errors[0].message} [${error.errors[0].code}]`);
        return;
    }
    logger.log(`<red>Invalid value for ${group} ${name}: ${value}.</red> ${String(error.message)}`);
}
handleConvertError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLoggerInterface"],
    'logger',
    ()=>__ΩCommandParameter,
    'parameter',
    'value',
    'error',
    'handleConvertError',
    'Pn!2"n#2$"2%"2&"/\''
];
const __ΩCommandParameter = [
    'name',
    'char',
    'hidden',
    'flag',
    'optional',
    'description',
    "argument",
    "flag",
    "flag-property",
    "service",
    'kind',
    'defaultValue',
    'Type',
    'type',
    'prefix',
    'collectInto',
    'CommandParameter',
    'P&4!&4")4#)4$)4%&4&P.\'.(.).*J4+"4,8"w-4.&4/&408Mw1y'
];
function collectCommandParameter(config) {
    const parameters = config.callback ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionFunction"].from(config.callback).getParameters() : config.controller ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(config.controller).getMethod('execute').getParameters() : [];
    const result = [];
    let objectLiterals = 0;
    for (const reflection of parameters){
        if (reflection.parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral || reflection.parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            objectLiterals++;
        }
    }
    const names = (Set.Ω = [
        [
            '&'
        ]
    ], new Set());
    function add(parameter, prefixIn, collectInto, forceFlag) {
        const meta = getParameterMeta(parameter);
        const injectToken = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getInjectOptions"])(parameter.type);
        const isSimple = supportedAsArgument(parameter.type);
        const char = meta.char || '';
        const hidden = meta.hidden || false;
        const prefix = prefixIn || meta.prefix || '';
        const optional = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isOptional"])(parameter) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasDefaultValue"])(parameter);
        const description = meta.description || parameter.description || '';
        const name = String(parameter.name);
        let defaultValue = undefined;
        try {
            defaultValue = parameter.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].property || parameter.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].parameter ? parameter.default?.() : undefined;
        } catch  {}
        if (forceFlag || (meta.flag || isFlagForced(parameter.type)) && !injectToken) {
            // check if parameter.type is an object, e.g. { name: string, age: number }
            // split it into multiple flags, e.g. --name --age
            if (parameter.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isCustomTypeClass"])(parameter.type)) {
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isReferenceType"])(parameter.type)) {
                    result.push({
                        name,
                        defaultValue,
                        char,
                        hidden,
                        optional,
                        description,
                        prefix,
                        collectInto,
                        kind: 'flag',
                        flag: true,
                        type: parameter.type
                    });
                    return;
                }
                for (const property of parameter.type.types){
                    if (property.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].property && property.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].propertySignature) continue;
                    if (!supportedFlags(property.type)) continue;
                    const subName = String(property.name);
                    if (names.has(prefix + '.' + subName)) {
                        throw new Error(`Duplicate CLI argument/flag name ${subName} in object literal. Try setting a prefix via ${name}: ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["stringifyType"])(parameter.type)} & Flag<{prefix: '${name}'}> `);
                    }
                    names.add(prefix + '.' + subName);
                    add(property, prefix, name, true);
                }
            } else {
                names.add(name);
                result.push({
                    name,
                    defaultValue,
                    char,
                    hidden,
                    optional,
                    description,
                    prefix,
                    collectInto,
                    kind: 'flag',
                    flag: true,
                    type: parameter.type
                });
            }
        } else {
            names.add(name);
            //it's either a simple string|number positional argument or a service
            if (isSimple && !injectToken) {
                result.push({
                    name,
                    defaultValue,
                    flag: false,
                    char,
                    optional,
                    description,
                    hidden,
                    collectInto,
                    prefix,
                    kind: 'argument',
                    type: parameter.type
                });
            } else {
                result.push({
                    name,
                    defaultValue,
                    flag: false,
                    char,
                    optional,
                    description,
                    hidden,
                    collectInto,
                    prefix,
                    kind: 'service',
                    type: parameter.type
                });
            }
        }
    }
    add.__type = [
        ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeParameter"],
        ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeProperty"],
        ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypePropertySignature"],
        'parameter',
        'prefixIn',
        'collectInto',
        'forceFlag',
        'add',
        'PPn!n"n#J2$&2%&2&8)2\'8"/('
    ];
    for (const reflection of parameters){
        add(reflection.parameter, '');
    }
    if (config.controller) {
        const classSchema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(config.controller);
        for (const reflection of classSchema.getProperties()){
            const meta = getParameterMeta(reflection.property);
            const optional = reflection.isOptional() || reflection.hasDefault();
            const description = meta.description || reflection.property.description || '';
            if (!meta.flag) continue;
            result.push({
                name: reflection.name,
                hidden: meta.hidden || false,
                prefix: meta.prefix || '',
                char: meta.char || '',
                kind: 'flag-property',
                flag: true,
                description,
                optional,
                type: reflection.property.type
            });
        }
    }
    return result;
}
collectCommandParameter.__type = [
    ()=>__ΩParsedCliControllerConfig,
    'config',
    'collectCommandParameter',
    'Pn!2""/#'
];
function getActualCliParameterName(parameter) {
    return parameter.prefix ? parameter.prefix + '.' + parameter.name : parameter.name;
}
getActualCliParameterName.__type = [
    'prefix',
    'name',
    'parameter',
    'getActualCliParameterName',
    'PP&4!&4"M2#"/$'
];
async function runCommand(config, argv, injector, eventDispatcher, logger) {
    const parameters = config.callback ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionFunction"].from(config.callback).getParameters() : config.controller ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(config.controller).getMethod('execute').getParameters() : [];
    const stopwatch = injector.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Stopwatch"]);
    const aliases = {};
    const parameterValues = {};
    for (const parameter of parameters){
        const meta = getParameterMeta(parameter.parameter);
        if (meta.char) {
            aliases[meta.char] = parameter.name;
        }
    }
    const parsedArgs = parseCliArgs(argv, aliases);
    const args = [];
    let positionalIndex = 0;
    const positionalArguments = Array.isArray(parsedArgs['@']) ? parsedArgs['@'] : [];
    const commandParameters = collectCommandParameter(config);
    for (const parameter of commandParameters){
        if (parameter.kind === 'service') {
            const injectToken = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getInjectOptions"])(parameter.type);
            try {
                args.push(injector.get(injectToken || parameter.type));
            } catch (error) {
                if (parameter.optional && error instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ServiceNotFoundError"]) {
                    continue;
                }
                handleConvertError(logger, parameter, parsedArgs[parameter.name], error);
                return 1;
            }
            continue;
        }
        const id = getActualCliParameterName(parameter);
        let raw = parsedArgs[id];
        if (parameter.kind === 'argument') {
            raw = positionalArguments[positionalIndex];
            positionalIndex++;
        }
        try {
            const v = convert(parameter, raw) ?? parameter.defaultValue;
            if (parameter.collectInto) {
                if (!parameterValues[parameter.collectInto]) {
                    parameterValues[parameter.collectInto] = {};
                    if (parameter.kind !== 'flag-property') {
                        args.push(parameterValues[parameter.collectInto]);
                    }
                }
                if (v !== undefined) {
                    // Important to not have undefined properties in the object
                    parameterValues[parameter.collectInto][parameter.name] = v;
                }
            } else {
                parameterValues[parameter.name] = v;
                if (parameter.kind !== 'flag-property') {
                    args.push(v);
                }
            }
        } catch (error) {
            handleConvertError(logger, parameter, raw, error);
            return 1;
        }
    }
    const label = config.controller ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(config.controller) : config.callback ? config.callback.name : '';
    await eventDispatcher.dispatch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["onAppExecute"], {
        command: config.name,
        parameters: parameterValues,
        injector
    });
    const frame = stopwatch.active ? stopwatch.start(config.name + '(' + label + ')', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameCategory"].cli, true) : undefined;
    let exitCode = 1;
    try {
        //property injection possible, too
        if (config.controller) {
            const instance = injector.get(config.controller, config.module);
            for (const parameter of commandParameters){
                if (parameter.kind !== 'flag-property') continue;
                instance[parameter.name] = parameterValues[parameter.name];
            }
            if (frame) {
                exitCode = await frame.run(()=>instance.execute(...args));
            } else {
                exitCode = await instance.execute(...args);
            }
        } else if (config.callback) {
            if (frame) {
                exitCode = await frame.run(()=>config.callback(...args));
            } else {
                exitCode = await config.callback(...args);
            }
        }
        exitCode = 'number' === typeof exitCode ? exitCode : 0;
        await eventDispatcher.dispatch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["onAppExecuted"], {
            exitCode,
            command: config.name,
            parameters: parameterValues,
            injector
        });
        return exitCode;
    } catch (error) {
        await eventDispatcher.dispatch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["onAppError"], {
            command: config.name,
            parameters: parameterValues,
            injector,
            error: error instanceof Error ? error : new Error(String(error))
        });
        throw error;
    } finally{
        if (frame) frame.end();
        await eventDispatcher.dispatch(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["onAppShutdown"], {
            command: config.name,
            parameters: parameterValues,
            injector
        });
    }
}
runCommand.__type = [
    ()=>__ΩParsedCliControllerConfig,
    'config',
    'argv',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLoggerInterface"],
    'logger',
    'runCommand',
    'Pn!2"&F2#P7$2%P7&2\'n(2)"`/*'
]; //# sourceMappingURL=command.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/src/service-container.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "CliControllerRegistry": (()=>CliControllerRegistry),
    "MiddlewareRegistry": (()=>MiddlewareRegistry),
    "ServiceContainer": (()=>ServiceContainer),
    "WorkflowRegistry": (()=>WorkflowRegistry),
    "__ΩConfigLoader": (()=>__ΩConfigLoader),
    "__ΩMiddlewareRegistryEntry": (()=>__ΩMiddlewareRegistryEntry)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-ssr] (ecmascript)");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/command.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/serializer-facade.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$validator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/validator.js [app-ssr] (ecmascript)");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-ssr] (ecmascript)");
;
;
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
;
;
;
;
class CliControllerRegistry {
    constructor(){
        this.controllers = [];
    }
}
CliControllerRegistry.__type = [
    'ControllerConfig',
    'controllers',
    function() {
        return [];
    },
    'CliControllerRegistry',
    '"w!F3"9>#5w$'
];
const __ΩMiddlewareRegistryEntry = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩMiddlewareConfig"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'module',
    'MiddlewareRegistryEntry',
    'Pn!4"P"7#4$Mw%y'
];
;
class MiddlewareRegistry {
    constructor(){
        this.configs = [];
    }
}
MiddlewareRegistry.__type = [
    ()=>__ΩMiddlewareRegistryEntry,
    'configs',
    function() {
        return [];
    },
    'MiddlewareRegistry',
    'n!F3"9>#5w$'
];
class WorkflowRegistry {
    constructor(workflows){
        this.workflows = workflows;
    }
    get(name) {
        for (const w of this.workflows){
            if (w.name === name) return w;
        }
        throw new Error(`Workflow with name ${name} does not exist`);
    }
    add(workflow) {
        this.workflows.push(workflow);
    }
}
WorkflowRegistry.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'workflows',
    'constructor',
    'name',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'get',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["WorkflowDefinition"],
    'workflow',
    'add',
    'WorkflowRegistry',
    'PP"7!F2":9"0#P&2$P"7%0&PP"7\'2("0)5w*'
];
const __ΩConfigLoader = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'module',
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"],
    'schema',
    'load',
    'ConfigLoader',
    'PPP"7!2"P&"LM2#P"7$2%$1&Mw\'y'
];
;
class ServiceContainer {
    constructor(appModule){
        this.appModule = appModule;
        this.cliControllerRegistry = new CliControllerRegistry;
        this.middlewareRegistry = new MiddlewareRegistry;
        this.workflowRegistry = new WorkflowRegistry([]);
        this.configLoaders = [];
        /**
         * All modules in the whole module tree.
         * This is stored to call service container hooks like processController/processProvider.
         */ this.modules = (Set.Ω = [
            [
                ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
                'P"7!'
            ]
        ], new Set());
        this.eventDispatcher = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"](this.injectorContext);
    }
    addConfigLoader(loader) {
        this.configLoaders.push(loader);
    }
    /**
     * Builds the whole module tree, processes all providers, controllers, and listeners.
     * Makes InjectorContext available. Is usually automatically called when the injector is requested.
     */ process() {
        if (this.injectorContext) return;
        this.appModule.addProvider({
            provide: ServiceContainer,
            useValue: this
        });
        this.appModule.addProvider({
            provide: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
            useValue: this.eventDispatcher
        });
        this.appModule.addProvider({
            provide: CliControllerRegistry,
            useValue: this.cliControllerRegistry
        });
        this.appModule.addProvider({
            provide: MiddlewareRegistry,
            useValue: this.middlewareRegistry
        });
        this.appModule.addProvider({
            provide: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
            useFactory: ()=>this.injectorContext
        });
        this.appModule.addProvider({
            provide: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Stopwatch"]
        });
        this.appModule.addProvider(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConsoleTransport"]);
        if (!this.appModule.isProvided(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"])) {
            this.appModule.addProvider({
                provide: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"],
                useFactory: __assignType((t)=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"]([
                        t
                    ]), [
                    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConsoleTransport"],
                    't',
                    '',
                    'PP7!2""/#'
                ])
            });
        }
        this.appModule.addProvider(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ScopedLogger"]);
        this.setupHook(this.appModule);
        this.findModules(this.appModule);
        this.processModule(this.appModule);
        this.postProcess();
        this.injectorContext = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"](this.appModule);
        this.injectorContext.getRootInjector(); //trigger all injector builds
        this.bootstrapModules();
    }
    postProcess() {
        for (const m of this.modules){
            m.postProcess();
        }
    }
    findModules(module) {
        if (this.modules.has(module)) return;
        this.modules.add(module);
        for (const m of module.getImports()){
            this.findModules(m);
        }
    }
    getInjectorContext() {
        this.process();
        return this.injectorContext;
    }
    setupHook(module) {
        let config = module.getConfig();
        if (module.configDefinition) {
            const schema = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(module.configDefinition);
            for (const loader of this.configLoaders){
                loader.load(module, config, schema);
            }
            //config loads can set arbitrary values (like string for numbers), so we try deserialize them automatically
            Object.assign(config, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserialize"])(config, undefined, undefined, undefined, schema.type));
            for (const setupConfig of module.setupConfigs)setupConfig(module, config);
            //at this point, no deserialization needs to happen anymore, so validation happens on the config object itself.
            const errors = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$validator$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["validate"])(config, schema.type);
            if (errors.length) {
                const errorsMessage = errors.map(__assignType((v)=>v.toString(module.getName()), [
                    'v',
                    '',
                    'P"2!"/"'
                ])).join(', ');
                throw new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConfigurationInvalidError"](`Configuration for module ${module.getName() || 'root'} is invalid. Make sure the module is correctly configured. Error: ` + errorsMessage);
            }
        }
        module.process();
        for (const setup of module.setups)setup(module, config);
        for (const importModule of module.getImports()){
            this.setupHook(importModule);
        }
        return module;
    }
    bootstrapModules() {
        for (const module of this.modules){
            if (module.options.bootstrap) {
                this.getInjector(module).get(module.options.bootstrap);
            }
            for (const use of module.uses){
                const resolvedFunction = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(use, this.getInjector(module));
                resolvedFunction();
            }
        }
    }
    getInjector(moduleOrClass) {
        this.process();
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(moduleOrClass)) return this.getInjectorContext().getInjector(moduleOrClass);
        for (const m of this.modules){
            if (m instanceof moduleOrClass) {
                return this.getInjectorContext().getInjector(m);
            }
        }
        throw new Error(`No module loaded from type ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(moduleOrClass)}`);
    }
    getModule(moduleClass) {
        this.process();
        for (const m of this.modules){
            if (m instanceof moduleClass) {
                return m;
            }
        }
        throw new Error(`No module loaded from type ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(moduleClass)}`);
    }
    /**
     * Returns all known instantiated modules.
     */ getModules() {
        this.process();
        return [
            ...this.modules
        ];
    }
    getRootInjector() {
        this.process();
        return this.getInjectorContext().getInjector(this.appModule);
    }
    processModule(module) {
        if (module.injector) {
            throw new Error(`Module ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(module)} (id=${module.name}) was already imported. Can not re-use module instances.`);
        }
        const providers = module.getProviders();
        const controllers = module.getControllers();
        const commands = module.getCommands();
        const listeners = module.getListeners();
        const middlewares = module.getMiddlewares();
        if (module.options.bootstrap && !(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(module.options.bootstrap) && !module.isProvided(module.options.bootstrap)) {
            providers.push(module.options.bootstrap);
        }
        for (const w of module.getWorkflows())this.workflowRegistry.add(w);
        for (const middleware of middlewares){
            const config = middleware();
            for (const fnOrClassTye of config.getClassTypes()){
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(fnOrClassTye)) continue;
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isProvided"])(providers, fnOrClassTye)) {
                    providers.unshift(fnOrClassTye);
                }
            }
            this.middlewareRegistry.configs.push({
                config,
                module
            });
        }
        for (const controller of controllers){
            this.processController(module, {
                module,
                controller
            });
        }
        for (const command of commands){
            this.processController(module, {
                module,
                for: 'cli',
                ...command
            });
        }
        for (const provider of providers){
            this.processProvider(module, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resolveToken"])(provider), provider);
        }
        for (const listener of listeners){
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(listener)) {
                providers.unshift({
                    provide: listener
                });
                for (const listenerEntry of this.eventDispatcher.registerListener(listener, module)){
                    this.processListener(module, listenerEntry);
                }
            } else {
                const listenerObject = {
                    fn: listener.callback,
                    order: listener.order,
                    module: listener.module || module
                };
                this.eventDispatcher.add(listener.eventToken, listenerObject);
                this.processListener(module, {
                    eventToken: listener.eventToken,
                    listener: listenerObject
                });
            }
        }
        for (const imp of module.getImports()){
            if (!imp) continue;
            this.processModule(imp);
        }
    }
    processListener(module, listener) {
        const addedListener = {
            eventToken: listener.eventToken,
            reflection: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEventListenerContainerEntryCallback"])(listener.listener) ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionFunction"].from(listener.listener.fn) : __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(listener.listener.classType).getMethod(listener.listener.methodName),
            module: listener.listener.module,
            order: listener.listener.order
        };
        for (const m of this.modules){
            m.processListener(module, addedListener);
        }
    }
    processController(module, controller) {
        let name = controller.name || '';
        if (controller.controller) {
            if (!name) {
                const cliConfig = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["cli"]._fetch(controller.controller);
                if (cliConfig) {
                    controller.name = name || cliConfig.name || '';
                    //make sure CLI controllers are provided in cli scope
                    if (!module.isProvided(controller.controller)) {
                        module.addProvider({
                            provide: controller.controller,
                            scope: 'cli'
                        });
                    }
                    this.cliControllerRegistry.controllers.push(controller);
                }
            }
        } else if (controller.for === 'cli') {
            this.cliControllerRegistry.controllers.push(controller);
        }
        for (const m of this.modules){
            m.processController(module, controller);
        }
    }
    processProvider(module, token, provider) {
        for (const m of this.modules){
            m.processProvider(module, token, provider);
        }
    }
}
ServiceContainer.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injectorContext',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__ΩConfigLoader,
    'configLoaders',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'appModule',
    'constructor',
    ()=>__ΩConfigLoader,
    'loader',
    'addConfigLoader',
    'process',
    'postProcess',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'module',
    'findModules',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'getInjectorContext',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'setupHook',
    'bootstrapModules',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'moduleOrClass',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Injector"],
    'getInjector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'moduleClass',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'getModule',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'getModules',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Injector"],
    'getRootInjector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩModuleDefinition"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'processModule',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventListenerRegistered"],
    'listener',
    'processListener',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'ControllerConfig',
    'controller',
    'processController',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'Token',
    'token',
    'ProviderWithScope',
    'provider',
    'processProvider',
    'ServiceContainer',
    'P7!3"8<P7#3$<n%F3&<>\'PP"7(2):"0*Pn+2,"0-P"0.P"0/<PP"7021"02<PP7304PP"7521"06;P$07<PP"o8""J29P7:0;PP"7=o<"2>P"7?0@PP"7AF0BPP7C0DPPnE7F21$0G<PP"7H21nI2J"0K<PP"7L21"wM2N"0O<PP"7P21"wQ2R"wS2T"0U<5wV'
]; //# sourceMappingURL=service-container.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/src/configuration.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "EnvConfiguration": (()=>EnvConfiguration),
    "resolveEnvFilePath": (()=>resolveEnvFilePath)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (fs, cjs)");
;
;
class ConfigOptionNotFound extends Error {
}
ConfigOptionNotFound.__type = [
    ()=>Error,
    'ConfigOptionNotFound',
    'P7!5w"'
];
function resolveEnvFilePath(path) {
    const resolvedPath = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["isAbsolute"])(path) ? path : findFileUntilPackageRoot(path);
    if (!resolvedPath || !(0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["existsSync"])(resolvedPath)) return undefined;
    return resolvedPath;
}
resolveEnvFilePath.__type = [
    'path',
    'resolveEnvFilePath',
    'P&2!P&-J/"'
];
function findFileUntilPackageRoot(fileName) {
    let dir = process.cwd();
    while(true){
        const candidate = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(dir, fileName);
        if ((0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["existsSync"])(candidate)) {
            return candidate;
        }
        // reached root, so stop
        if ((0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["existsSync"])((0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(dir, 'package.json'))) return;
        const next = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(dir, '../');
        if (next === dir) return; //reached root
        dir = next;
    }
}
findFileUntilPackageRoot.__type = [
    'fileName',
    'findFileUntilPackageRoot',
    'P&2!P&-J/"'
];
class EnvConfiguration {
    constructor(){
        this.container = {};
    }
    /**
     * Reads a .env file from given path, based to basePath.
     */ loadEnvFile(path) {
        const resolvedPath = resolveEnvFilePath(path);
        if (!resolvedPath) return false;
        const RE_INI_KEY_VAL = /^\s*([\w.-]+)\s*=\s*(.*)?\s*$/;
        const content = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["readFileSync"])(resolvedPath);
        for (const line of content.toString('utf8').split('\n')){
            const keyValueArr = line.match(RE_INI_KEY_VAL);
            if (!keyValueArr) continue;
            const key = keyValueArr[1];
            let value = keyValueArr[2] || '';
            const end = value.length - 1;
            const isDoubleQuoted = value[0] === '"' && value[end] === '"';
            const isSingleQuoted = value[0] === '\'' && value[end] === '\'';
            // if single or double quoted, remove quotes
            if (isSingleQuoted) {
                value = value.substring(1, end);
            } else if (isDoubleQuoted) {
                value = JSON.parse(value);
            } else {
                value = value.trim();
            }
            this.container[key] = value;
        }
        return true;
    }
    getKeys() {
        return Object.keys(this.container);
    }
    getAll() {
        return this.container;
    }
    /**
     * Returns the value for a configuration option.
     *
     * Priority is first process.env, then manually set options, then values from the loaded env file.
     */ get(name) {
        if (process.env[name] !== undefined) return process.env[name];
        if (this.container[name] !== undefined) return this.container[name];
        throw new ConfigOptionNotFound(`Config option ${name} not found.`);
    }
    /**
     * Sets an option value. If a env file has been read, it will be overwritten.
     */ set(name, value) {
        this.container[name] = value;
    }
}
EnvConfiguration.__type = [
    'container',
    function() {
        return {};
    },
    'path',
    'loadEnvFile',
    'getKeys',
    'getAll',
    'name',
    'get',
    'value',
    'set',
    'EnvConfiguration',
    'P&"LM3!<>"P&2#)0$P&F0%PP&"LM0&P&2\'"0(P&2\'"2)"0*5w+'
]; //# sourceMappingURL=configuration.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/src/app.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "App": (()=>App),
    "RootAppModule": (()=>RootAppModule),
    "__ΩAppErrorEvent": (()=>__ΩAppErrorEvent),
    "__ΩAppEvent": (()=>__ΩAppEvent),
    "__ΩAppExecutedEvent": (()=>__ΩAppExecutedEvent),
    "onAppError": (()=>onAppError),
    "onAppExecute": (()=>onAppExecute),
    "onAppExecuted": (()=>onAppExecuted),
    "onAppShutdown": (()=>onAppShutdown),
    "setPartialConfig": (()=>setPartialConfig)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/service-container.js [app-ssr] (ecmascript)");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$configuration$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/configuration.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/command.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/path.js [app-ssr] (ecmascript)");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-ssr] (ecmascript)");
const __ΩParameters = [
    'T',
    'args',
    '',
    'Parameters',
    'l>e"!R!RPde#!Ph"!@2""/#qk#\'QRb!Pde"!p)w$y'
];
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
const __ΩError = [
    'name',
    'message',
    'stack',
    'Error',
    'P&4!&4"&4#8Mw$y'
];
;
;
;
;
;
;
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
;
;
;
;
function setPartialConfig(target, partial, incomingPath = '') {
    for(const i in partial){
        const path = (incomingPath ? incomingPath + '.' : '') + i;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isObject"])(partial[i])) {
            setPartialConfig(target, partial[i], path);
        } else {
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["setPathValue"])(target, path, partial[i]);
        }
    }
}
setPartialConfig.__type = [
    'target',
    'partial',
    'incomingPath',
    ()=>"",
    'setPartialConfig',
    'PP&"LM2!P&"LM2"&2#>$"/%'
];
const __ΩEnvNamingStrategy = [
    "same",
    "upper",
    "lower",
    'name',
    "same",
    "upper",
    "lower",
    '',
    'EnvNamingStrategy',
    'P.!.".#P&2$P&.%.&.\'-J/(Jw)y'
];
function camelToUpperCase(str) {
    return str.replace(/[A-Z]+/g, __assignType((letter)=>`_${letter.toUpperCase()}`, [
        'letter',
        '',
        'P&2!"/"'
    ])).toUpperCase();
}
camelToUpperCase.__type = [
    'str',
    'camelToUpperCase',
    'P&2!"/"'
];
function camelToLowerCase(str) {
    return str.replace(/[A-Z]+/g, __assignType((letter)=>`_${letter.toLowerCase()}`, [
        'letter',
        '',
        'P&2!"/"'
    ])).toLowerCase();
}
camelToLowerCase.__type = [
    'str',
    'camelToLowerCase',
    'P&2!"/"'
];
function convertNameStrategy(namingStrategy, name) {
    const strategy = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(namingStrategy) ? namingStrategy(name) || 'same' : namingStrategy;
    if (strategy === 'upper') {
        return camelToUpperCase(name);
    } else if (strategy === 'lower') {
        return camelToLowerCase(name);
    } else if (strategy === 'same') {
        return name;
    } else {
        return strategy;
    }
}
convertNameStrategy.__type = [
    ()=>__ΩEnvNamingStrategy,
    'namingStrategy',
    'name',
    'convertNameStrategy',
    'Pn!2"&2#&/$'
];
function parseEnv(config, prefix, schema, incomingDotPath, incomingEnvPath, namingStrategy, envContainer) {
    for (const property of schema.getProperties()){
        const name = convertNameStrategy(namingStrategy, property.name);
        if (property.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].class || property.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
            parseEnv(config, prefix, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(property.type), (incomingDotPath ? incomingDotPath + '.' : '') + property.name, (incomingEnvPath ? incomingEnvPath + '_' : '') + name, namingStrategy, envContainer);
        } else {
            const dotPath = (incomingDotPath ? incomingDotPath + '.' : '') + property.name;
            const envName = prefix + (incomingEnvPath ? incomingEnvPath + '_' : '') + name;
            if (envContainer[envName] === undefined) continue;
            (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["setPathValue"])(config, dotPath, envContainer[envName]);
        }
    }
}
parseEnv.__type = [
    'config',
    'prefix',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"],
    'schema',
    'incomingDotPath',
    'incomingEnvPath',
    ()=>__ΩEnvNamingStrategy,
    'namingStrategy',
    'envContainer',
    'parseEnv',
    'PP&"LM2!&2"P"7#2$&2%&2&n\'2(P&"LM2)"/*'
];
const __ΩEnvConfigOptions = [
    'envFilePath',
    ()=>__ΩEnvNamingStrategy,
    'namingStrategy',
    'prefix',
    'EnvConfigOptions',
    'PP&&FJ4!8n"4#8&4$8Mw%y'
];
const defaultEnvConfigOptions = {
    prefix: 'APP_',
    envFilePath: [
        '.env'
    ],
    namingStrategy: 'upper'
};
class EnvConfigLoader {
    constructor(options){
        const normalizedOptions = {
            ...defaultEnvConfigOptions,
            ...options
        };
        const { prefix, envFilePath, namingStrategy } = normalizedOptions;
        this.prefix = prefix;
        this.envFilePaths = Array.isArray(envFilePath) ? envFilePath : [
            envFilePath
        ];
        this.namingStrategy = namingStrategy;
    }
    load(module, config, schema) {
        const envConfiguration = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$configuration$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EnvConfiguration"]();
        for (const path of this.envFilePaths){
            if (envConfiguration.loadEnvFile(path)) break;
        }
        const env = Object.assign({}, envConfiguration.getAll());
        Object.assign(env, process.env);
        parseEnv(config, this.prefix, schema, '', convertNameStrategy(this.namingStrategy, module.name), this.namingStrategy, env);
    }
}
EnvConfigLoader.__type = [
    'prefix',
    'envFilePaths',
    ()=>__ΩEnvNamingStrategy,
    'namingStrategy',
    ()=>__ΩEnvConfigOptions,
    'options',
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'module',
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"],
    'schema',
    'load',
    'EnvConfigLoader',
    '&3!9;&F3"9;n#3$9;Pn%2&8"0\'PP"7(2)P&"LM2*P"7+2,"0-5w.'
];
class RootAppModule extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"] {
}
RootAppModule.__type = [
    'T',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'RootAppModule',
    'b!Pe"!7"5e!!6"w#'
];
const __ΩAppEvent = [
    'command',
    'parameters',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'AppEvent',
    'P&4!P&"LM4"P7#4$Mw%y'
];
;
const __ΩAppExecutedEvent = [
    ()=>__ΩAppEvent,
    'exitCode',
    'AppExecutedEvent',
    'Pn!\'4"Mw#y'
];
;
const __ΩAppErrorEvent = [
    ()=>__ΩAppEvent,
    ()=>__ΩError,
    'error',
    'AppErrorEvent',
    'Pn!n"4#Mw$y'
];
;
const onAppExecute = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"].Ω = [
    [
        ()=>__ΩAppEvent,
        'n!'
    ]
], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"]('app.execute'));
const onAppExecuted = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"].Ω = [
    [
        ()=>__ΩAppExecutedEvent,
        'n!'
    ]
], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"]('app.executed'));
const onAppError = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"].Ω = [
    [
        ()=>__ΩAppErrorEvent,
        'n!'
    ]
], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"]('app.error'));
const onAppShutdown = (__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"].Ω = [
    [
        ()=>__ΩAppEvent,
        'n!'
    ]
], new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["DataEventToken"]('app.shutdown'));
class App {
    constructor(appModuleOptions, serviceContainer, appModule){
        this.appModule = appModule || new RootAppModule(appModuleOptions);
        this.serviceContainer = serviceContainer || new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ServiceContainer"](this.appModule);
    }
    static fromModule(module) {
        return new App({}, undefined, module);
    }
    /**
     * Allows to change the module after the configuration has been loaded, right before the service container is built.
     *
     * This enables you to change the module or its imports depending on the configuration the last time before their services are built.
     *
     * At this point no services can be requested as the service container was not built.
     */ setup(...args) {
        this.appModule = this.appModule.setup(...args);
        return this;
    }
    /**
     * Allows to call services before the application bootstraps.
     *
     * This enables you to configure modules and request their services.
     */ use(setup) {
        this.appModule.use(setup);
        return this;
    }
    command(name, callback) {
        callback = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(name) ? name : callback;
        name = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(name) ? '' : name;
        this.appModule.addCommand(name, callback);
        return this;
    }
    addConfigLoader(loader) {
        this.serviceContainer.addConfigLoader(loader);
        return this;
    }
    configure(config) {
        this.serviceContainer.appModule.configure(config);
        return this;
    }
    listen(eventToken, callback, order = 0) {
        const listener = {
            callback,
            order,
            eventToken
        };
        this.appModule.listeners.push(listener);
        return this;
    }
    async dispatch(eventToken, event, injector) {
        return await this.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"]).dispatch(eventToken, event, injector);
    }
    /**
     * Loads environment variables and optionally reads from .env files in order to find matching configuration options
     * in your application and modules in order to set their values.
     *
     * Prefixing ENV variables is encouraged to avoid collisions and by default a prefix of APP_ is used
     * Example:
     *
     * APP_databaseUrl="mongodb://localhost/mydb"
     *
     * new App({}).loadConfigFromEnvVariables('APP_').run();
     *
     *
     * `envFilePath` can be either an absolute or relative path. For relative paths the first
     * folder with a package.json starting from process.cwd() upwards is picked.
     *
     * So if you use 'local.env' make sure a 'local.env' file is located beside your 'package.json'.
     *
     * @param options Configuration options for retrieving configuration from env
     * @returns
     */ loadConfigFromEnv(options) {
        this.addConfigLoader(new EnvConfigLoader(options));
        return this;
    }
    /**
     * Loads a JSON encoded environment variable and applies its content to the configuration.
     *
     * Example:
     *
     * APP_CONFIG={'databaseUrl": "mongodb://localhost/mydb", "moduleA": {"foo": "bar'}}
     *
     * new App().run().loadConfigFromEnvVariable('APP_CONFIG').run();
     */ loadConfigFromEnvVariable(variableName = 'APP_CONFIG') {
        if (!process.env[variableName]) return this;
        this.addConfigLoader({
            load: __assignType(function load(module, config, schema) {
                try {
                    const jsonConfig = JSON.parse(process.env[variableName] || '');
                    setPartialConfig(config, module.name ? jsonConfig[module.name] : jsonConfig);
                } catch (error) {
                    throw new Error(`Invalid JSON in env variable ${variableName}. Parse error: ${error}`);
                }
            }, [
                ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
                'module',
                'config',
                ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"],
                'schema',
                'load',
                'PP"7!2"P&"LM2#P"7$2%"/&'
            ])
        });
        return this;
    }
    async run(argv, bin) {
        const exitCode = await this.execute(argv, bin);
        if (exitCode > 0) process.exit(exitCode);
    }
    get(token = this.get.Ω?.[0], moduleOrClass) {
        this.get.Ω = undefined;
        return this.serviceContainer.getInjector(moduleOrClass || this.appModule).get(token);
    }
    getInjectorContext() {
        return this.serviceContainer.getInjectorContext();
    }
    /**
     * @see InjectorModule.configureProvider
     */ configureProvider(configure, options = {}, type = this./**
     * @see InjectorModule.configureProvider
     */ configureProvider.Ω?.[0]) {
        this.configureProvider.Ω = undefined;
        this.appModule.configureProvider.Ω = [
            [
                type,
                'n!'
            ]
        ], this.appModule.configureProvider(configure, options, type);
        return this;
    }
    async execute(argv, bin) {
        const eventDispatcher = this.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"]);
        const logger = this.get(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"]);
        if ('undefined' !== typeof process) {
            process.on('unhandledRejection', __assignType((error)=>{
                // Will print "unhandledRejection err is not defined"
                logger.error('unhandledRejection', error);
            }, [
                'error',
                '',
                'P"2!"/"'
            ]));
        }
        const scopedInjectorContext = this.getInjectorContext().createChildScope('cli');
        if ('string' !== typeof bin) {
            bin = bin || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getBinFromEnvironment"])();
            let binary = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["pathBasename"])(bin[0]);
            let file = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["pathBasename"])(bin[1]);
            bin = `${binary} ${file}`;
        }
        return await (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["executeCommand"])(bin, argv || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getArgsFromEnvironment"])(), eventDispatcher, logger, scopedInjectorContext, this.serviceContainer.cliControllerRegistry.controllers);
    }
}
App.__type = [
    'T',
    ()=>EnvConfigLoader,
    'envConfigLoader',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ServiceContainer"],
    'serviceContainer',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'appModule',
    'appModuleOptions',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ServiceContainer"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'module',
    ()=>App,
    'fromModule',
    ()=>__ΩParameters,
    "appModule",
    "setup",
    'args',
    'setup',
    '',
    'use',
    'name',
    'callback',
    'command',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩConfigLoader"],
    'loader',
    'addConfigLoader',
    ()=>__ΩPartial,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    "config",
    'config',
    'configure',
    'eventToken',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventListenerCallback"],
    "event",
    'order',
    ()=>0,
    'listen',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩEventOfEventToken"],
    'event',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'dispatch',
    ()=>__ΩEnvConfigOptions,
    'options',
    'loadConfigFromEnv',
    'variableName',
    ()=>"APP_CONFIG",
    'loadConfigFromEnvVariable',
    'argv',
    'bin',
    'run',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'token',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["AppModule"],
    'moduleOrClass',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩResolveToken"],
    'get',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'getInjectorContext',
    'instance',
    ()=>__ΩPartial,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩConfigureProviderOptions"],
    ()=>({}),
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    'configureProvider',
    'execute',
    'App',
    'b!P7"3#8<P7$3%9Pe"!7&3\'Pe"!2(P7)2%8P"7*2\'8"0+PPe#!7,2-Pe#!7.0/sP!.1f.2fo0"@23!04PP"@23$/524!06PP&P"@23"/5J27P"@23"/5288!09Pn:2;!0<Pe"!.?fo>"o="2@!0APe"!2Be"!.DfoC"28\'2E>F!0GPe"!2Be"!oH"2I8P7J2K8$`0LPnM2N8!0OP&2P>Q!0RP"F2S8&F2T8"0UPe"!oV"2W8PP"7XP"7ZoY"J2[8e"!o\\"0]PP7^0_PPe#!2`"@23"/52Anboa"2N>ce"!od"2e8!0fP&F2S8P&F&J2T8\'`0g5wh'
]; //# sourceMappingURL=app.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/src/utils.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "findParentPath": (()=>findParentPath)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (fs, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
;
;
;
function findParentPath(path, origin = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["dirname"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getCurrentFileName"])())) {
    let current = origin;
    while(!(0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$fs$2c$__cjs$29$__["existsSync"])((0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(current, path))){
        const nextFolder = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["resolve"])(current, '..');
        if (nextFolder === current) {
            return undefined;
        }
        current = nextFolder;
    }
    return (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(current, path);
}
findParentPath.__type = [
    'path',
    'origin',
    ()=>(0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["dirname"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getCurrentFileName"])()),
    'findParentPath',
    'P&2!&2">#P&-J/$'
]; //# sourceMappingURL=utils.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/app/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/app.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$command$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/command.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$configuration$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/configuration.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$service$2d$container$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/service-container.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),

};

//# sourceMappingURL=node_modules_%40deepkit_app_dist_esm_0df45e._.js.map