module.exports = {

"[project]/node_modules/is-obj/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
module.exports = (value)=>{
    const type = typeof value;
    return value !== null && (type === 'object' || type === 'function');
};
}}),
"[project]/node_modules/dot-prop/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
const isObj = __turbopack_require__("[project]/node_modules/is-obj/index.js [app-ssr] (ecmascript)");
const disallowedKeys = [
    '__proto__',
    'prototype',
    'constructor'
];
const isValidPath = (pathSegments)=>!pathSegments.some((segment)=>disallowedKeys.includes(segment));
function getPathSegments(path) {
    const pathArray = path.split('.');
    const parts = [];
    for(let i = 0; i < pathArray.length; i++){
        let p = pathArray[i];
        while(p[p.length - 1] === '\\' && pathArray[i + 1] !== undefined){
            p = p.slice(0, -1) + '.';
            p += pathArray[++i];
        }
        parts.push(p);
    }
    if (!isValidPath(parts)) {
        return [];
    }
    return parts;
}
module.exports = {
    get (object, path, value) {
        if (!isObj(object) || typeof path !== 'string') {
            return value === undefined ? object : value;
        }
        const pathArray = getPathSegments(path);
        if (pathArray.length === 0) {
            return;
        }
        for(let i = 0; i < pathArray.length; i++){
            if (!Object.prototype.propertyIsEnumerable.call(object, pathArray[i])) {
                return value;
            }
            object = object[pathArray[i]];
            if (object === undefined || object === null) {
                // `object` is either `undefined` or `null` so we want to stop the loop, and
                // if this is not the last bit of the path, and
                // if it did't return `undefined`
                // it would return `null` if `object` is `null`
                // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`
                if (i !== pathArray.length - 1) {
                    return value;
                }
                break;
            }
        }
        return object;
    },
    set (object, path, value) {
        if (!isObj(object) || typeof path !== 'string') {
            return object;
        }
        const root = object;
        const pathArray = getPathSegments(path);
        for(let i = 0; i < pathArray.length; i++){
            const p = pathArray[i];
            if (!isObj(object[p])) {
                object[p] = {};
            }
            if (i === pathArray.length - 1) {
                object[p] = value;
            }
            object = object[p];
        }
        return root;
    },
    delete (object, path) {
        if (!isObj(object) || typeof path !== 'string') {
            return false;
        }
        const pathArray = getPathSegments(path);
        for(let i = 0; i < pathArray.length; i++){
            const p = pathArray[i];
            if (i === pathArray.length - 1) {
                delete object[p];
                return true;
            }
            object = object[p];
            if (!isObj(object)) {
                return false;
            }
        }
    },
    has (object, path) {
        if (!isObj(object) || typeof path !== 'string') {
            return false;
        }
        const pathArray = getPathSegments(path);
        if (pathArray.length === 0) {
            return false;
        }
        // eslint-disable-next-line unicorn/no-for-loop
        for(let i = 0; i < pathArray.length; i++){
            if (isObj(object)) {
                if (!(pathArray[i] in object)) {
                    return false;
                }
                object = object[pathArray[i]];
            } else {
                return false;
            }
        }
        return true;
    }
};
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "each": (()=>each),
    "eachKey": (()=>eachKey),
    "eachPair": (()=>eachPair)
});
const __ΩArrayLike = [
    'T',
    'length',
    'ArrayLike',
    'b!P\'4"9\'e"!LMw#y'
];
const __ΩIterableIterator = [
    'T',
    ()=>__ΩIterator,
    0,
    ()=>Symbol.iterator,
    'IterableIterator',
    'b!Pe"!o""Pe#!o#"1$Mw%y'
];
const __ΩIterator = [
    'T',
    'TReturn',
    'TNext',
    'args',
    ()=>__ΩIteratorResult,
    'next',
    'value',
    ()=>__ΩIteratorResult,
    'return',
    'e',
    ()=>__ΩIteratorResult,
    'throw',
    'Iterator',
    'b!"c"-c#PPPPGPe%#GJ@2$e#!e#"o%#1&Pe#"2\'8e#!e#"o(#1)P"2*8e#!e#"o+#1,Mw-y'
];
const __ΩIteratorResult = [
    'T',
    'TReturn',
    ()=>__ΩIteratorYieldResult,
    ()=>__ΩIteratorReturnResult,
    'IteratorResult',
    'b!"c"Pe"!o#"e""o$"Jw%y'
];
const __ΩIteratorYieldResult = [
    'TYield',
    false,
    'done',
    'value',
    'IteratorYieldResult',
    'b!P."4#8e"!4$Mw%y'
];
const __ΩIteratorReturnResult = [
    'TReturn',
    true,
    'done',
    'value',
    'IteratorReturnResult',
    'b!P."4#e"!4$Mw%y'
];
eachKey.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'P"o!"2"\'o#"/$'
];
eachKey.__type = [
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'P"2!&o""/#'
];
function* eachKey(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield i;
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield i;
            }
        }
    }
}
eachKey.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'PP""o!"J2"P&\'Jo#"/$'
];
function* each(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield object[i];
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield object[i];
            }
        }
    }
}
each.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'each',
    'PPP&"LM"o!"J2""o#"/$'
];
eachPair.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'P"o!"2"P\'"Go#"/$'
];
eachPair.__type = [
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'PP&"LM2!P&"Go""/#'
];
function* eachPair(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield [
                i,
                object[i]
            ];
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield [
                    i,
                    object[i]
                ];
            }
        }
    }
}
eachPair.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'PPP&"LM"o!"J2"PP&"GP\'"GJo#"/$'
]; //# sourceMappingURL=iterators.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "CustomError": (()=>CustomError),
    "__ΩAbstractClassType": (()=>__ΩAbstractClassType),
    "__ΩClassType": (()=>__ΩClassType),
    "__ΩExtractClassType": (()=>__ΩExtractClassType),
    "appendObject": (()=>appendObject),
    "applyDefaults": (()=>applyDefaults),
    "assertDefined": (()=>assertDefined),
    "assertInstanceOf": (()=>assertInstanceOf),
    "asyncOperation": (()=>asyncOperation),
    "average": (()=>average),
    "changeClass": (()=>changeClass),
    "collectForMicrotask": (()=>collectForMicrotask),
    "copy": (()=>copy),
    "createDynamicClass": (()=>createDynamicClass),
    "createStack": (()=>createStack),
    "deletePathValue": (()=>deletePathValue),
    "empty": (()=>empty),
    "escapeRegExp": (()=>escapeRegExp),
    "first": (()=>first),
    "firstKey": (()=>firstKey),
    "fixAsyncOperation": (()=>fixAsyncOperation),
    "formatError": (()=>formatError),
    "forwardTypeArguments": (()=>forwardTypeArguments),
    "getClassName": (()=>getClassName),
    "getClassPropertyName": (()=>getClassPropertyName),
    "getClassTypeFromInstance": (()=>getClassTypeFromInstance),
    "getCurrentFileName": (()=>getCurrentFileName),
    "getInheritanceChain": (()=>getInheritanceChain),
    "getObjectKeysSize": (()=>getObjectKeysSize),
    "getParentClass": (()=>getParentClass),
    "getPathValue": (()=>getPathValue),
    "hasProperty": (()=>hasProperty),
    "humanBytes": (()=>humanBytes),
    "identifyType": (()=>identifyType),
    "inDebugMode": (()=>inDebugMode),
    "indexOf": (()=>indexOf),
    "isArray": (()=>isArray),
    "isAsyncFunction": (()=>isAsyncFunction),
    "isClass": (()=>isClass),
    "isClassInstance": (()=>isClassInstance),
    "isConstructable": (()=>isConstructable),
    "isFunction": (()=>isFunction),
    "isGlobalClass": (()=>isGlobalClass),
    "isInteger": (()=>isInteger),
    "isIterable": (()=>isIterable),
    "isNull": (()=>isNull),
    "isNumber": (()=>isNumber),
    "isNumeric": (()=>isNumeric),
    "isObject": (()=>isObject),
    "isObjectLiteral": (()=>isObjectLiteral),
    "isPlainObject": (()=>isPlainObject),
    "isPromise": (()=>isPromise),
    "isPrototypeOfBase": (()=>isPrototypeOfBase),
    "isSet": (()=>isSet),
    "isString": (()=>isString),
    "isUndefined": (()=>isUndefined),
    "iterableSize": (()=>iterableSize),
    "last": (()=>last),
    "lastKey": (()=>lastKey),
    "mergePromiseStack": (()=>mergePromiseStack),
    "mergeStack": (()=>mergeStack),
    "prependObjectKeys": (()=>prependObjectKeys),
    "prettyPrintObject": (()=>prettyPrintObject),
    "range": (()=>range),
    "rangeArray": (()=>rangeArray),
    "setPathValue": (()=>setPathValue),
    "size": (()=>size),
    "sleep": (()=>sleep),
    "stringifyValueWithType": (()=>stringifyValueWithType),
    "time": (()=>time),
    "zip": (()=>zip)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/dot-prop/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-ssr] (ecmascript)");
const __ΩError = [
    'name',
    'message',
    'stack',
    'Error',
    'P&4!&4"&4#8Mw$y'
];
const __ΩObject = [
    ()=>Function,
    'constructor',
    'toString',
    'toLocaleString',
    0,
    'valueOf',
    ()=>__ΩPropertyKey,
    'v',
    'hasOwnProperty',
    0,
    'isPrototypeOf',
    ()=>__ΩPropertyKey,
    'propertyIsEnumerable',
    'Object',
    'PPu!4"P&1#P&1$Pn%1&Pn\'2()1)Pn*2()1+Pn,2()1-Mw.y'
];
const __ΩIterableIterator = [
    'T',
    ()=>__ΩIterator,
    0,
    ()=>Symbol.iterator,
    'IterableIterator',
    'b!Pe"!o""Pe#!o#"1$Mw%y'
];
const __ΩPropertyKey = [
    'PropertyKey',
    'P&\'+Jw!y'
];
const __ΩIterator = [
    'T',
    'TReturn',
    'TNext',
    'args',
    ()=>__ΩIteratorResult,
    'next',
    'value',
    ()=>__ΩIteratorResult,
    'return',
    'e',
    ()=>__ΩIteratorResult,
    'throw',
    'Iterator',
    'b!"c"-c#PPPPGPe%#GJ@2$e#!e#"o%#1&Pe#"2\'8e#!e#"o(#1)P"2*8e#!e#"o+#1,Mw-y'
];
const __ΩIteratorResult = [
    'T',
    'TReturn',
    ()=>__ΩIteratorYieldResult,
    ()=>__ΩIteratorReturnResult,
    'IteratorResult',
    'b!"c"Pe"!o#"e""o$"Jw%y'
];
const __ΩIteratorYieldResult = [
    'TYield',
    false,
    'done',
    'value',
    'IteratorYieldResult',
    'b!P."4#8e"!4$Mw%y'
];
const __ΩIteratorReturnResult = [
    'TReturn',
    true,
    'done',
    'value',
    'IteratorReturnResult',
    'b!P."4#e"!4$Mw%y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
class CustomError extends Error {
    constructor(...args){
        super(...args);
        this.name = this.constructor.name;
    }
}
CustomError.__type = [
    ()=>Error,
    'name',
    'stack',
    ()=>__ΩError,
    'cause',
    'args',
    'constructor',
    'CustomError',
    'P7!&3"&3#8Pn$"J3%8P"@2&"0\'5w('
];
const __ΩClassType = [
    'T',
    'args',
    'new',
    'ClassType',
    '"c!PP"@2"e#!1#Mw$y'
];
;
const __ΩAbstractClassType = [
    'T',
    'args',
    'new',
    'AbstractClassType',
    '"c!P"@2"e"!/#w$y'
];
;
const __ΩExtractClassType = [
    'T',
    ()=>__ΩAbstractClassType,
    'ExtractClassType',
    'l:e"!R!RPde#!h!!o""qk#\'QRb!Pde"!p)w#y'
];
;
function getClassName(classTypeOrInstance) {
    if (!classTypeOrInstance) return 'undefined';
    const proto = classTypeOrInstance['prototype'] ? classTypeOrInstance['prototype'] : classTypeOrInstance;
    return proto.constructor.name || 'anonymous class';
}
getClassName.__type = [
    ()=>__ΩClassType,
    ()=>__ΩObject,
    'classTypeOrInstance',
    'getClassName',
    'PP"o!"n"J2#&/$'
];
function getClassPropertyName(classType, propertyName) {
    const name = getClassName(classType);
    return `${name}.${propertyName}`;
}
getClassPropertyName.__type = [
    ()=>__ΩClassType,
    ()=>__ΩObject,
    'classType',
    'propertyName',
    'getClassPropertyName',
    'PP"o!"n"J2#&2$&/%'
];
function applyDefaults(classType, target) {
    const classInstance = new classType();
    for (const [i, v] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["eachPair"])(target)){
        classInstance[i] = v;
    }
    return classInstance;
}
applyDefaults.__type = [
    ()=>__ΩClassType,
    'classType',
    'target',
    'applyDefaults',
    'P"o!"2"P&"LM2#"/$'
];
function identifyType(obj) {
    return ((({}).toString.call(obj).match(/\s([a-zA-Z]+)/) || [])[1] || '').toLowerCase();
}
identifyType.__type = [
    'obj',
    'identifyType',
    'P"2!"/"'
];
function isPlainObject(obj) {
    return Boolean(obj && typeof obj === 'object' && obj.constructor instanceof obj.constructor);
}
isPlainObject.__type = [
    'obj',
    'isPlainObject',
    'P"2!!/"'
];
function getClassTypeFromInstance(target) {
    if (!isClassInstance(target)) {
        throw new Error(`Value is not a class instance. Got ${stringifyValueWithType(target)}`);
    }
    return target['constructor'];
}
getClassTypeFromInstance.__type = [
    'target',
    ()=>__ΩClassType,
    'getClassTypeFromInstance',
    'P"2!"o""/#'
];
function isClassInstance(target) {
    return target !== undefined && target !== null && target['constructor'] && Object.getPrototypeOf(target) === target['constructor'].prototype && !isPlainObject(target) && isObject(target);
}
isClassInstance.__type = [
    'target',
    'isClassInstance',
    'P"2!)/"'
];
function stringifyValueWithType(value, depth = 0) {
    if ('string' === typeof value) return `string(${value})`;
    if ('number' === typeof value) return `number(${value})`;
    if ('boolean' === typeof value) return `boolean(${value})`;
    if ('bigint' === typeof value) return `bigint(${value})`;
    if (isPlainObject(value)) return `object ${depth < 2 ? prettyPrintObject(value, depth) : ''}`;
    if (isArray(value)) return `Array`;
    if (isClass(value)) return `${getClassName(value)}`;
    if (isObject(value)) return `${getClassName(getClassTypeFromInstance(value))} ${depth < 2 ? prettyPrintObject(value, depth) : ''}`;
    if ('function' === typeof value) return `function ${value.name}`;
    if (null === value) return `null`;
    return 'undefined';
}
stringifyValueWithType.__type = [
    'value',
    'depth',
    ()=>0,
    'stringifyValueWithType',
    'P"2!\'2">#&/$'
];
function changeClass(value, newClass) {
    return Object.assign(Object.create(newClass.prototype), value);
}
changeClass.__type = [
    'value',
    ()=>__ΩClassType,
    'newClass',
    'changeClass',
    'P%2!"o""2#"/$'
];
function prettyPrintObject(object, depth = 0) {
    const res = [];
    for(const i in object){
        res.push(i + ': ' + stringifyValueWithType(object[i], depth + 1));
    }
    return '{' + res.join(',') + '}';
}
prettyPrintObject.__type = [
    'object',
    'depth',
    ()=>0,
    'prettyPrintObject',
    'P%2!\'2">#&/$'
];
function isFunction(obj) {
    if ('function' === typeof obj) {
        return !obj.toString().startsWith('class ') && !obj.toString().startsWith('class{');
    }
    return false;
}
isFunction.__type = [
    'obj',
    'isFunction',
    'P"2!!/"'
];
const AsyncFunction = (async ()=>{}).constructor;
function isAsyncFunction(obj) {
    return obj instanceof AsyncFunction;
}
isAsyncFunction.__type = [
    'obj',
    'isAsyncFunction',
    'P"2!!/"'
];
function isPromise(obj) {
    return obj !== null && typeof obj === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function' && typeof obj.finally === 'function';
}
isPromise.__type = [
    'obj',
    'isPromise',
    'PP""`J2!!/"'
];
function isClass(obj) {
    if ('function' === typeof obj) {
        return obj.toString().startsWith('class ') || obj.toString().startsWith('class{');
    }
    return false;
}
isClass.__type = [
    'obj',
    'isClass',
    'P"2!!/"'
];
function isGlobalClass(obj) {
    if ('function' !== typeof obj) return false;
    if ('undefined' !== typeof window) {
        return window[getClassName(obj)] === obj;
    }
    if ('undefined' !== typeof global) {
        return global[getClassName(obj)] === obj;
    }
    return false;
}
isGlobalClass.__type = [
    'obj',
    'isGlobalClass',
    'P"2!!/"'
];
function isObject(obj) {
    if (obj === null) {
        return false;
    }
    return typeof obj === 'object' && !isArray(obj);
}
isObject.__type = [
    'obj',
    'isObject',
    'P"2!!/"'
];
function isObjectLiteral(obj) {
    return isObject(obj) && !(obj instanceof Date) && !(obj instanceof Map) && !(obj instanceof Set);
}
isObjectLiteral.__type = [
    'obj',
    'isObjectLiteral',
    'P"2!!/"'
];
const isArray = Array.isArray;
function isNull(obj) {
    return null === obj;
}
isNull.__type = [
    'obj',
    'isNull',
    'P"2!!/"'
];
function isUndefined(obj) {
    return undefined === obj;
}
isUndefined.__type = [
    'obj',
    'isUndefined',
    'P"2!!/"'
];
function isSet(obj) {
    return !isNull(obj) && !isUndefined(obj);
}
isSet.__type = [
    'obj',
    'isSet',
    'P"2!)/"'
];
function isNumber(obj) {
    return 'number' === identifyType(obj);
}
isNumber.__type = [
    'obj',
    'isNumber',
    'P"2!!/"'
];
function isNumeric(s) {
    if ('number' === typeof s) return true;
    let points = 0;
    for(let i = s.length - 1; i >= 0; i--){
        const d = s.charCodeAt(i);
        if (d === 46) {
            //46 = .
            if (points++ > 0) return false;
            continue;
        }
        if (d < 48 || d > 57) return false;
    }
    return true;
}
isNumeric.__type = [
    's',
    'isNumeric',
    'PP&\'J2!)/"'
];
const isInteger = Number.isInteger || __assignType(function(obj) {
    return obj % 1 === 0;
}, [
    'obj',
    '',
    'P"2!"/"'
]);
function isString(obj) {
    return 'string' === identifyType(obj);
}
isString.__type = [
    'obj',
    'isString',
    'P"2!!/"'
];
function indexOf(array, item) {
    if (!array) {
        return -1;
    }
    return array.indexOf(item);
}
indexOf.__type = [
    'array',
    'item',
    'indexOf',
    'P"F2!"2"\'/#'
];
async function sleep(seconds) {
    return Promise.Ω = [
        [
            '$'
        ]
    ], new Promise(__assignType((resolve)=>setTimeout(resolve, seconds * 1000), [
        'resolve',
        '',
        'P"2!"/"'
    ]));
}
sleep.__type = [
    'seconds',
    'sleep',
    'P\'2!$`/"'
];
function copy(v) {
    if (isArray(v)) {
        return v.slice(0);
    }
    return v;
}
copy.__type = [
    'v',
    'copy',
    'P"F2!"F/"'
];
function empty(value) {
    if (!value) return true;
    if (isArray(value)) {
        return value.length === 0;
    } else {
        for(const i in value)if (value.hasOwnProperty(i)) return false;
        return true;
    }
}
empty.__type = [
    'value',
    'empty',
    'PP"F%PMJ2!8)/"'
];
function size(array) {
    if (!array) {
        return 0;
    }
    if (isArray(array)) {
        return array.length;
    } else {
        return getObjectKeysSize(array);
    }
}
size.__type = [
    'array',
    'size',
    'PP"FP&"LMJ2!\'/"'
];
function firstKey(v) {
    return Object.keys(v)[0];
}
firstKey.__type = [
    'v',
    'firstKey',
    'PPP&"LM%J2!P&-J/"'
];
function lastKey(v) {
    const keys = Object.keys(v);
    if (keys.length) {
        return;
    }
    return keys[keys.length - 1];
}
lastKey.__type = [
    'v',
    'lastKey',
    'PPP&"LM%J2!P&-J/"'
];
function first(v) {
    if (isArray(v)) {
        return v[0];
    }
    const key = firstKey(v);
    if (key) {
        return v[key];
    }
    return;
}
first.__type = [
    'v',
    'first',
    'PPP&"LM"FJ2!P"-J/"'
];
function last(v) {
    if (isArray(v)) {
        if (v.length > 0) {
            return v[v.length - 1];
        }
        return;
    }
    const key = firstKey(v);
    if (key) {
        return v[key];
    }
    return;
}
last.__type = [
    'v',
    'last',
    'PPP&"LM"FJ2!P"-J/"'
];
function average(array) {
    let sum = 0;
    for (const n of array){
        sum += n;
    }
    return sum / array.length;
}
average.__type = [
    'array',
    'average',
    'P\'F2!\'/"'
];
function prependObjectKeys(o, prependText) {
    const converted = {};
    for(const i in o){
        if (!o.hasOwnProperty(i)) continue;
        converted[prependText + i] = o[i];
    }
    return converted;
}
prependObjectKeys.__type = [
    'o',
    'prependText',
    'prependObjectKeys',
    'PP&"LM2!&2"P&"LM/#'
];
function appendObject(origin, extend, prependKeyName = '') {
    const no = prependObjectKeys(extend, prependKeyName);
    for (const [i, v] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["eachPair"])(no)){
        origin[i] = v;
    }
}
appendObject.__type = [
    'origin',
    'extend',
    'prependKeyName',
    ()=>"",
    'appendObject',
    'PP&"LM2!P&"LM2"&2#>$"/%'
];
async function asyncOperation(executor) {
    try {
        return await (Promise.Ω = [
            [
                ()=>executor,
                'value',
                '',
                'resolve',
                'error',
                'reject',
                'Pdi!PPh#!2"$/#2$P"2%$/#2&P$$`J/#qe!!!j'
            ]
        ], new Promise(__assignType(async (resolve, reject)=>{
            try {
                await executor(resolve, reject);
            } catch (e) {
                reject(e);
            }
        }, [
            'resolve',
            'reject',
            '',
            'P"2!"2""/#'
        ])));
    } catch (error) {
        mergeStack(error, createStack());
        throw error;
    }
}
asyncOperation.__type = [
    'value',
    '',
    'resolve',
    'error',
    'reject',
    'executor',
    'asyncOperation',
    'PPP"2!$/"2#P"2$$/"2%P$$`J/"2&"`/\''
];
function fixAsyncOperation(promise) {
    return asyncOperation(__assignType(async (resolve, reject)=>{
        resolve(await promise);
    }, [
        'resolve',
        'reject',
        '',
        'P"2!"2""/#'
    ]));
}
fixAsyncOperation.__type = [
    'promise',
    'fixAsyncOperation',
    'P"`2!"`/"'
];
function mergePromiseStack(promise, stack) {
    stack = stack || createStack();
    promise.then(()=>{}, __assignType((error)=>{
        mergeStack(error, stack || '');
    }, [
        'error',
        '',
        'P"2!"/"'
    ]));
    return promise;
}
mergePromiseStack.__type = [
    'promise',
    'stack',
    'mergePromiseStack',
    'P"`2!&2"8"`/#'
];
function createStack(removeCallee = true) {
    if (Error.stackTraceLimit === 10) Error.stackTraceLimit = 100;
    let stack = new Error().stack || '';
    /*
    at createStack (/file/path)
    at promiseToObservable (/file/path)
    at userLandCode1 (/file/path)
    at userLandCode2 (/file/path)
     */ //remove "at createStack"
    stack = stack.slice(stack.indexOf('   at ') + 6);
    stack = stack.slice(stack.indexOf('   at ') - 1);
    if (removeCallee) {
        //remove callee
        stack = stack.slice(stack.indexOf('   at ') + 6);
        stack = stack.slice(stack.indexOf('   at ') - 1);
    }
    return stack;
}
createStack.__type = [
    'removeCallee',
    ()=>true,
    'createStack',
    'P)2!>"&/#'
];
function mergeStack(error, stack) {
    if (error instanceof Error && error.stack) {
        error.stack += '\n' + stack;
    }
}
mergeStack.__type = [
    ()=>__ΩError,
    'error',
    'stack',
    'mergeStack',
    'Pn!2"&2#"/$'
];
function collectForMicrotask(callback) {
    let items = [];
    let taskScheduled = false;
    return __assignType((arg)=>{
        items.push(arg);
        if (!taskScheduled) {
            taskScheduled = true;
            queueMicrotask(()=>{
                taskScheduled = false;
                callback(items);
                items.length = 0;
            });
        }
    }, [
        ()=>callback,
        'args',
        '',
        'arg',
        'PPdi!Ph"!F2"$/#qe!!!j2$"/#'
    ]);
}
collectForMicrotask.__type = [
    'args',
    '',
    'callback',
    'arg',
    'collectForMicrotask',
    'PP"F2!$/"2#P"2$$/"/%'
];
function time() {
    return Date.now() / 1000;
}
time.__type = [
    'time',
    'P\'/!'
];
function getPathValue(bag, parameterPath, defaultValue) {
    if (parameterPath === '' || parameterPath === undefined) return bag;
    if (isSet(bag[parameterPath])) {
        return bag[parameterPath];
    }
    const result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].get(bag, parameterPath);
    return isSet(result) ? result : defaultValue;
}
getPathValue.__type = [
    'bag',
    'parameterPath',
    'defaultValue',
    'getPathValue',
    'PP&"LM2!&2""2#8"/$'
];
function setPathValue(bag, parameterPath, value) {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].set(bag, parameterPath, value);
}
setPathValue.__type = [
    'bag',
    'parameterPath',
    'value',
    'setPathValue',
    'P%2!&2""2#"/$'
];
function deletePathValue(bag, parameterPath) {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].delete(bag, parameterPath);
}
deletePathValue.__type = [
    'bag',
    'parameterPath',
    'deletePathValue',
    'P%2!&2""/#'
];
function humanBytes(bytes, si = false) {
    const thresh = si ? 1000 : 1024;
    if (Math.abs(bytes) < thresh) {
        return bytes + ' B';
    }
    const units = si ? [
        'kB',
        'MB',
        'GB',
        'TB',
        'PB',
        'EB',
        'ZB',
        'YB'
    ] : [
        'KiB',
        'MiB',
        'GiB',
        'TiB',
        'PiB',
        'EiB',
        'ZiB',
        'YiB'
    ];
    let u = -1;
    do {
        bytes /= thresh;
        ++u;
    }while (Math.abs(bytes) >= thresh && u < units.length - 1)
    return bytes.toFixed(2) + ' ' + units[u];
}
humanBytes.__type = [
    'bytes',
    'si',
    ()=>false,
    'humanBytes',
    'P\'2!)2">#&/$'
];
function getObjectKeysSize(obj) {
    let size = 0;
    for(let i in obj)if (obj.hasOwnProperty(i)) size++;
    return size;
}
getObjectKeysSize.__type = [
    'obj',
    'getObjectKeysSize',
    'P%2!\'/"'
];
function isConstructable(fn) {
    try {
        new new Proxy(fn, {
            construct: ()=>({})
        });
        return true;
    } catch (err) {
        return false;
    }
}
isConstructable.__type = [
    'fn',
    'isConstructable',
    'P"2!)/"'
];
function isPrototypeOfBase(prototype, base) {
    if (!prototype) return false;
    if (prototype === base) return true;
    let currentProto = Object.getPrototypeOf(prototype);
    while(currentProto && currentProto !== Object.prototype){
        if (currentProto === base) return true;
        currentProto = Object.getPrototypeOf(currentProto);
    }
    return false;
}
isPrototypeOfBase.__type = [
    ()=>__ΩAbstractClassType,
    'prototype',
    ()=>__ΩClassType,
    'base',
    'isPrototypeOfBase',
    'PPn!-J2"n#2$)/%'
];
function getParentClass(classType) {
    const parent = Object.getPrototypeOf(classType);
    if (parent === Object.prototype || Object.getPrototypeOf(parent) === Object.prototype) return;
    return parent;
}
getParentClass.__type = [
    ()=>__ΩClassType,
    'classType',
    ()=>__ΩClassType,
    'getParentClass',
    'Pn!2"Pn#-J/$'
];
function getInheritanceChain(classType) {
    const chain = [
        classType
    ];
    let current = classType;
    while(current = getParentClass(current)){
        chain.push(current);
    }
    return chain;
}
getInheritanceChain.__type = [
    ()=>__ΩClassType,
    'classType',
    ()=>__ΩClassType,
    'getInheritanceChain',
    'Pn!2"n#F/$'
];
function inDebugMode() {
    return typeof v8debug === 'object' || /--debug|--inspect/.test(process.execArgv.join(' '));
}
inDebugMode.__type = [
    'inDebugMode',
    'P"/!'
];
function createDynamicClass(name, base) {
    if (base) {
        let baseName = getClassName(base);
        if (baseName === name) baseName += 'Base';
        return new Function(baseName, `return class ${name} extends ${baseName} {}`)(base);
    }
    return new Function(`return class ${name} {}`)();
}
createDynamicClass.__type = [
    'name',
    ()=>__ΩClassType,
    'base',
    ()=>__ΩClassType,
    'createDynamicClass',
    'P&2!n"2#8n$/%'
];
function isIterable(value) {
    return isArray(value) || value instanceof Set || value instanceof Map;
}
isIterable.__type = [
    'value',
    'isIterable',
    'P"2!)/"'
];
function iterableSize(value) {
    return isArray(value) ? value.length : value.size || 0;
}
iterableSize.__type = [
    'value',
    'iterableSize',
    'PP#F#D##EJ2!\'/"'
];
function getCurrentFileName() {
    const e = new Error;
    const initiator = e.stack.split('\n').slice(2, 3)[0];
    let path = /(?<path>[^(\s]+):[0-9]+:[0-9]+/.exec(initiator).groups.path;
    if (path.indexOf('file') >= 0) {
        path = new URL(path).pathname;
    }
    if (path[0] === '/' && process.platform === 'win32') {
        path = path.slice(1);
    }
    return path;
}
getCurrentFileName.__type = [
    'getCurrentFileName',
    'P&/!'
];
function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}
escapeRegExp.__type = [
    'string',
    'escapeRegExp',
    'P&2!&/"'
];
function hasProperty(object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
}
hasProperty.__type = [
    'object',
    'property',
    'hasProperty',
    'P"2!"2")/#'
];
function* range(startOrLength, stop = 0, step = 1) {
    let i = startOrLength;
    let end = stop;
    if (stop === 0) {
        i = 0;
        end = startOrLength;
    }
    for(; i < end; i += step){
        yield i;
    }
}
range.__type = [
    'startOrLength',
    'stop',
    ()=>0,
    'step',
    ()=>1,
    ()=>__ΩIterableIterator,
    'range',
    'P\'2!\'2">#\'2$>%\'o&"/\''
];
function rangeArray(startOrLength, stop = 0, step = 1) {
    return [
        ...range(startOrLength, stop, step)
    ];
}
rangeArray.__type = [
    'startOrLength',
    'stop',
    ()=>0,
    'step',
    ()=>1,
    'rangeArray',
    'P\'2!\'2">#\'2$>%\'F/&'
];
function zip(...args) {
    const minLength = Math.min(...args.map(__assignType((arr)=>arr.length, [
        'arr',
        '',
        'P"2!"/"'
    ])));
    //@ts-ignore
    return Array.from({
        length: minLength
    }).map(__assignType((_, i)=>args.map(__assignType((arr)=>arr[i], [
            'arr',
            '',
            'P"2!"/"'
        ])), [
        '_',
        'i',
        '',
        'P"2!"2""/#'
    ]));
}
zip.__type = [
    'args',
    'zip',
    'l:e"!R!RPd"e#!fh!!Fqk#\'QRP"@2!Pd"gN)!F/"'
];
function forwardTypeArguments(x, y) {
    y.Ω = x.Ω;
}
forwardTypeArguments.__type = [
    'x',
    'y',
    'forwardTypeArguments',
    'P"2!"2"$/#'
];
function formatError(error, withStack = false) {
    if (error && error.name === 'AggregateError' && 'errors' in error) {
        return `${withStack && error.stack || `AggregateError: ${error.message}`}\nErrors:\n${error.errors.map(__assignType((v)=>formatError(v), [
            'v',
            '',
            'P"2!"/"'
        ])).join('\n')}`;
    }
    if (error instanceof Error) {
        let current = error.cause;
        let errors = [
            withStack && error.stack || error.message || 'Error'
        ];
        while(current){
            errors.push(`cause by ${formatError(current)}`);
            current = current.cause;
        }
        return errors.join('\n');
    }
    if (withStack && error.stack) return error.stack;
    return String(error);
}
formatError.__type = [
    'error',
    'withStack',
    ()=>false,
    'formatError',
    'P"2!)2">#&/$'
];
function assertInstanceOf(object, constructor) {
    if (!(object instanceof constructor)) {
        throw new Error(`Object ${getClassName(object)} is not an instance of the expected class ${getClassName(constructor)}`);
    }
}
assertInstanceOf.__type = [
    'object',
    'args',
    'new',
    'constructor',
    'assertInstanceOf',
    'P"2!PP"@2""1#M2$!/%'
];
function assertDefined(value) {
    if (value === null || value === undefined) {
        throw new Error(`Value is not defined`);
    }
}
assertDefined.__type = [
    'value',
    'assertDefined',
    'P"2!!/"'
]; //# sourceMappingURL=core.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "toFastProperties": (()=>toFastProperties)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$to$2d$fast$2d$properties$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/to-fast-properties/index.js [app-ssr] (ecmascript)");
;
function toFastProperties(obj) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$to$2d$fast$2d$properties$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(obj);
}
toFastProperties.__type = [
    'obj',
    'toFastProperties',
    'P"2!"/"'
]; //# sourceMappingURL=perf.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/decorators.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "log": (()=>log),
    "singleStack": (()=>singleStack),
    "stack": (()=>stack)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-ssr] (ecmascript)");
const __ΩPropertyDescriptor = [
    'configurable',
    'enumerable',
    'value',
    'writable',
    'get',
    'v',
    'set',
    'PropertyDescriptor',
    'P)4!8)4"8"4#8)4$8P"1%P"2&$1\'Mw(y'
];
const __ΩTypedPropertyDescriptor = [
    'T',
    'enumerable',
    'configurable',
    'writable',
    'value',
    '',
    'get',
    'set',
    'TypedPropertyDescriptor',
    'b!P)4"8)4#8)4$8e"!4%8Pe#!/&4\'8Pe#!2%$/&4(8Mw)y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
function log() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        descriptor.value = __assignType(function(...args) {
            const a = args.map(__assignType((v)=>typeof v, [
                'v',
                '',
                'P"2!"/"'
            ])).join(',');
            console.info((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(target) + '::' + String(propertyKey) + '(' + a + ')');
            return orig.apply(this, args);
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
        return descriptor;
    }, [
        'target',
        'propertyKey',
        ()=>__ΩPropertyDescriptor,
        'descriptor',
        '',
        'P%2!P&+J2"n#2$"/%'
    ]);
}
log.__type = [
    'log',
    'P"/!'
];
function stack() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        // console.log('sync patch', propertyKey, constructor.prototype[propertyKey]);
        descriptor.value = __assignType(async function(...args) {
            const name = '__c_' + propertyKey;
            if (this[name] === undefined) {
                this[name] = null;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFastProperties"])(this);
            }
            while(this[name]){
                await this[name];
            }
            this[name] = orig.apply(this, args);
            try {
                return await this[name];
            } finally{
                this[name] = null;
            }
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
    }, [
        'target',
        'propertyKey',
        ()=>__ΩTypedPropertyDescriptor,
        'args',
        '',
        'descriptor',
        'P%2!&2"P"@2$"`/%o#"2&"/%'
    ]);
}
stack.__type = [
    'stack',
    'P"/!'
];
function singleStack() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        descriptor.value = __assignType(async function(...args) {
            const name = '__sc_' + propertyKey;
            if (this[name] === undefined) {
                this[name] = null;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFastProperties"])(this);
            }
            if (this[name]) {
                return await this[name];
            }
            this[name] = orig.apply(this, args);
            try {
                return await this[name];
            } finally{
                this[name] = null;
            }
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
    }, [
        'target',
        'propertyKey',
        ()=>__ΩTypedPropertyDescriptor,
        'args',
        '',
        'descriptor',
        'P%2!&2"P"@2$"`/%o#"2&"/%'
    ]);
}
singleStack.__type = [
    'singleStack',
    'P"/!'
]; //# sourceMappingURL=decorators.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/enum.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getEnumKeyLabelMap": (()=>getEnumKeyLabelMap),
    "getEnumLabel": (()=>getEnumLabel),
    "getEnumLabels": (()=>getEnumLabels),
    "getEnumValues": (()=>getEnumValues),
    "getValidEnumValue": (()=>getValidEnumValue),
    "isValidEnumValue": (()=>isValidEnumValue)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-ssr] (ecmascript)");
const __ΩObject = [
    ()=>Function,
    'constructor',
    'toString',
    'toLocaleString',
    0,
    'valueOf',
    ()=>__ΩPropertyKey,
    'v',
    'hasOwnProperty',
    0,
    'isPrototypeOf',
    ()=>__ΩPropertyKey,
    'propertyIsEnumerable',
    'Object',
    'PPu!4"P&1#P&1$Pn%1&Pn\'2()1)Pn*2()1+Pn,2()1-Mw.y'
];
const __ΩPropertyKey = [
    'PropertyKey',
    'P&\'+Jw!y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
const cacheEnumLabels = (Map.Ω = [
    [
        ()=>__ΩObject,
        'n!'
    ],
    [
        '&F'
    ]
], new Map());
function getEnumLabel(enumType, id) {
    for (const i of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["eachKey"])(enumType)){
        if (id === enumType[i]) {
            return i;
        }
    }
}
getEnumLabel.__type = [
    'enumType',
    'id',
    'getEnumLabel',
    'PP&"LM2!"2""/#'
];
function getEnumLabels(enumDefinition) {
    let value = cacheEnumLabels.get(enumDefinition);
    if (!value) {
        value = Object.keys(enumDefinition).filter(__assignType((v)=>!Number.isFinite(parseInt(v, 10)), [
            'v',
            '',
            'P"2!"/"'
        ]));
        cacheEnumLabels.set(enumDefinition, value);
    }
    return value;
}
getEnumLabels.__type = [
    'enumDefinition',
    'getEnumLabels',
    'P"2!"/"'
];
const cacheEnumKeys = (Map.Ω = [
    [
        ()=>__ΩObject,
        'n!'
    ],
    [
        '&F'
    ]
], new Map());
function getEnumValues(enumDefinition) {
    let value = cacheEnumKeys.get(enumDefinition);
    if (!value) {
        value = Object.values(enumDefinition).filter(__assignType((v)=>{
            return 'number' !== typeof enumDefinition[v];
        }, [
            'v',
            '',
            'P"2!"/"'
        ]));
        cacheEnumKeys.set(enumDefinition, value);
    }
    return value;
}
getEnumValues.__type = [
    'enumDefinition',
    'getEnumValues',
    'P"2!"F/"'
];
function getEnumKeyLabelMap(enumDefinition) {
    const map = (Map.Ω = [
        [
            '"'
        ],
        [
            '&'
        ]
    ], new Map());
    const keys = getEnumValues(enumDefinition);
    const labels = getEnumLabels(enumDefinition);
    for(let i = 0; i < keys.length; i++){
        map.set(keys[i], labels[i]);
    }
    return map;
}
getEnumKeyLabelMap.__type = [
    'enumDefinition',
    'getEnumKeyLabelMap',
    'P"2!"&E/"'
];
function isValidEnumValue(enumDefinition, value, allowLabelsAsValue = false) {
    if (allowLabelsAsValue) {
        const labels = getEnumLabels(enumDefinition);
        if (-1 !== labels.indexOf(String(value))) {
            return true;
        }
    }
    const values = getEnumValues(enumDefinition);
    return -1 !== values.indexOf(+value) || -1 !== values.indexOf(value) || -1 !== values.indexOf(String(value));
}
isValidEnumValue.__type = [
    'enumDefinition',
    'value',
    'allowLabelsAsValue',
    'isValidEnumValue',
    'P"2!"2""2#"/$'
];
function getValidEnumValue(enumDefinition, value, allowLabelsAsValue = false) {
    if (allowLabelsAsValue) {
        const labels = getEnumLabels(enumDefinition);
        if (-1 !== labels.indexOf(String(value))) {
            return enumDefinition[String(value)];
        }
    }
    const values = getEnumValues(enumDefinition);
    if (-1 !== values.indexOf(value)) {
        return value;
    }
    if (-1 !== values.indexOf(+value)) {
        return +value;
    }
    if (-1 !== values.indexOf(String(value))) {
        return String(value);
    }
}
getValidEnumValue.__type = [
    'enumDefinition',
    'value',
    'allowLabelsAsValue',
    'getValidEnumValue',
    'P"2!"2""2#"/$'
]; //# sourceMappingURL=enum.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/timer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "Timer": (()=>Timer)
});
class Timer {
    constructor(){
        this.timeoutTimers = []; //any necessary to be compatible with NodeJS/Browser env
    }
    setTimeout(cb, timeout) {
        const timer = setTimeout(cb, timeout);
        this.timeoutTimers.push(timer);
        return timer;
    }
    /**
     * Clears all timers at once.
     */ clear() {
        for (const timeout of this.timeoutTimers){
            clearTimeout(timeout);
        }
    }
}
Timer.__type = [
    'timeoutTimers',
    function() {
        return [];
    },
    '',
    'cb',
    'timeout',
    'setTimeout',
    'clear',
    'Timer',
    '"F3!<>"PP$/#2$\'2%"0&P"0\'5w('
]; //# sourceMappingURL=timer.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/**
 * @public
 */ __turbopack_esm__({
    "arrayClear": (()=>arrayClear),
    "arrayHasItem": (()=>arrayHasItem),
    "arrayMoveItem": (()=>arrayMoveItem),
    "arrayRemoveItem": (()=>arrayRemoveItem)
});
function arrayHasItem(array, item) {
    return -1 !== array.indexOf(item);
}
arrayHasItem.__type = [
    'array',
    'item',
    'arrayHasItem',
    'P"F2!"2")/#'
];
function arrayClear(array) {
    const found = array.length;
    array.length = 0;
    return found;
}
arrayClear.__type = [
    'array',
    'arrayClear',
    'P"F2!\'/"'
];
function arrayRemoveItem(array, item) {
    const index = array.indexOf(item);
    if (-1 !== index) {
        array.splice(index, 1);
        return true;
    }
    return false;
}
arrayRemoveItem.__type = [
    'array',
    'item',
    'arrayRemoveItem',
    'P"F2!"2")/#'
];
function arrayMoveItem(array, item, move) {
    if (move === 0) return array;
    const index = array.indexOf(item);
    if (-1 !== index) {
        const newIndex = index + move;
        array.splice(index, 1);
        if (newIndex <= 0) {
            array.unshift(item);
        } else if (newIndex >= array.length) {
            array.push(item);
        } else {
            array.splice(newIndex, 0, item);
        }
    }
    return array;
}
arrayMoveItem.__type = [
    'array',
    'item',
    'move',
    'arrayMoveItem',
    'P"2!"2"\'2#"/$'
]; //# sourceMappingURL=array.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/process-locker.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Mutex": (()=>Mutex),
    "ProcessLock": (()=>ProcessLock),
    "ProcessLocker": (()=>ProcessLocker)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-ssr] (ecmascript)");
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
const LOCKS = {};
class ProcessLock {
    constructor(id){
        this.id = id;
        this.holding = false;
    }
    async acquire(ttl = 0, timeout = 0) {
        if (this.holding) {
            throw new Error('Lock already acquired');
        }
        return Promise.Ω = [
            [
                '$'
            ]
        ], new Promise(__assignType((resolve, reject)=>{
            if (LOCKS[this.id]) {
                let timeoutId;
                const ourTake = ()=>{
                    LOCKS[this.id].time = Date.now() / 1000;
                    clearTimeout(timeoutId);
                    this.holding = true;
                    resolve();
                    if (ttl) {
                        this.ttlTimeout = setTimeout(()=>{
                            this.unlock();
                        }, ttl * 1000);
                    }
                };
                if (timeout > 0) {
                    timeoutId = setTimeout(()=>{
                        if (LOCKS[this.id]) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(LOCKS[this.id].queue, ourTake);
                        //reject is never handled when resolve is called first
                        reject('Lock timed out ' + this.id);
                    }, timeout * 1000);
                }
                LOCKS[this.id].queue.push(ourTake);
            } else {
                LOCKS[this.id] = {
                    time: Date.now() / 1000,
                    queue: []
                };
                this.holding = true;
                resolve();
                if (ttl) {
                    this.ttlTimeout = setTimeout(()=>{
                        this.unlock();
                    }, ttl * 1000);
                }
            }
        }, [
            'resolve',
            'reject',
            '',
            'P"2!"2""/#'
        ]));
    }
    isLocked() {
        return this.holding;
    }
    tryLock(ttl = 0) {
        this.holding = false;
        if (!LOCKS[this.id]) {
            LOCKS[this.id] = {
                time: Date.now() / 1000,
                queue: []
            };
            this.holding = true;
            if (ttl) {
                this.ttlTimeout = setTimeout(()=>{
                    this.unlock();
                }, ttl * 1000);
            }
        }
        return this.holding;
    }
    unlock() {
        clearTimeout(this.ttlTimeout);
        if (!this.holding) {
            return;
        }
        this.holding = false;
        if (LOCKS[this.id].queue.length) {
            //there are other locks waiting.
            //so we pick the next, and call it
            const next = LOCKS[this.id].queue.shift();
            next();
        } else {
            //nobody is waiting, so we just delete that lock
            delete LOCKS[this.id];
        }
    }
}
ProcessLock.__type = [
    'ttlTimeout',
    'id',
    'constructor',
    'ttl',
    ()=>0,
    'timeout',
    ()=>0,
    'acquire',
    'isLocked',
    ()=>0,
    'tryLock',
    'unlock',
    'ProcessLock',
    '"3!<P&2":9"0#P\'2$>%\'2&>\'"0(P"0)P\'2$>*"0+P"0,5w-'
];
class ProcessLocker {
    /**
     *
     * @param id
     * @param ttl optional defines when the times automatically unlocks.
     * @param timeout if after `timeout` seconds the lock isn't acquired, it throws an error.
     */ async acquireLock(id, ttl = 0, timeout = 0) {
        const lock = new ProcessLock(id);
        await lock.acquire(ttl, timeout);
        return lock;
    }
    async tryLock(id, ttl = 0) {
        const lock = new ProcessLock(id);
        if (lock.tryLock(ttl)) {
            return lock;
        }
        return;
    }
    isLocked(id) {
        return !!LOCKS[id];
    }
}
ProcessLocker.__type = [
    'id',
    'ttl',
    ()=>0,
    'timeout',
    ()=>0,
    ()=>ProcessLock,
    'acquireLock',
    ()=>0,
    ()=>ProcessLock,
    'tryLock',
    'isLocked',
    'ProcessLocker',
    'P&2!\'2">#\'2$>%P7&`0\'P&2!\'2">(PP7)-J`0*P&2!)0+5w,'
];
class Mutex {
    unlock() {
        if (this.resolver) this.resolver();
        this.promise = undefined;
    }
    async lock() {
        while(this.promise){
            await this.promise;
        }
        this.promise = new Promise(__assignType((resolver)=>{
            this.resolver = resolver;
        }, [
            'resolver',
            '',
            'P"2!"/"'
        ]));
    }
}
Mutex.__type = [
    'promise',
    ()=>Function,
    'resolver',
    'unlock',
    'lock',
    'Mutex',
    '$`3!8<Pu"3#8<P$0$P$`0%5w&'
]; //# sourceMappingURL=process-locker.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/network.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "ParsedHost": (()=>ParsedHost),
    "parseHost": (()=>parseHost)
});
class ParsedHost {
    constructor(){
        this.host = '127.0.0.1';
        this.port = 0;
        this.unixSocket = '';
    }
    get isUnixSocket() {
        return this.unixSocket !== '';
    }
    get isHostname() {
        return this.unixSocket === '';
    }
    get hostWithIp() {
        return this.host + (this.port ? (this.host && ':') + this.port : '');
    }
    toString() {
        return this.isUnixSocket ? this.unixSocket : this.hostWithIp;
    }
    getWebSocketUrl(secure = false) {
        const protocol = secure ? 'wss' : 'ws';
        if (this.isUnixSocket) {
            return `${protocol}+unix://${this.unixSocket}`;
        }
        return `${protocol}://${this.hostWithIp}`;
    }
    getHttpUrl(secure = false) {
        if (this.isUnixSocket) {
            return `file://${this.unixSocket}`;
        }
        const protocol = secure ? 'https' : 'http';
        return `${protocol}://${this.hostWithIp}`;
    }
}
ParsedHost.__type = [
    'host',
    function() {
        return '127.0.0.1';
    },
    'port',
    function() {
        return 0;
    },
    'unixSocket',
    function() {
        return '';
    },
    'toString',
    'secure',
    ()=>false,
    'getWebSocketUrl',
    ()=>false,
    'getHttpUrl',
    'ParsedHost',
    '&3!>"\'3#>$&3%>&!!!P&0\'P)2(>)"0*P)2(>+"0,5w-'
];
function parseHost(hostWithIpOrUnixPath) {
    const parsedHost = new ParsedHost();
    if (hostWithIpOrUnixPath.includes('/') || hostWithIpOrUnixPath.includes('\\') || hostWithIpOrUnixPath.endsWith('.sock')) {
        parsedHost.unixSocket = hostWithIpOrUnixPath;
    } else {
        if (hostWithIpOrUnixPath.includes(':')) {
            const [host, port] = hostWithIpOrUnixPath.split(':');
            if (host) parsedHost.host = host;
            if (port) parsedHost.port = parseInt(port, 10);
        } else {
            if (hostWithIpOrUnixPath) parsedHost.host = hostWithIpOrUnixPath;
        }
    }
    return parsedHost;
}
parseHost.__type = [
    'hostWithIpOrUnixPath',
    ()=>ParsedHost,
    'parseHost',
    'P&2!P7"/#'
]; //# sourceMappingURL=network.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/indent.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "indent": (()=>indent)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const indent = __assignType(function(n) {
    function t(n, t) {
        var e, r = [];
        for(e = 0; e < n.length; e++)r.push(t(n[e], e, n));
        return r;
    }
    t.__type = [
        'n',
        't',
        'P"2!"2""/"'
    ];
    function e(n, t) {
        var e, r;
        for(e = 0; e < n.length; e++)if (r = t(n[e], e, n)) return r;
        return !1;
    }
    e.__type = [
        'n',
        't',
        'e',
        'P"2!"2""/#'
    ];
    function r(n, t, e) {
        if (d[n]) return d[n];
        var r = [];
        d[n] = r, e = e || "";
        for(var a = 0; a < t.length; a++)t[a].a.indexOf(n.toLowerCase()) !== -1 && e.indexOf(t[a].b) === -1 && r.push(t[a]);
        return r;
    }
    r.__type = [
        'n',
        't',
        'e',
        'r',
        'P"2!"2""2#"/$'
    ];
    function a(n, a, o) {
        function h(n) {
            P = n.cursor;
            var t = n.rule, e = E + 1 + (t.c || 0);
            n.line = e, Z.push(n), t.d && z[e]++, t.e && (S = r(t.e, g)), t.f && F.push(null), t.callback && t.callback(n, z, O);
        }
        h.__type = [
            'n',
            'h',
            'P"2!"/"'
        ];
        function d() {
            var n = Z.pop(), t = n.line, e = n.rule;
            if (e.d) {
                var r = "function" == typeof e.g ? e.g(b) : e.g, a = r || 0 !== b.matchIndex ? 1 : 0;
                O[E + a] && O[E + a].push(t);
            }
            e.e && (S = null), e.f && F.pop(), F[F.length - 1] = n;
        }
        d.__type = [
            'd',
            'P"/!'
        ];
        function m(n, r, a) {
            n = n.substring(a, n.length);
            for(var l, s, i, c = null, u = n.length, o = F[F.length - 1], h = o ? o.rule.b : "", d = t(Z, __assignType(function(n) {
                return n.rule.b;
            }, [
                'n',
                '',
                'P"2!"/"'
            ])).join("\n"), m = 0; m < r.length; m++)i = r[m], i.h && e(i.h, __assignType(function(n) {
                return d.indexOf(n) != -1;
            }, [
                'n',
                '',
                'P"2!"/"'
            ])) || (!i.i || h && i.i.indexOf(h) !== -1) && (s = f(n, i.j, i), s.matchIndex != -1 && s.matchIndex < u && (!i.k || 0 === a) && (u = s.matchIndex, l = s, c = i));
            return {
                rule: c,
                relativeIndex: c ? u : -1,
                matchIndex: c ? u + a : -1,
                cursor: c ? a + l.cursor : -1,
                state: l ? l.state : {},
                lastMatch: o
            };
        }
        m.__type = [
            'n',
            'r',
            'a',
            'm',
            'P"2!"2""2#"/$'
        ];
        function j(n, t, e, r) {
            n = n.substr(e, n.length);
            var a = t.rule, l = f(n, a.l, a, t.state, r), s = a.m ? l.cursor : l.matchIndex;
            return {
                endPatternIndex: l.endPatternIndex,
                matchIndex: l.matchIndex === -1 ? -1 : l.matchIndex + e,
                cursor: s === -1 ? -1 : s + e,
                state: l.state
            };
        }
        j.__type = [
            'n',
            't',
            'e',
            'r',
            'j',
            'P"2!"2""2#"2$"/%'
        ];
        n = n || "";
        var b, x, v, p, I, y = o && null != o.tabString ? o.tabString : "\t", k = n.split(/[\r]?\n/gi), w = k.length, A = s(w), z = s(w), O = l(w), Z = [], F = [
            null
        ], E = 0, P = 0, S = null;
        for(o && (o.debug = {
            buffers: {
                ignore: A,
                indent: z,
                dedent: O,
                active: Z
            }
        }); E < w;){
            if (v = k[E].trim(), p = u(v) + "\r\n", I = Z[Z.length - 1], x = m(p, S || a, P), Z.length) {
                if (b = j(p, I, P, x), b.matchIndex === -1) {
                    if (I.rule.n) {
                        A[E] = 1, E++, P = 0;
                        continue;
                    }
                } else if (I.rule.n || x.matchIndex === -1 || b.matchIndex <= x.matchIndex) {
                    d(), P = b.cursor;
                    continue;
                }
            }
            x.matchIndex !== -1 ? h(x) : (E++, P = 0);
        }
        var $, q, R, T, M, C, H = 0, L = i(z), _ = s(w), B = [];
        for(M = 0; M < w; M++){
            for(q = O[M], T = 0, C = 0; C < q.length; C++)R = q[C], R < 0 ? -R !== M && (_[-R]++, T += 1) : L[R] > 0 && (L[R]--, T += R !== M);
            $ = L[M], _[M] = $ > T ? 1 : $ < T ? $ - T : 0, L[M] = $ > 0 ? 1 : 0;
        }
        for(M = 0; M < w; M++)1 === A[M - 1] && 1 === A[M] ? B.push(k[M]) : (H += _[M] || 0, B.push((H > 0 ? c(y, H) : "") + k[M].trim()));
        return B.join("\r\n");
    }
    a.__type = [
        'n',
        'a',
        'o',
        'P"2!"2""2#"/"'
    ];
    function l(n) {
        for(var t = new Array(n), e = 0; e < n; e++)t[e] = [];
        return t;
    }
    l.__type = [
        'n',
        'l',
        'P"2!"/"'
    ];
    function s(t) {
        if (n.Int16Array) return new Int16Array(t);
        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
        return e;
    }
    s.__type = [
        't',
        's',
        'P"2!"/"'
    ];
    function i(n) {
        for(var t = s(n.length), e = 0; e < n.length; e++)t[e] = n[e];
        return t;
    }
    i.__type = [
        'n',
        'i',
        'P"2!"/"'
    ];
    function c(n, t) {
        return new Array(t + 1).join(n);
    }
    c.__type = [
        'n',
        't',
        'c',
        'P"2!"2""/#'
    ];
    function u(n) {
        return n.replace(/\\(u[0-9A-Za-z]{4}|u\{[0-9A-Za-z]{1,6}]\}|x[0-9A-Za-z]{2}|.)/g, "0");
    }
    u.__type = [
        'n',
        'u',
        'P"2!"/"'
    ];
    function o(n, t, e) {
        var r = n.lastMatch;
        r && "=" === r.rule.b && e[n.line].push(-r.line);
    }
    o.__type = [
        'n',
        't',
        'e',
        'o',
        'P"2!"2""2#"/$'
    ];
    function h(n, t, e, r) {
        var a;
        if (e.newline) {
            if (a = n.search(/[;,=]?\r*\n/), a !== -1) return {
                matchIndex: a,
                length: 1
            };
        } else a = n.search(/[^\s\r\n\{\(\[]/), e.newline = a !== -1 && (a <= r.relativeIndex || r.relativeIndex === -1);
        return null;
    }
    h.__type = [
        'n',
        't',
        'e',
        'r',
        'h',
        'P"2!"2""2#"2$"/%'
    ];
    function f(n, t, e, r, a) {
        r = r || {};
        for(var l, s, i = -1, c = 0, u = 0; u < t.length; u++)if (s = t[u], "function" == typeof s) {
            if (l = s(n, e, r, a)) {
                i = l.matchIndex, c = l.length;
                break;
            }
        } else if (l = n.match(s)) {
            i = n.search(s), c = l[0].length;
            break;
        }
        return {
            endPatternIndex: u,
            matchIndex: i,
            cursor: i + c,
            state: r
        };
    }
    f.__type = [
        'n',
        't',
        'e',
        'r',
        'a',
        'f',
        'P"2!"2""2#"2$"2%"/&'
    ];
    var d = {};
    String.prototype.trim || (String.prototype.trim = function() {
        return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    });
    var m = /\r*\n/, j = [
        "tag",
        "void-tags",
        "html-tag"
    ], g = [
        {
            a: "js html",
            b: "comment",
            j: [
                /\<\!\-\-/
            ],
            l: [
                /\-\-\>/
            ],
            n: !0,
            m: !0
        },
        {
            a: "html",
            b: "doctype",
            j: [
                /\<\!doctype html>/i
            ],
            l: [
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "void-tags",
            j: [
                /\<(area|base|br|col|command|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)/i
            ],
            l: [
                />/
            ],
            d: !0,
            m: !0
        },
        {
            a: "html",
            b: "mode switch js",
            j: [
                __assignType(function(n) {
                    var t = /<script[\s>].*/i, e = /<\/script>/i, r = t.exec(n), a = e.exec(n);
                    return r && (!a || a.index < r.index) ? {
                        matchIndex: r.index,
                        length: r[0].length
                    } : null;
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            l: [
                /<\/script>/i
            ],
            e: "js",
            m: !0,
            d: !0,
            f: !0
        },
        {
            a: "html",
            b: "mode switch css",
            j: [
                __assignType(function(n) {
                    var t = /<style[\s>].*/i, e = /<\/style>/i, r = t.exec(n), a = e.exec(n);
                    return r && (!a || a.index < r.index) ? {
                        matchIndex: r.index,
                        length: r[0].length
                    } : null;
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            l: [
                /<\/style>/i
            ],
            e: "css",
            m: !0,
            d: !0,
            f: !0
        },
        {
            a: "html",
            b: "html-tag",
            j: [
                /<html[^A-Za-z0-9]/i
            ],
            l: [
                /<\/html>/i
            ],
            m: !0
        },
        {
            a: "js html",
            b: "tag",
            j: [
                __assignType(function(n, t, e) {
                    var r = /<([A-Za-z][A-Za-z0-9\-\.]*)/, a = n.match(r);
                    return a ? (e.openingTag = a[1], {
                        matchIndex: a.index,
                        length: a[0].length
                    }) : null;
                }, [
                    'n',
                    't',
                    'e',
                    '',
                    'P"2!"2""2#"/$'
                ])
            ],
            l: [
                __assignType(function(n, t, e) {
                    var r = new RegExp("</" + e.openingTag + ">|\\s/>", "i"), a = n.match(r);
                    return a ? {
                        matchIndex: a.index,
                        length: a[0].length
                    } : null;
                }, [
                    'n',
                    't',
                    'e',
                    '',
                    'P"2!"2""2#"/$'
                ])
            ],
            d: !0,
            m: !0
        },
        {
            a: "js",
            b: "line-comment",
            j: [
                /\/\//
            ],
            l: [
                m
            ],
            n: !0
        },
        {
            a: "js css",
            b: "block-comment",
            j: [
                /\/\*/
            ],
            l: [
                /\*\//
            ],
            n: !0,
            m: !0
        },
        {
            a: "js",
            b: "regex",
            j: [
                __assignType(function(n, t) {
                    var e = /[(,=:[!&|?{};][\s]*\/[^\/]|^[\s]*\/[^\/]/, r = n.search(e);
                    if (r != -1) {
                        r = n.indexOf("/", r);
                        var a = n.substring(r + 1), l = f(a, t.l, t);
                        if (l.matchIndex != -1) {
                            a = a.substring(0, l.matchIndex);
                            try {
                                return new RegExp(a), {
                                    matchIndex: r,
                                    length: 1
                                };
                            } catch (s) {
                                return null;
                            }
                        }
                    }
                    return null;
                }, [
                    'n',
                    't',
                    '',
                    'P"2!"2""/#'
                ])
            ],
            l: [
                __assignType(function(n) {
                    for(var t = 0, e = n.indexOf("/"); e != -1;)try {
                        new RegExp(n.substring(0, e));
                        break;
                    } catch (r) {
                        e = n.indexOf("/", t), t = e + 1;
                    }
                    return e === -1 ? null : {
                        matchIndex: e,
                        length: 1
                    };
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "quotes",
            h: j,
            j: [
                /"/
            ],
            l: [
                /"/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "quotes",
            h: j,
            j: [
                /'/
            ],
            l: [
                /'/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /(''|""|``)/
            ],
            l: [
                /./,
                m
            ]
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\"(?=[^"])/
            ],
            l: [
                /[^\\]\"/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\'(?=[^'])/
            ],
            l: [
                /[^\\]\'/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\`(?=[^`])/
            ],
            l: [
                /[^\\]\`/
            ],
            n: !0,
            m: !0
        },
        {
            a: "js",
            b: "if",
            j: [
                /^if\s*(?=\()/,
                /[\s]+if\s*(?=\()/
            ],
            l: [
                /else[\s]+/,
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js",
            b: "for|while",
            j: [
                /^(for|while)\s*(?=\()/
            ],
            l: [
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js",
            b: "else",
            j: [
                /else[\s]+/
            ],
            l: [
                /if[^\w$]/,
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js css",
            b: "bracket",
            j: [
                /\(\s*(var|let|const)?\s*/
            ],
            l: [
                /\)/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js",
            b: "dot-chain",
            j: [
                /^\.[A-Za-z$_]/
            ],
            l: [
                /[\.;]/,
                m
            ],
            d: !0,
            k: !0,
            c: -1
        },
        {
            a: "js",
            b: "dot-chain",
            j: [
                /\.\s*\r*\n/
            ],
            l: [
                /[\.;})\]]/,
                /[^\s]\s*\r*\n/
            ],
            d: !0
        },
        {
            a: "js css",
            b: "array",
            j: [
                /\[/
            ],
            l: [
                /\]/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js css",
            b: "block",
            j: [
                /\{/
            ],
            l: [
                /\}/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js",
            b: "var/let/const",
            j: [
                /(var|let|const)[\s]*\r*\n/
            ],
            l: [
                h
            ],
            d: !0,
            g: !0
        },
        {
            a: "js",
            b: "var/let/const",
            j: [
                /(var|let|const)\s+(?=[\w$])/
            ],
            l: [
                /[,;=]/,
                h
            ],
            d: !0
        },
        {
            a: "js",
            b: "var/let/const",
            i: [
                "var/let/const",
                "="
            ],
            j: [
                /,[\s]*\r*\n/
            ],
            l: [
                /[,;]/,
                h
            ],
            d: !0,
            callback: o
        },
        {
            a: "js",
            b: "var/let/const",
            i: [
                "var/let/const",
                "="
            ],
            j: [
                /^,/
            ],
            l: [
                /[,;]/,
                h
            ],
            k: !0,
            d: !0,
            c: -1,
            callback: o
        },
        {
            a: "js",
            b: "equality",
            j: [
                /[=<>!]=(=)?/
            ],
            l: [
                /./
            ]
        },
        {
            a: "js",
            b: "=",
            h: j,
            j: [
                /=/
            ],
            l: [
                /[,;\)\]}]/,
                m
            ]
        },
        {
            a: "js",
            b: "?:",
            j: [
                /\?/
            ],
            l: [
                /[:;]/
            ],
            g: !0,
            d: !0
        },
        {
            a: "js",
            b: "case",
            j: [
                /^(case|default)[\s:]/
            ],
            l: [
                /break[\s;\r\n]/,
                /^return[\s;\r\n]/,
                /^case[\s]+/,
                /^default[\s:]/,
                /}/
            ],
            g: __assignType(function(n) {
                return n.endPatternIndex <= 1;
            }, [
                'n',
                '',
                'P"2!"/"'
            ]),
            d: !0,
            f: !0
        },
        {
            a: "js",
            b: "semicolon",
            j: [
                /;/
            ],
            l: [
                /./
            ]
        }
    ];
    return {
        css: __assignType(function(n, t) {
            return a(n, r("css", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        js: __assignType(function(n, t) {
            return a(n, r("js", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        ts: __assignType(function(n, t) {
            return a(n, r("js", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        html: __assignType(function(n, t) {
            var e = t && t.indentHtmlTag ? r("html", g, "html-tag") : r("html", g);
            return a(n, e, t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ])
    };
}, [
    'n',
    '',
    'P"2!"/"'
])(this); //# sourceMappingURL=indent.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "CompilerContext": (()=>CompilerContext)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ // @ts-ignore
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$indent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/indent.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
;
const indentCode = ('undefined' !== typeof process && process.env?.DEBUG || '').includes('deepkit');
class CompilerContext {
    constructor(config = {}){
        this.context = (Map.Ω = [
            [
                '&'
            ],
            [
                '"'
            ]
        ], new Map());
        this.constVariables = (Map.Ω = [
            [
                '"'
            ],
            [
                '&'
            ]
        ], new Map());
        this.maxReservedVariable = 10_000;
        this.reservedNames = (Set.Ω = [
            [
                '&'
            ]
        ], new Set());
        this.variableContext = {};
        /**
         * Code that is executed in the context, but before the actual function is generated.
         * This helps for example to initialize dynamically some context variables.
         */ this.preCode = '';
        this.initialiseVariables = [];
        this.config = {
            indent: false
        };
        Object.assign(this.config, config);
        this.context.set('_context', this.variableContext);
    }
    reserveName(name) {
        for(let i = 0; i < this.maxReservedVariable; i++){
            const candidate = name + '_' + i;
            if (!this.reservedNames.has(candidate)) {
                this.reservedNames.add(candidate);
                return candidate;
            }
        }
        throw new Error(`Too many context variables (max ${this.maxReservedVariable})`);
    }
    set(values) {
        for(const i in values){
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["hasProperty"])(values, i)) {
                continue;
            }
            this.context.set(i, values[i]);
        }
    }
    /**
     * Returns always the same variable name for the same value.
     * The variable name should not be set afterwards.
     */ reserveConst(value, name = 'constVar') {
        if (value === undefined) throw new Error('Can not reserve const for undefined value');
        let constName = this.constVariables.get(value);
        if (!constName) {
            constName = this.reserveName(name);
            this.constVariables.set(value, constName);
            this.context.set(constName, value);
        }
        return constName;
    }
    reserveVariable(name = 'var', value) {
        const freeName = this.reserveName(name);
        if (value === undefined) {
            //to get monomorphic variables, we return a reference to an unassigned object property (which has no type per se)
            return '_context.' + freeName;
        } else {
            //in case when the variable has a value, we simply store it, since it (hopefully) is monomorphic.
            this.context.set(freeName, value);
            return freeName;
        }
    }
    raw(functionCode) {
        try {
            return new Function(...this.context.keys(), `'use strict';\n` + functionCode)(...this.context.values());
        } catch (error) {
            throw new Error('Could not build function: ' + error + functionCode);
        }
    }
    format(code) {
        if (indentCode || this.config.indent) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$indent$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["indent"].js(code, {
            tabString: '    '
        });
        return code;
    }
    build(functionCode, ...args) {
        functionCode = this.format(`
            'use strict';
            ${this.preCode}
            return function self(${args.join(', ')}){
                'use strict';
                ${functionCode}
            };
        `);
        try {
            return new Function(...this.context.keys(), functionCode)(...this.context.values());
        } catch (error) {
            throw new Error(`Could not build function(${[
                ...this.context.keys()
            ].join(',')}): ` + error + functionCode);
        }
    }
    buildAsync(functionCode, ...args) {
        functionCode = `
            'use strict';
            ${this.preCode}
            return async function self(${args.join(', ')}){
                'use strict';
                ${functionCode}
            };
        `;
        try {
            return new Function(...this.context.keys(), this.format(functionCode))(...this.context.values());
        } catch (error) {
            throw new Error('Could not build function: ' + error + functionCode);
        }
    }
}
CompilerContext.__type = [
    'maxReservedVariable',
    function() {
        return 10_000;
    },
    'variableContext',
    function() {
        return {};
    },
    'preCode',
    function() {
        return '';
    },
    'initialiseVariables',
    function() {
        return [];
    },
    'indent',
    'config',
    function() {
        return {
            indent: false
        };
    },
    ()=>__ΩPartial,
    ()=>CompilerContext,
    "config",
    ()=>({}),
    'constructor',
    'name',
    'reserveName',
    'values',
    'set',
    'value',
    ()=>"constVar",
    'reserveConst',
    ()=>"var",
    'reserveVariable',
    'functionCode',
    ()=>Function,
    'raw',
    'code',
    'format',
    'args',
    'build',
    ()=>Function,
    'buildAsync',
    'CompilerContext',
    '\'3!>"P&"LM3#<>$&3%>&&F3\'>(P)4)M3*>+PP7-..fo,"2*>/"00P&21&02PP&"LM23"04P"25&21>6&07P&21>8"258&09P&2:Pu;0<P&2=&0><P&2:&@2?"0@P&2:&@2?PuA0B5wC'
]; //# sourceMappingURL=compiler.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "capitalize": (()=>capitalize),
    "indent": (()=>indent)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function indent(indentation, prefix = '') {
    return __assignType((str = '')=>{
        return ' '.repeat(indentation) + str.replace(/\n/g, '\n' + ' '.repeat(indentation) + prefix);
    }, [
        'str',
        ()=>"",
        '',
        'P&2!>""/#'
    ]);
}
indent.__type = [
    'indentation',
    'prefix',
    ()=>"",
    'indent',
    'P\'2!&2">#"/$'
];
function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
capitalize.__type = [
    'string',
    'capitalize',
    'P&2!&/"'
]; //# sourceMappingURL=string.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/emitter.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "AsyncEventEmitter": (()=>AsyncEventEmitter),
    "EmitterEvent": (()=>EmitterEvent),
    "EventEmitter": (()=>EventEmitter),
    "__ΩAsyncEventSubscription": (()=>__ΩAsyncEventSubscription),
    "__ΩEventSubscription": (()=>__ΩEventSubscription)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-ssr] (ecmascript)");
;
const __ΩAsyncSubscriber = [
    'T',
    'event',
    '',
    'AsyncSubscriber',
    'b!Pe"!2"P$`$J/#w$y'
];
const __ΩSubscriber = [
    'T',
    'event',
    '',
    'Subscriber',
    'b!Pe"!2"P$`$J/#w$y'
];
const __ΩAsyncEventSubscription = [
    '',
    'unsubscribe',
    'AsyncEventSubscription',
    'PP$/!4"Mw#y'
];
;
const __ΩEventSubscription = [
    '',
    'unsubscribe',
    'EventSubscription',
    'PP$/!4"Mw#y'
];
;
let asyncId = 0;
class EmitterEvent {
    constructor(){
        this.id = asyncId++;
        this.stopped = false;
        this.propagationStopped = false;
    }
    /**
     * Stop propagating the event to subsequent event listeners.
     */ stopPropagation() {
        this.propagationStopped = true;
    }
    /**
     * Signal the emitter that you want to abort.
     * Subsequent event listeners will still be called.
     */ stop() {
        this.stopped = true;
    }
}
EmitterEvent.__type = [
    'stopPropagation',
    'stop',
    'EmitterEvent',
    'P"0!P"0"5w#'
];
class EventEmitter {
    constructor(parent){
        this.parent = parent;
        this.subscribers = [];
    }
    subscribe(callback) {
        this.subscribers.push(callback);
        return {
            unsubscribe: ()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.subscribers, callback);
            }
        };
    }
    emit(event) {
        if (this.parent) this.parent.emit(event);
        if (event.propagationStopped) return;
        for (const subscriber of this.subscribers){
            subscriber(event);
            if (event.propagationStopped) return;
        }
    }
    hasSubscriptions() {
        return this.subscribers.length > 0;
    }
}
EventEmitter.__type = [
    'T',
    ()=>__ΩSubscriber,
    'subscribers',
    function() {
        return [];
    },
    ()=>EventEmitter,
    'parent',
    'constructor',
    ()=>__ΩSubscriber,
    'callback',
    ()=>__ΩEventSubscription,
    'subscribe',
    'event',
    'emit',
    'hasSubscriptions',
    'EventEmitter',
    'b!e!!o""F3#<>$PP"7%2&8<"0\'Pe"!o("2)n*0+Pe"!2,$0-P)0.5w/'
];
class AsyncEventEmitter {
    constructor(parent){
        this.parent = parent;
        this.subscribers = [];
    }
    subscribe(callback) {
        this.subscribers.push(callback);
        return {
            unsubscribe: ()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.subscribers, callback);
            }
        };
    }
    async emit(event) {
        if (this.parent) await this.parent.emit(event);
        if (event.propagationStopped) return;
        for (const subscriber of this.subscribers){
            await subscriber(event);
            if (event.propagationStopped) return;
        }
    }
    hasSubscriptions() {
        return this.subscribers.length > 0;
    }
}
AsyncEventEmitter.__type = [
    'T',
    ()=>__ΩAsyncSubscriber,
    'subscribers',
    function() {
        return [];
    },
    ()=>AsyncEventEmitter,
    'parent',
    'constructor',
    ()=>__ΩAsyncSubscriber,
    'callback',
    ()=>__ΩAsyncEventSubscription,
    'subscribe',
    'event',
    'emit',
    'hasSubscriptions',
    'AsyncEventEmitter',
    'b!e!!o""F3#<>$PP"7%2&8<"0\'Pe"!o("2)n*0+Pe"!2,$`0-P)0.5w/'
]; //# sourceMappingURL=emitter.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/reactive.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "bufferedGate": (()=>bufferedGate),
    "clearTick": (()=>clearTick),
    "nextTick": (()=>nextTick),
    "throttleTime": (()=>throttleTime)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const nextTick = typeof requestAnimationFrame !== 'undefined' ? __assignType((cb)=>requestAnimationFrame(cb), [
    '',
    'cb',
    'PP$/!2""/!'
]) : __assignType((cb)=>setTimeout(cb), [
    '',
    'cb',
    'PP$/!2""/!'
]);
const clearTick = typeof requestAnimationFrame !== 'undefined' ? __assignType((id)=>cancelAnimationFrame(id), [
    'id',
    '',
    'P"2!"/"'
]) : __assignType((id)=>clearTick(id), [
    'id',
    '',
    'P"2!"/"'
]);
function throttleTime(call, cps = 5) {
    let last = Date.now();
    let dirty = false;
    let lastArgs = [];
    let execution = false;
    function tick() {
        const now = Date.now();
        if (!execution && now - last > 1000 / cps) {
            execution = true;
            call(...lastArgs);
            dirty = false;
            last = Date.now();
            execution = false;
        }
        if (dirty) {
            nextTick(tick);
        }
    }
    tick.__type = [
        'tick',
        'P"/!'
    ];
    return __assignType((...args)=>{
        dirty = true;
        lastArgs = args;
        tick();
    }, [
        'args',
        '',
        'P"@2!"/"'
    ]);
}
throttleTime.__type = [
    ()=>Function,
    'call',
    'cps',
    'args',
    '',
    'throttleTime',
    'PPu!2""2#P"@2$$/%/&'
];
function bufferedGate(callback) {
    const q = [];
    let activated = false;
    const throttled = throttleTime(async ()=>{
        if (q.length === 0) return;
        for (const t of q){
            const result = callback(t);
            if (result instanceof Promise) {
                await result;
            }
        }
        //empty the queue
        q.splice(0, q.length);
    });
    return {
        activate: ()=>{
            activated = true;
            throttled();
        },
        call: __assignType((i)=>{
            q.push(i);
            if (activated) {
                throttled();
            }
        }, [
            ()=>callback,
            'arg',
            '',
            'i',
            'PPdi!Ph"!2""/#qe!!!j2$"/#'
        ])
    };
}
bufferedGate.__type = [
    'arg',
    '',
    'callback',
    'bufferedGate',
    'PP"2!"/"2#"/$'
]; //# sourceMappingURL=reactive.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/reflection.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "extractMethodBody": (()=>extractMethodBody),
    "extractParameters": (()=>extractParameters),
    "removeStrings": (()=>removeStrings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
;
const COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
const DEFAULT_PARAMS = /=[^,]+/mg;
const FAT_ARROWS = /=>.*$/mg;
function extractParameters(fn) {
    fn = typeof fn === 'string' ? fn : fn.toString();
    fn = removeStrings(fn);
    if (fn.startsWith('class')) {
        const start = fn.match(new RegExp('[\t\ \n{]constructor\\('));
        if (!start) return [];
        fn = fn.substr((start.index || 0) + start[0].length);
        fn = fn.replace(COMMENTS, '').replace(FAT_ARROWS, '').replace(DEFAULT_PARAMS, '');
        return fn.slice(0, fn.indexOf('{')).match(/([^\(\){\s,]+)/g) || [];
    } else {
        fn = fn.replace(COMMENTS, '').replace(FAT_ARROWS, '').replace(DEFAULT_PARAMS, '');
        return fn.slice(fn.indexOf('(') + 1, fn.indexOf('{')).match(/([^\(\)\{\}\s,]+)/g) || [];
    }
}
extractParameters.__type = [
    ()=>Function,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'fn',
    'extractParameters',
    'PP&Pu!n"J2#&F/$'
];
function extractMethodBody(classCode, name) {
    let methodCode = '';
    classCode = removeStrings(classCode);
    const start = classCode.match(new RegExp('[\t\ \n]' + name + '\\('));
    if (!start) return '';
    classCode = classCode.substr((start.index || 0) + start[0].length);
    let blockDepth = 1;
    classCode = classCode.substr(classCode.indexOf('{') + 1);
    for(let i = 0; i < classCode.length; i++){
        const char = classCode[i];
        if (char === '{') blockDepth++;
        if (char === '}') blockDepth--;
        if (blockDepth === 0) {
            return methodCode;
        }
        if (char === '\n' || char === '\t' || char === ' ') continue;
        methodCode += char;
    }
    return methodCode;
}
extractMethodBody.__type = [
    'classCode',
    'name',
    'extractMethodBody',
    'P&2!&2"&/#'
];
function removeStrings(code) {
    let result = '';
    let inString = false;
    for(let i = 0; i < code.length; i++){
        const char = code[i];
        if (inString && char === '\\') {
            i++;
            continue;
        }
        if (char === '"') {
            if (inString === '"') {
                //end string
                inString = false;
                continue;
            }
            if (!inString) {
                inString = '"';
                continue;
            }
        }
        if (char === '\'') {
            if (inString === '\'') {
                //end string
                inString = false;
                continue;
            }
            if (!inString) {
                inString = '\'';
                continue;
            }
        }
        if (!inString) {
            result += char;
        }
    }
    return result;
}
removeStrings.__type = [
    'code',
    'removeStrings',
    'P&2!"/"'
]; //# sourceMappingURL=reflection.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/url.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "urlJoin": (()=>urlJoin)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function removeSlash(v) {
    return v.replace(/(^\/+)|(\/+$)/g, '');
}
removeSlash.__type = [
    'v',
    'removeSlash',
    'P&2!&/"'
];
function urlJoin(...path) {
    const leadingSlash = path[0] && path[0] !== '/' && path[0][0] === '/';
    const last = path[path.length - 1];
    const trailingSlash = last && last !== '/' && last[last.length - 1] === '/';
    return (leadingSlash ? '/' : '') + path.filter(__assignType((v)=>!!v, [
        'v',
        '',
        'P"2!"/"'
    ])).map(__assignType((v)=>v === '/' ? '' : removeSlash(v.trim()), [
        'v',
        '',
        'P"2!"/"'
    ])).join('/') + (trailingSlash ? '/' : '');
}
urlJoin.__type = [
    'path',
    'urlJoin',
    'P&@2!&/"'
]; //# sourceMappingURL=url.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/types.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "__ΩInject": (()=>__ΩInject),
    "__ΩInjectMeta": (()=>__ΩInjectMeta)
});
const __ΩInjectMeta = [
    'T',
    "inject",
    '__meta',
    'InjectMeta',
    '!c!PP!P."e$!GK4#8Mw$y'
];
;
const __ΩInject = [
    'Type',
    'Token',
    ()=>__ΩInjectMeta,
    'Inject',
    'b!!c"Pe"!e""o#"Kw$y'
];
;
 //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/buffer.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "base64ToUint8Array": (()=>base64ToUint8Array),
    "bufferConcat": (()=>bufferConcat),
    "bufferToString": (()=>bufferToString),
    "createBuffer": (()=>createBuffer),
    "nativeBase64ToUint8Array": (()=>nativeBase64ToUint8Array),
    "uint8ArrayToUtf8": (()=>uint8ArrayToUtf8)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const createBuffer = 'undefined' !== typeof Buffer && 'function' === typeof Buffer.allocUnsafe ? Buffer.allocUnsafe : __assignType((size)=>new Uint8Array(size), [
    'size',
    '',
    'P"2!"/"'
]);
function bufferConcat(chunks, length) {
    if (undefined === length) {
        length = 0;
        for (const chunk of chunks)length += chunk.length;
    }
    const result = createBuffer(length);
    let offset = 0;
    for (const chunk of chunks){
        result.set(chunk, offset);
        offset += chunk.length;
    }
    return result;
}
bufferConcat.__type = [
    'chunks',
    'length',
    'bufferConcat',
    'PWF2!\'2"8W/#'
];
const textEncoder = new TextDecoder();
const uint8ArrayToUtf8 = 'undefined' !== typeof Buffer ? __assignType((buffer)=>Buffer.from(buffer).toString('utf8'), [
    'buffer',
    '',
    'PW2!"/"'
]) : __assignType((buffer)=>textEncoder.decode(buffer), [
    'buffer',
    '',
    'PW2!"/"'
]);
function bufferToString(buffer) {
    if ('string' === typeof buffer) return buffer;
    return uint8ArrayToUtf8(buffer);
}
bufferToString.__type = [
    'buffer',
    'bufferToString',
    'PP&WJ2!&/"'
];
function nativeBase64ToUint8Array(base64) {
    const raw = atob(base64);
    const rawLength = raw.length;
    const array = createBuffer(rawLength);
    for(let i = 0; i < rawLength; i++){
        array[i] = raw.charCodeAt(i);
    }
    return array;
}
nativeBase64ToUint8Array.__type = [
    'base64',
    'nativeBase64ToUint8Array',
    'P&2!W/"'
];
const base64ToUint8Array = 'undefined' === typeof Buffer ? nativeBase64ToUint8Array : __assignType((base64)=>Buffer.from(base64, 'base64'), [
    'base64',
    '',
    'P&2!"/"'
]); //# sourceMappingURL=buffer.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/path.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "pathBasename": (()=>pathBasename),
    "pathDirectory": (()=>pathDirectory),
    "pathExtension": (()=>pathExtension),
    "pathJoin": (()=>pathJoin),
    "pathNormalize": (()=>pathNormalize)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function pathNormalize(path) {
    path = path[0] !== '/' ? '/' + path : path;
    path = path.length > 1 && path[path.length - 1] === '/' ? path.slice(0, -1) : path;
    return path.replace(/\/+/g, '/');
}
pathNormalize.__type = [
    'path',
    'pathNormalize',
    'P&2!&/"'
];
function pathDirectory(path) {
    if (path === '/') return '/';
    const lastSlash = path.lastIndexOf('/');
    return lastSlash <= 0 ? '/' : path.slice(0, lastSlash);
}
pathDirectory.__type = [
    'path',
    'pathDirectory',
    'P&2!&/"'
];
function pathBasename(path) {
    const lastSlash = path.lastIndexOf('/');
    return lastSlash === -1 ? path : path.slice(lastSlash + 1);
}
pathBasename.__type = [
    'path',
    'pathBasename',
    'P&2!&/"'
];
function pathExtension(path) {
    const basename = pathBasename(path);
    const lastDot = basename.lastIndexOf('.');
    return lastDot === -1 ? '' : basename.slice(lastDot + 1);
}
pathExtension.__type = [
    'path',
    'pathExtension',
    'P&2!&/"'
];
function pathJoin(...paths) {
    return '/' + paths.map(__assignType((v)=>pathNormalize(v).slice(1), [
        'v',
        '',
        'P"2!"/"'
    ])).filter(__assignType((v)=>!!v, [
        'v',
        '',
        'P"2!"/"'
    ])).join('/');
}
pathJoin.__type = [
    'paths',
    'pathJoin',
    'P&@2!&/"'
]; //# sourceMappingURL=path.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({});
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$decorators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/decorators.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$enum$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/enum.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$timer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/timer.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$process$2d$locker$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/process-locker.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$network$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/network.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$emitter$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/emitter.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$reactive$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/reactive.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$url$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/url.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$buffer$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/buffer.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$path$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/path.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/to-fast-properties/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
let fastProto = null;
// Creates an object with permanently fast properties in V8. See Toon Verwaest's
// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62
// for more details. Use %HasFastProperties(object) and the Node.js flag
// --allow-natives-syntax to check whether an object has fast properties.
function FastObject(o) {
    // A prototype object will have "fast properties" enabled once it is checked
    // against the inline property cache of a function, e.g. fastProto.property:
    // https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63
    if (fastProto !== null && typeof fastProto.property) {
        const result = fastProto;
        fastProto = FastObject.prototype = null;
        return result;
    }
    fastProto = FastObject.prototype = o == null ? Object.create(null) : o;
    return new FastObject;
}
const inlineCacheCutoff = 10;
// Initialize the inline property cache of FastObject.
for(let i = 0; i <= inlineCacheCutoff; i++){
    FastObject();
}
module.exports = function toFastproperties(o) {
    return FastObject(o);
};
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/src/type.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (c) Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ /**
 * note: Checks are based on range checks (>, <, etc), so when adding
 * new types a check is required for all code using `TypeNumberBrand`.
 */ __turbopack_esm__({
    "ReflectionOp": (()=>ReflectionOp),
    "TypeNumberBrand": (()=>TypeNumberBrand)
});
var TypeNumberBrand;
(function(TypeNumberBrand) {
    TypeNumberBrand[TypeNumberBrand["integer"] = 0] = "integer";
    TypeNumberBrand[TypeNumberBrand["int8"] = 1] = "int8";
    TypeNumberBrand[TypeNumberBrand["int16"] = 2] = "int16";
    TypeNumberBrand[TypeNumberBrand["int32"] = 3] = "int32";
    TypeNumberBrand[TypeNumberBrand["uint8"] = 4] = "uint8";
    TypeNumberBrand[TypeNumberBrand["uint16"] = 5] = "uint16";
    TypeNumberBrand[TypeNumberBrand["uint32"] = 6] = "uint32";
    TypeNumberBrand[TypeNumberBrand["float"] = 7] = "float";
    TypeNumberBrand[TypeNumberBrand["float32"] = 8] = "float32";
    TypeNumberBrand[TypeNumberBrand["float64"] = 9] = "float64";
})(TypeNumberBrand || (TypeNumberBrand = {}));
var ReflectionOp;
(function(ReflectionOp) {
    ReflectionOp[ReflectionOp["never"] = 0] = "never";
    ReflectionOp[ReflectionOp["any"] = 1] = "any";
    ReflectionOp[ReflectionOp["unknown"] = 2] = "unknown";
    ReflectionOp[ReflectionOp["void"] = 3] = "void";
    ReflectionOp[ReflectionOp["object"] = 4] = "object";
    ReflectionOp[ReflectionOp["string"] = 5] = "string";
    ReflectionOp[ReflectionOp["number"] = 6] = "number";
    ReflectionOp[ReflectionOp["numberBrand"] = 7] = "numberBrand";
    ReflectionOp[ReflectionOp["boolean"] = 8] = "boolean";
    ReflectionOp[ReflectionOp["bigint"] = 9] = "bigint";
    ReflectionOp[ReflectionOp["symbol"] = 10] = "symbol";
    ReflectionOp[ReflectionOp["null"] = 11] = "null";
    ReflectionOp[ReflectionOp["undefined"] = 12] = "undefined";
    /**
     * The literal type of string, number, or boolean.
     *
     * This OP has 1 parameter. The next byte is the absolute address of the literal on the stack, which is the actual literal value.
     *
     * Pushes a function type.
     */ ReflectionOp[ReflectionOp["literal"] = 13] = "literal";
    /**
     * This OP pops all types on the current stack frame.
     *
     * This OP has 1 parameter. The next byte is the absolute address of a string|number|symbol entry on the stack.
     *
     * Pushes a function type.
     */ ReflectionOp[ReflectionOp["function"] = 14] = "function";
    /**
     * This OP pops all types on the current stack frame.
     *
     * Pushes a method type.
     */ ReflectionOp[ReflectionOp["method"] = 15] = "method";
    ReflectionOp[ReflectionOp["methodSignature"] = 16] = "methodSignature";
    ReflectionOp[ReflectionOp["parameter"] = 17] = "parameter";
    /**
     * This OP pops the latest type entry on the stack.
     *
     * Pushes a property type.
     */ ReflectionOp[ReflectionOp["property"] = 18] = "property";
    ReflectionOp[ReflectionOp["propertySignature"] = 19] = "propertySignature";
    /**
     * This OP pops all types on the current stack frame. Those types should be method|property.
     *
     * Pushes a TypeClass onto the stack.
     */ ReflectionOp[ReflectionOp["class"] = 20] = "class";
    /**
     * If a class extends another class with generics, this OP represents the generic type arguments of the super class.
     *
     * e.g. `class A extends B<string, boolean>`, string and boolean are on the stack and classExtends pops() them, and then assigns to A.extendsTypeArguments = [string, boolean].
     *
     * This is only emitted when the class that is currently being described actually extends another class and uses generics.
     *
     * This OP has 1 argument and pops x types from the stack. X is the first argument.
     * Expects a TypeClass on the stack.
     */ ReflectionOp[ReflectionOp["classExtends"] = 21] = "classExtends";
    /**
     * This OP has 1 parameter, the stack entry to the actual class symbol.
     */ ReflectionOp[ReflectionOp["classReference"] = 22] = "classReference";
    /**
     * Marks the last entry in the stack as optional. Used for method|property. Equal to the QuestionMark operator in a property assignment.
     */ ReflectionOp[ReflectionOp["optional"] = 23] = "optional";
    ReflectionOp[ReflectionOp["readonly"] = 24] = "readonly";
    //modifiers for property|method
    ReflectionOp[ReflectionOp["public"] = 25] = "public";
    ReflectionOp[ReflectionOp["private"] = 26] = "private";
    ReflectionOp[ReflectionOp["protected"] = 27] = "protected";
    ReflectionOp[ReflectionOp["abstract"] = 28] = "abstract";
    ReflectionOp[ReflectionOp["defaultValue"] = 29] = "defaultValue";
    ReflectionOp[ReflectionOp["description"] = 30] = "description";
    ReflectionOp[ReflectionOp["rest"] = 31] = "rest";
    ReflectionOp[ReflectionOp["regexp"] = 32] = "regexp";
    ReflectionOp[ReflectionOp["enum"] = 33] = "enum";
    ReflectionOp[ReflectionOp["enumMember"] = 34] = "enumMember";
    ReflectionOp[ReflectionOp["set"] = 35] = "set";
    ReflectionOp[ReflectionOp["map"] = 36] = "map";
    /**
     * Pops the latest stack entry and uses it as T for an array type.
     *
     * Pushes an array type.
     */ ReflectionOp[ReflectionOp["array"] = 37] = "array";
    ReflectionOp[ReflectionOp["tuple"] = 38] = "tuple";
    ReflectionOp[ReflectionOp["tupleMember"] = 39] = "tupleMember";
    ReflectionOp[ReflectionOp["namedTupleMember"] = 40] = "namedTupleMember";
    ReflectionOp[ReflectionOp["union"] = 41] = "union";
    ReflectionOp[ReflectionOp["intersection"] = 42] = "intersection";
    ReflectionOp[ReflectionOp["indexSignature"] = 43] = "indexSignature";
    ReflectionOp[ReflectionOp["objectLiteral"] = 44] = "objectLiteral";
    ReflectionOp[ReflectionOp["mappedType"] = 45] = "mappedType";
    ReflectionOp[ReflectionOp["in"] = 46] = "in";
    ReflectionOp[ReflectionOp["frame"] = 47] = "frame";
    ReflectionOp[ReflectionOp["moveFrame"] = 48] = "moveFrame";
    ReflectionOp[ReflectionOp["return"] = 49] = "return";
    ReflectionOp[ReflectionOp["templateLiteral"] = 50] = "templateLiteral";
    //special instructions that exist to emit less output
    ReflectionOp[ReflectionOp["date"] = 51] = "date";
    //those typed array OPs are here only to reduce runtime code overhead when used in types.
    ReflectionOp[ReflectionOp["int8Array"] = 52] = "int8Array";
    ReflectionOp[ReflectionOp["uint8ClampedArray"] = 53] = "uint8ClampedArray";
    ReflectionOp[ReflectionOp["uint8Array"] = 54] = "uint8Array";
    ReflectionOp[ReflectionOp["int16Array"] = 55] = "int16Array";
    ReflectionOp[ReflectionOp["uint16Array"] = 56] = "uint16Array";
    ReflectionOp[ReflectionOp["int32Array"] = 57] = "int32Array";
    ReflectionOp[ReflectionOp["uint32Array"] = 58] = "uint32Array";
    ReflectionOp[ReflectionOp["float32Array"] = 59] = "float32Array";
    ReflectionOp[ReflectionOp["float64Array"] = 60] = "float64Array";
    ReflectionOp[ReflectionOp["bigInt64Array"] = 61] = "bigInt64Array";
    ReflectionOp[ReflectionOp["arrayBuffer"] = 62] = "arrayBuffer";
    ReflectionOp[ReflectionOp["promise"] = 63] = "promise";
    // pointer, //parameter is a number referencing an entry in the stack, relative to the very beginning (0). pushes that entry onto the stack.
    ReflectionOp[ReflectionOp["arg"] = 64] = "arg";
    ReflectionOp[ReflectionOp["typeParameter"] = 65] = "typeParameter";
    ReflectionOp[ReflectionOp["typeParameterDefault"] = 66] = "typeParameterDefault";
    ReflectionOp[ReflectionOp["var"] = 67] = "var";
    ReflectionOp[ReflectionOp["loads"] = 68] = "loads";
    ReflectionOp[ReflectionOp["indexAccess"] = 69] = "indexAccess";
    ReflectionOp[ReflectionOp["keyof"] = 70] = "keyof";
    ReflectionOp[ReflectionOp["infer"] = 71] = "infer";
    ReflectionOp[ReflectionOp["typeof"] = 72] = "typeof";
    ReflectionOp[ReflectionOp["condition"] = 73] = "condition";
    ReflectionOp[ReflectionOp["jumpCondition"] = 74] = "jumpCondition";
    ReflectionOp[ReflectionOp["jump"] = 75] = "jump";
    ReflectionOp[ReflectionOp["call"] = 76] = "call";
    ReflectionOp[ReflectionOp["inline"] = 77] = "inline";
    ReflectionOp[ReflectionOp["inlineCall"] = 78] = "inlineCall";
    ReflectionOp[ReflectionOp["distribute"] = 79] = "distribute";
    ReflectionOp[ReflectionOp["extends"] = 80] = "extends";
    ReflectionOp[ReflectionOp["widen"] = 81] = "widen";
    ReflectionOp[ReflectionOp["static"] = 82] = "static";
    ReflectionOp[ReflectionOp["mappedType2"] = 83] = "mappedType2";
    ReflectionOp[ReflectionOp["functionReference"] = 84] = "functionReference";
    ReflectionOp[ReflectionOp["callSignature"] = 85] = "callSignature";
    /**
     * Assign for Enum, Interface, Class, and TypeAlias declaration at the very end
     * of the program the typeName. This is so that we have type names available even
     * if the JS code is minified.
     *
     * his operator also assigns originTypes to the type, as it acts as the finalization
     * step of a type.
     */ ReflectionOp[ReflectionOp["typeName"] = 86] = "typeName";
    /**
     * If a class implement an interface or type,
     *
     * e.g. `class A implements B`, then B is on the stack and implements pops() it, and then assigns to A.implements = [B].
     *
     * This is only emitted when the class that is currently being described actually implements something.
     *
     * This OP has 1 argument and pops x types from the stack. X is the first argument.
     * Expects a TypeClass on the stack.
     */ ReflectionOp[ReflectionOp["implements"] = 87] = "implements";
    ReflectionOp[ReflectionOp["nominal"] = 88] = "nominal";
})(ReflectionOp || (ReflectionOp = {})); //# sourceMappingURL=type.js.map
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2d$spec$2f$dist$2f$esm$2f$src$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type-spec/dist/esm/src/type.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2d$spec$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/uuid/dist/esm-node/rng.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>rng)
});
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (crypto, cjs)");
;
const rnds8Pool = new Uint8Array(256); // # of random values to pre-allocate
let poolPtr = rnds8Pool.length;
function rng() {
    if (poolPtr > rnds8Pool.length - 16) {
        __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$crypto$2c$__cjs$29$__["default"].randomFillSync(rnds8Pool);
        poolPtr = 0;
    }
    return rnds8Pool.slice(poolPtr, poolPtr += 16);
}
}}),
"[project]/node_modules/uuid/dist/esm-node/regex.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
}}),
"[project]/node_modules/uuid/dist/esm-node/validate.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$regex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/regex.js [app-ssr] (ecmascript)");
;
function validate(uuid) {
    return typeof uuid === 'string' && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$regex$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"].test(uuid);
}
const __TURBOPACK__default__export__ = validate;
}}),
"[project]/node_modules/uuid/dist/esm-node/stringify.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/validate.js [app-ssr] (ecmascript)");
;
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */ const byteToHex = [];
for(let i = 0; i < 256; ++i){
    byteToHex.push((i + 0x100).toString(16).substr(1));
}
function stringify(arr, offset = 0) {
    // Note: Be careful editing this code!  It's been tuned for performance
    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
    const uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
    // of the following:
    // - One or more input array values don't map to a hex octet (leading to
    // "undefined" in the uuid)
    // - Invalid input values for the RFC `version` or `variant` fields
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$validate$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(uuid)) {
        throw TypeError('Stringified UUID is invalid');
    }
    return uuid;
}
const __TURBOPACK__default__export__ = stringify;
}}),
"[project]/node_modules/uuid/dist/esm-node/v4.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$rng$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/rng.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/stringify.js [app-ssr] (ecmascript)");
;
;
function v4(options, buf, offset) {
    options = options || {};
    const rnds = options.random || (options.rng || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$rng$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided
    if (buf) {
        offset = offset || 0;
        for(let i = 0; i < 16; ++i){
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(rnds);
}
const __TURBOPACK__default__export__ = v4;
}}),
"[project]/node_modules/uuid/dist/esm-node/v4.js [app-ssr] (ecmascript) <export default as v4>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "v4": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$v4$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/v4.js [app-ssr] (ecmascript)");
}}),
"[project]/node_modules/uuid/dist/esm-node/stringify.js [app-ssr] (ecmascript) <export default as stringify>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "stringify": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$node$2f$stringify$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-node/stringify.js [app-ssr] (ecmascript)");
}}),
"[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "BaseEvent": (()=>BaseEvent),
    "DataEvent": (()=>DataEvent),
    "DataEventToken": (()=>DataEventToken),
    "EventDispatcher": (()=>EventDispatcher),
    "EventError": (()=>EventError),
    "EventToken": (()=>EventToken),
    "ForkedEventDispatcher": (()=>ForkedEventDispatcher),
    "__ΩEventDispatcherInterface": (()=>__ΩEventDispatcherInterface),
    "__ΩEventDispatcherUnsubscribe": (()=>__ΩEventDispatcherUnsubscribe),
    "__ΩEventListener": (()=>__ΩEventListener),
    "__ΩEventListenerCallback": (()=>__ΩEventListenerCallback),
    "__ΩEventListenerContainerEntry": (()=>__ΩEventListenerContainerEntry),
    "__ΩEventListenerContainerEntryCallback": (()=>__ΩEventListenerContainerEntryCallback),
    "__ΩEventListenerContainerEntryService": (()=>__ΩEventListenerContainerEntryService),
    "__ΩEventListenerRegistered": (()=>__ΩEventListenerRegistered),
    "__ΩEventOfEventToken": (()=>__ΩEventOfEventToken),
    "eventClass": (()=>eventClass),
    "eventDispatcher": (()=>eventDispatcher),
    "isEventListenerContainerEntryCallback": (()=>isEventListenerContainerEntryCallback),
    "isEventListenerContainerEntryService": (()=>isEventListenerContainerEntryService)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/decorator-builder.js [app-ssr] (ecmascript)");
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
const __ΩEventListenerCallback = [
    'T',
    'event',
    'args',
    '',
    'EventListenerCallback',
    'b!Pe"!2""@2#P""`J/$w%y'
];
;
class EventError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"] {
}
EventError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"],
    'EventError',
    'P7!5w"'
];
const __ΩEventListener = [
    'T',
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventListenerCallback,
    'callback',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'order',
    'EventListener',
    'b!PP"7"4#e"!o$"4%P7&4\'8\'4(Mw)y'
];
;
const __ΩEventOfEventToken = [
    'T',
    ()=>EventToken,
    ()=>DataEvent,
    ()=>BaseEvent,
    'EventOfEventToken',
    'l^Pe#!e%!JRe$!RPde#!Ph"!7#qk#,QRPde#!p0RP7$RPde#!Ph"!7"qkAIQRb!Pde"!pMw%y'
];
;
const __ΩSimpleDataEvent = [
    'T',
    ()=>BaseEvent,
    'data',
    'SimpleDataEvent',
    'b!PP7"e"!4#Mw$y'
];
class EventToken {
    constructor(id, event){
        this.id = id;
    }
    listen(callback, order = 0, module) {
        return {
            eventToken: this,
            callback,
            order: order,
            module
        };
    }
}
EventToken.__type = [
    ()=>BaseEvent,
    'T',
    'event',
    'id',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'constructor',
    'args',
    '',
    'callback',
    'order',
    ()=>0,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__ΩEventListener,
    'listen',
    'EventToken',
    'P7!c"e!!3#9P&2$:9e"!o%"2#8"0&PPe#!2#"@2\'$/(2)\'2*>+P7,2-8e"!o."0/5w0'
];
class DataEventToken extends EventToken {
}
DataEventToken.__type = [
    'T',
    ()=>__ΩSimpleDataEvent,
    ()=>EventToken,
    ()=>__ΩSimpleDataEvent,
    'DataEventToken',
    'b!Pe"!o""7#5e!!o$"6"w%'
];
class BaseEvent {
    constructor(){
        this.propagationStopped = false;
    }
    stopPropagation() {
        this.propagationStopped = true;
    }
    isPropagationStopped() {
        return this.propagationStopped;
    }
}
BaseEvent.__type = [
    'stopPropagation',
    'isPropagationStopped',
    'BaseEvent',
    'P"0!P"0"5w#'
];
class DataEvent extends BaseEvent {
    constructor(data){
        super();
        this.data = data;
    }
}
DataEvent.__type = [
    'T',
    ()=>BaseEvent,
    'data',
    'constructor',
    'DataEvent',
    'b!P7"Pe"!2#:"0$5w%'
];
class EventStore {
    constructor(){
        this.order = 0;
    }
}
EventStore.__type = [
    ()=>EventToken,
    'token',
    'order',
    function() {
        return 0;
    },
    'EventStore',
    'P"7!3"8\'3#>$5w%'
];
class EventClassStore {
    constructor(){
        this.listeners = [];
    }
}
EventClassStore.__type = [
    ()=>EventToken,
    'eventToken',
    'methodName',
    'order',
    'listeners',
    function() {
        return [];
    },
    'EventClassStore',
    'PP"7!4"&4#\'4$MF3%>&5w\''
];
class EventClassApi {
    constructor(){
        this.t = new EventClassStore;
    }
    addListener(eventToken, methodName, order) {
        this.t.listeners.push({
            eventToken,
            methodName,
            order: order
        });
    }
}
EventClassApi.__type = [
    ()=>EventToken,
    'eventToken',
    'methodName',
    'order',
    'addListener',
    'EventClassApi',
    'PP"7!2"&2#\'2$"0%5w&'
];
const eventClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createClassDecoratorContext"])(EventClassApi);
class EventDispatcherApi {
    constructor(){
        this.t = new EventStore;
    }
    onDecorator(target, property) {
        if (!this.t.token) throw new Error('@eventDispatcher.listen(eventToken) is the correct syntax.');
        if (!property) throw new Error('@eventDispatcher.listen(eventToken) works only on class properties.');
        eventClass.addListener(this.t.token, property, this.t.order)(target);
    }
    /**
     * Register a new event listener for given token.
     *
     * order: The lower the order, the sooner the listener is called.
     */ listen(eventToken, order = 0) {
        if (!eventToken) new Error('@eventDispatcher.listen() No event token given');
        this.t.token = eventToken;
        this.t.order = order;
    }
}
EventDispatcherApi.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'target',
    'property',
    'onDecorator',
    ()=>EventToken,
    'eventToken',
    'order',
    ()=>0,
    'listen',
    'EventDispatcherApi',
    'Pn!2"&2#8"0$PP"7%2&\'2\'>("0)5w*'
];
const eventDispatcher = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createPropertyDecoratorContext"])(EventDispatcherApi);
const __ΩEventListenerContainerEntryCallback = [
    'order',
    ()=>__ΩEventListenerCallback,
    'fn',
    ()=>Function,
    'builtFn',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'EventListenerContainerEntryCallback',
    'P\'4!"o""4#Pu$4%8P7&4\'8Mw(y'
];
;
const __ΩEventListenerContainerEntryService = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'order',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'classType',
    'methodName',
    'EventListenerContainerEntryService',
    'PP7!4"\'4#n$4%&4&Mw\'y'
];
;
const __ΩEventListenerContainerEntry = [
    ()=>__ΩEventListenerContainerEntryCallback,
    ()=>__ΩEventListenerContainerEntryService,
    'EventListenerContainerEntry',
    'Pn!n"Jw#y'
];
;
function isEventListenerContainerEntryCallback(obj) {
    return obj && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isFunction"])(obj.fn);
}
isEventListenerContainerEntryCallback.__type = [
    'obj',
    'isEventListenerContainerEntryCallback',
    'P"2!!/"'
];
function isEventListenerContainerEntryService(obj) {
    return obj && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isClass"])(obj.classType);
}
isEventListenerContainerEntryService.__type = [
    'obj',
    'isEventListenerContainerEntryService',
    'P"2!!/"'
];
function compareListenerEntry(a, b) {
    if (isEventListenerContainerEntryCallback(a)) {
        if (!isEventListenerContainerEntryCallback(b)) return false;
        return a.fn == b.fn;
    } else if (isEventListenerContainerEntryService(a)) {
        if (!isEventListenerContainerEntryService(b)) return false;
        return a.module == b.module && a.classType == b.classType && a.methodName == b.methodName;
    }
    return false;
}
compareListenerEntry.__type = [
    ()=>__ΩEventListenerContainerEntry,
    'a',
    ()=>__ΩEventListenerContainerEntry,
    'b',
    'compareListenerEntry',
    'Pn!2"n#2$)/%'
];
const __ΩEventDispatcherFn = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'scopedContext',
    ()=>BaseEvent,
    'event',
    '',
    'EventDispatcherFn',
    'PPP7!2"P7#2$$`v%Mw&y'
];
const __ΩEventDispatcherUnsubscribe = [
    '',
    'EventDispatcherUnsubscribe',
    'P$/!w"y'
];
;
const __ΩEventDispatcherInterface = [
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    'hasListeners',
    ()=>__ΩEventOfEventToken,
    'event',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'dispatch',
    0,
    'fork',
    'EventDispatcherInterface',
    'PPP"7!2"n#2$n%1&P"2"".(fo\'"2)\'2*8n+1,PP"7-2")1.P"2""o/"208P71228$`13Pn415Mw6y'
];
;
function resolveEvent(eventToken, event) {
    if (!event) return new BaseEvent();
    return eventToken instanceof DataEventToken ? event instanceof DataEvent ? event : new DataEvent(event) : event;
}
resolveEvent.__type = [
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventOfEventToken,
    'event',
    'resolveEvent',
    'PP"7!2""o#"2$8"/%'
];
const __ΩEventListenerRegistered = [
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>EventToken,
    'eventToken',
    'EventListenerRegistered',
    'Pn!4"P"7#4$Mw%y'
];
;
class EventDispatcher {
    constructor(injector = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"].forProviders([])){
        this.injector = injector;
        this.listenerMap = (Map.Ω = [
            [
                ()=>EventToken,
                'P"7!'
            ],
            [
                ()=>__ΩEventListenerContainerEntry,
                'n!F'
            ]
        ], new Map());
        this.instances = [];
        this.registeredClassTypes = (Set.Ω = [
            [
                ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
                'n!'
            ]
        ], new Set());
        this.symbol = Symbol('eventDispatcher');
    }
    registerListener(classType, module) {
        if (this.registeredClassTypes.has(classType)) return [];
        this.registeredClassTypes.add(classType);
        const config = eventClass._fetch(classType);
        if (!config) return [];
        const result = [];
        for (const entry of config.listeners){
            const listener = {
                module,
                classType: classType,
                methodName: entry.methodName,
                order: entry.order
            };
            this.add(entry.eventToken, listener);
            result.push({
                eventToken: entry.eventToken,
                listener
            });
        }
        return result;
    }
    listen(eventToken, callback, order = 0) {
        return this.add(eventToken, {
            fn: callback,
            order: order
        });
    }
    add(eventToken, listener) {
        if (eventToken[this.symbol]) throw new EventError(`EventDispatcher already built for token ${eventToken.id}. Use eventDispatcher.fork() for late event binding.`);
        const listeners = this.getListeners(eventToken);
        listeners.push(listener);
        return ()=>{
            if (eventToken[this.symbol]) throw new EventError(`EventDispatcher already built for token ${eventToken.id}. Use eventDispatcher.fork() for late event binding.`);
            const index = listeners.findIndex(__assignType((v)=>compareListenerEntry(v, listener), [
                'v',
                '',
                'P"2!"/"'
            ]));
            if (index !== -1) listeners.splice(index, 1);
        };
    }
    getTokens() {
        return [
            ...this.listenerMap.keys()
        ];
    }
    hasListeners(eventToken) {
        return this.listenerMap.has(eventToken);
    }
    getListeners(eventToken) {
        let listeners = this.listenerMap.get(eventToken);
        if (!listeners) {
            listeners = [];
            this.listenerMap.set(eventToken, listeners);
        }
        return listeners;
    }
    buildFor(eventToken) {
        const compiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CompilerContext"]();
        const lines = [];
        const listeners = this.listenerMap.get(eventToken) || [];
        if (!listeners.length) return;
        listeners.sort(__assignType((a, b)=>{
            if (a.order > b.order) return +1;
            if (a.order < b.order) return -1;
            return 0;
        }, [
            'a',
            'b',
            '',
            'P"2!"2""/#'
        ]));
        for (const listener of listeners){
            if (isEventListenerContainerEntryCallback(listener)) {
                const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                try {
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    const fnVar = compiler.reserveVariable('fn', fn);
                    lines.push(`
                        await ${fnVar}(scopedContext.scope, event);
                        if (event.isPropagationStopped()) return;
                    `);
                } catch (error) {
                    throw new Error(`Could not build listener ${listener.fn.name || 'anonymous function'} of event token ${eventToken.id}: ${error.message}`);
                }
            } else if (isEventListenerContainerEntryService(listener)) {
                const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                const classTypeVar = compiler.reserveVariable('classType', listener.classType);
                const moduleVar = compiler.reserveVariable('module', listener.module);
                const method = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(listener.classType).getMethod(listener.methodName);
                let call = `scopedContext.get(${classTypeVar}, ${moduleVar}).${listener.methodName}(event)`;
                if (method.getParameters().length > 1) {
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(__assignType((event, classInstance, ...args)=>{
                        return classInstance[listener.methodName](event, ...args);
                    }, [
                        'event',
                        'classInstance',
                        'args',
                        '',
                        'P"2!"2""@2#"/$'
                    ]), injector, 2, method.type, 1);
                    call = `${compiler.reserveVariable('fn', fn)}(scopedContext.scope, event, scopedContext.get(${classTypeVar}, ${moduleVar}))`;
                }
                lines.push(`
                    await ${call};
                    if (event.isPropagationStopped()) return;
                `);
            }
        }
        return compiler.buildAsync(lines.join('\n'), 'scopedContext', 'event');
    }
    async dispatch(eventToken, event, injector) {
        let build = eventToken[this.symbol];
        if (!build) {
            build = eventToken[this.symbol] = {
                fn: this.buildFor(eventToken)
            };
        }
        //no fn means for this token has no listeners
        if (!build.fn) return;
        return build.fn(injector || this.injector, resolveEvent(eventToken, event));
    }
    /**
     * A forked EventDispatcher does not use JIT compilation and thus is slightly slower in executing listeners,
     * but cheap in creating event dispatchers.
     */ fork() {
        return new ForkedEventDispatcher(this, this.injector);
    }
}
EventDispatcher.__type = [
    'instances',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"].forProviders([]),
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'classType',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__ΩEventListenerRegistered,
    'registerListener',
    'eventToken',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>0,
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>EventToken,
    'getTokens',
    ()=>EventToken,
    'hasListeners',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'getListeners',
    ()=>EventToken,
    ()=>__ΩEventDispatcherFn,
    'buildFor',
    ()=>__ΩEventOfEventToken,
    'event',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'dispatch',
    ()=>__ΩEventDispatcherInterface,
    'fork',
    ()=>__ΩEventDispatcherInterface,
    'EventDispatcher',
    '"F3!<>"PP7#2$:>%"0&Pn\'2(P7)2*n+F0,P"2-"./fo."20\'21>2n304PP"752-n627n809PP"7:F0;PP"7<2-)0=PP"7>2-n?F0@PP"7A2-PnB-J0C<P"2-"oD"2E8P7F2$8$`0GPnH0I5nJx"wK'
];
class ForkedEventDispatcher {
    constructor(parent, injector){
        this.parent = parent;
        this.injector = injector;
        this.listenerMap = (Map.Ω = [
            [
                ()=>EventToken,
                'P"7!'
            ],
            [
                ()=>__ΩEventListenerContainerEntry,
                'entries',
                'sorted',
                'Pn!F4")4#M'
            ]
        ], new Map());
    }
    async dispatch(eventToken, eventIn, injector) {
        await this.parent.dispatch(eventToken, eventIn, injector);
        const event = resolveEvent(eventToken, eventIn);
        const listeners = this.listenerMap.get(eventToken);
        if (!listeners) return;
        if (!listeners.sorted) {
            listeners.entries.sort(__assignType((a, b)=>{
                if (a.order > b.order) return +1;
                if (a.order < b.order) return -1;
                return 0;
            }, [
                'a',
                'b',
                '',
                'P"2!"2""/#'
            ]));
            listeners.sorted = true;
        }
        const scopedContext = injector || this.injector;
        for (const listener of listeners.entries){
            if (isEventListenerContainerEntryCallback(listener)) {
                if (!listener.builtFn) {
                    try {
                        const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                        listener.builtFn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    } catch (error) {
                        throw new Error(`Could not build listener ${listener.fn.name || 'anonymous function'} of event token ${eventToken.id}: ${error.message}`);
                    }
                }
                await listener.builtFn(scopedContext.scope, event);
            } else if (isEventListenerContainerEntryService(listener)) {
                await scopedContext.get(listener.classType, listener.module)[listener.methodName](event);
            }
        }
    }
    getListeners(eventToken) {
        let listeners = this.listenerMap.get(eventToken);
        if (!listeners) {
            listeners = {
                entries: [],
                sorted: true
            };
            this.listenerMap.set(eventToken, listeners);
        }
        return listeners;
    }
    add(eventToken, listener) {
        const listeners = this.getListeners(eventToken);
        listeners.sorted = false;
        listeners.entries.push(listener);
        return ()=>{
            const index = listeners.entries.findIndex(__assignType((v)=>compareListenerEntry(v, listener), [
                'v',
                '',
                'P"2!"/"'
            ]));
            if (index !== -1) listeners.entries.splice(index, 1);
        };
    }
    listen(eventToken, callback, order = 0) {
        return this.add(eventToken, {
            fn: callback,
            order: order
        });
    }
    hasListeners(eventToken) {
        if (this.listenerMap.has(eventToken)) return true;
        return this.parent.hasListeners(eventToken);
    }
    fork() {
        return new ForkedEventDispatcher(this, this.injector);
    }
}
ForkedEventDispatcher.__type = [
    ()=>__ΩEventDispatcherInterface,
    'parent',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'constructor',
    'eventToken',
    ()=>__ΩEventOfEventToken,
    'eventIn',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'dispatch',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'entries',
    'sorted',
    'getListeners',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>0,
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    'hasListeners',
    ()=>__ΩEventDispatcherInterface,
    'fork',
    ()=>__ΩEventDispatcherInterface,
    'ForkedEventDispatcher',
    'Pn!2"<P7#2$<"0%P"2&"o\'"2(8P7)2$8$`0*PP"7+2&Pn,F4-)4.M0/PP"702&n122n304P"2&".6fo5"27\'28>9n:0;PP"7<2&)0=Pn>0?5n@x"wA'
]; //# sourceMappingURL=event.js.map
}}),
"[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Frame": (()=>Frame),
    "FrameCategory": (()=>FrameCategory),
    "FrameType": (()=>FrameType),
    "__ΩAnalyticData": (()=>__ΩAnalyticData),
    "__ΩFrameCategory": (()=>__ΩFrameCategory),
    "__ΩFrameCategoryData": (()=>__ΩFrameCategoryData),
    "__ΩFrameData": (()=>__ΩFrameData),
    "__ΩFrameEnd": (()=>__ΩFrameEnd),
    "__ΩFrameStart": (()=>__ΩFrameStart),
    "__ΩFrameType": (()=>__ΩFrameType),
    "__ΩTypeOfCategory": (()=>__ΩTypeOfCategory),
    "decodeCompoundKey": (()=>decodeCompoundKey),
    "encodeCompoundKey": (()=>encodeCompoundKey),
    "getTypeOfCategory": (()=>getTypeOfCategory),
    "incrementCompoundKey": (()=>incrementCompoundKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-ssr] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
const __ΩAnalyticData = [
    'timestamp',
    'cpu',
    'memory',
    'loopBlocked',
    'AnalyticData',
    'P\'4!\'4"\'4#\'4$Mw%y'
];
;
const __ΩFrameCategory = [
    'none',
    'http',
    'httpController',
    'rpc',
    'rpcAuthenticate',
    'cli',
    'job',
    'function',
    'lock',
    'workflow',
    'event',
    'database',
    'databaseQuery',
    'email',
    'template',
    'FrameCategory',
    'PC!C"C#C$C%C&C\'C(C)C*C+C,C-C.C/Bw0'
];
;
var FrameCategory;
(function(FrameCategory) {
    FrameCategory[FrameCategory["none"] = 0] = "none";
    FrameCategory[FrameCategory["http"] = 1] = "http";
    FrameCategory[FrameCategory["httpController"] = 2] = "httpController";
    FrameCategory[FrameCategory["rpc"] = 3] = "rpc";
    FrameCategory[FrameCategory["rpcAuthenticate"] = 4] = "rpcAuthenticate";
    FrameCategory[FrameCategory["cli"] = 5] = "cli";
    FrameCategory[FrameCategory["job"] = 6] = "job";
    FrameCategory[FrameCategory["function"] = 7] = "function";
    FrameCategory[FrameCategory["lock"] = 8] = "lock";
    FrameCategory[FrameCategory["workflow"] = 9] = "workflow";
    FrameCategory[FrameCategory["event"] = 10] = "event";
    FrameCategory[FrameCategory["database"] = 11] = "database";
    FrameCategory[FrameCategory["databaseQuery"] = 12] = "databaseQuery";
    FrameCategory[FrameCategory["email"] = 13] = "email";
    FrameCategory[FrameCategory["template"] = 14] = "template";
})(FrameCategory || (FrameCategory = {}));
const __ΩFrameType = [
    'start',
    'end',
    'FrameType',
    'PC!C"Bw#'
];
;
var FrameType;
(function(FrameType) {
    FrameType[FrameType["start"] = 0] = "start";
    FrameType[FrameType["end"] = 1] = "end";
})(FrameType || (FrameType = {}));
const __ΩFrameCategoryData = [
    'url',
    'method',
    'clientIp',
    'responseStatus',
    ()=>FrameCategory.http,
    'controller',
    'arguments',
    ()=>FrameCategory.rpc,
    'collection',
    'className',
    ()=>FrameCategory.database,
    'sql',
    'sqlParams',
    ()=>FrameCategory.databaseQuery,
    'FrameCategoryData',
    'PP&4!8&4"8&4#8\'4$8M4%P&4"&4&"F4\'M4(P&4)8&4*8M4+P&4,"F4-8M4.Mw/y'
];
;
const __ΩTypeOfCategory = [
    'C',
    ()=>__ΩFrameCategoryData,
    ()=>__ΩPartial,
    ()=>__ΩFrameCategoryData,
    'TypeOfCategory',
    'l<n$e$!fo#"R-RPe#!n"gqk#-QRb!Pde"!p/w%y'
];
;
const categorySchemas = {
    _loaded: false
};
function getTypeOfCategory(category) {
    if (!categorySchemas._loaded) {
        const types = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["typeOf"])([], [
            ()=>__ΩFrameCategoryData,
            'n!'
        ]);
        if (types.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
            for (const member of types.types){
                if (member.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].propertySignature) continue;
                categorySchemas[member.name] = member.type;
            }
        }
        categorySchemas._loaded = true;
    }
    return categorySchemas[category];
}
getTypeOfCategory.__type = [
    ()=>__ΩFrameCategory,
    'category',
    'Type',
    'getTypeOfCategory',
    'Pn!2"P"w#-J/$'
];
const __ΩFrameStart = [
    'cid',
    0,
    'type',
    'timestamp',
    'context',
    'label',
    ()=>__ΩFrameCategory,
    'category',
    'FrameStart',
    'P\'4!a"4#\'4$\'4%&4&n\'4(Mw)y'
];
;
const __ΩFrameEnd = [
    'cid',
    1,
    'type',
    'timestamp',
    'FrameEnd',
    'P\'4!a"4#\'4$Mw%y'
];
;
const __ΩFrameData = [
    'cid',
    ()=>__ΩFrameCategory,
    'category',
    'data',
    'FrameData',
    'P\'4!n"4#"4$Mw%y'
];
;
function encodeCompoundKey(id, worker) {
    return (id << 8) + worker;
}
encodeCompoundKey.__type = [
    'id',
    'worker',
    'encodeCompoundKey',
    'P\'2!\'2"\'/#'
];
function incrementCompoundKey(cid, id) {
    return cid + (id << 8);
}
incrementCompoundKey.__type = [
    'cid',
    'id',
    'incrementCompoundKey',
    'P\'2!\'2"\'/#'
];
function decodeCompoundKey(cid) {
    const id = cid >> 8;
    const worker = cid & 0xff;
    return [
        id,
        worker
    ];
}
decodeCompoundKey.__type = [
    'cid',
    'id',
    'worker',
    'decodeCompoundKey',
    'P\'2!P\'I"\'I#G/$'
];
class Frame {
    constructor(cid, start, context, label, category){
        this.cid = cid;
        this.start = start;
        this.context = context;
        this.label = label;
        this.category = category;
    }
}
Frame.__type = [
    'end',
    'data',
    'cid',
    'start',
    'context',
    'label',
    ()=>__ΩFrameCategory,
    'category',
    'constructor',
    'Frame',
    '\'3!8"3"8P\'2#:\'2$:\'2%:&2&:n\'2(:"0)5w*'
]; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "NoopStopwatchFrame": (()=>NoopStopwatchFrame),
    "Stopwatch": (()=>Stopwatch),
    "StopwatchFrame": (()=>StopwatchFrame),
    "StopwatchStore": (()=>StopwatchStore),
    "__ΩStopwatchFrameInterface": (()=>__ΩStopwatchFrameInterface)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-ssr] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
;
;
;
;
;
class StopwatchStore {
    constructor(){
        this.frameQueue = [];
        this.dataQueue = [];
        this.analytics = [];
        this.runningFrames = 0;
        this.lastCollectAnalytics = 0;
    }
    sync() {}
    async close() {}
    data(data) {
        this.dataQueue.push(data);
        this.sync();
    }
    collectAnalytics() {
        if ('undefined' === typeof process) return;
        const now = Date.now();
        const cpu = process.cpuUsage();
        const memory = process.memoryUsage();
        this.analytics.push({
            timestamp: now,
            cpu: cpu.user + cpu.system,
            memory: memory.heapUsed,
            loopBlocked: this.lastCollectAnalytics ? now - this.lastCollectAnalytics : 0
        });
        this.lastCollectAnalytics = now;
    }
    add(frame) {
        this.frameQueue.push(frame);
        if (frame.type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameType"].start) {
            this.runningFrames++;
        } else {
            this.runningFrames--;
        }
        if (this.runningFrames === 0) {
            this.collectAnalytics();
            clearInterval(this.collectAnalyticsTimer);
            this.collectAnalyticsTimer = undefined;
        }
        if (this.runningFrames > 0 && !this.collectAnalyticsTimer) {
            this.collectAnalytics();
            this.collectAnalyticsTimer = setInterval(()=>{
                this.collectAnalytics();
            }, 25);
        }
        this.sync();
    }
}
StopwatchStore.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameStart"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameEnd"],
    'frameQueue',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameData"],
    'dataQueue',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩAnalyticData"],
    'analytics',
    function() {
        return [];
    },
    'collectAnalyticsTimer',
    'sync',
    'close',
    'data',
    '',
    'cb',
    'run',
    'getZone',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameData"],
    'collectAnalytics',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameStart"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩFrameEnd"],
    'frame',
    'add',
    'StopwatchStore',
    'Pn!n"JF3#>$n%F3&>\'n(F3)>*"3+8<P"0,<P"0-PP&"LM2.P"`//20"`01=PPP&"LM-J02=Pn32."0.P"04PPn5n6J27$085w9'
];
const __ΩStopwatchFrameInterface = [
    'C',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeOfCategory"],
    'data',
    'end',
    '',
    'cb',
    'run',
    'StopwatchFrameInterface',
    'b!PPe#!o""2#$1#P$1$PPP"`"J/%2&P&"LM2#8"`1\'Mw(y'
];
;
class StopwatchFrame {
    constructor(store, context, category, cid){
        this.store = store;
        this.context = context;
        this.category = category;
        this.cid = cid;
        this.stopped = false;
    }
    data(data) {
        this.store.data({
            cid: this.cid,
            category: this.category,
            data
        });
    }
    end() {
        if (this.stopped) return;
        this.stopped = true;
        this.store.add({
            cid: this.cid,
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameType"].end,
            timestamp: 0
        });
    }
    run(cb, data = {}) {
        data.stopwatchContextId = this.context;
        return this.store.run(data, cb);
    }
}
StopwatchFrame.__type = [
    'C',
    ()=>StopwatchStore,
    'store',
    'context',
    'category',
    'cid',
    'constructor',
    ()=>__ΩPartial,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩTypeOfCategory"],
    'data',
    'end',
    '',
    'cb',
    ()=>({}),
    'run',
    ()=>__ΩStopwatchFrameInterface,
    'StopwatchFrame',
    'b!PP7"2#<\'2$:\'2%:\'2&:"0\'Pe"!o)"o("2*"0*P"0+PP"`/,2-P&"LM2*>."`0/5e!!o0"x"w1'
];
class NoopStopwatchFrame {
    data(data) {}
    end() {}
    run(cb, data = {}) {
        return cb();
    }
}
NoopStopwatchFrame.__type = [
    'C',
    'data',
    'end',
    '',
    'cb',
    ()=>({}),
    'run',
    ()=>__ΩStopwatchFrameInterface,
    'NoopStopwatchFrame',
    'b!P"2""0"P"0#PP"`/$2%P&"LM2">&"`0\'5e!!o("x"w)'
];
let frameId = 0;
let contextId = 0;
class Stopwatch {
    constructor(store){
        this.store = store;
        /**
         * It's active when there is a StopwatchStore attached.
         * Per default its inactive.
         */ this.active = false;
    }
    enable() {
        this.active = true;
    }
    disable() {
        this.active = false;
    }
    /**
     * Please check Stopwatch.active before using this method.
     *
     * When a new context is created, it's important to use StopwatchFrame.run() so that all
     * sub frames are correctly assigned to the new context.
     */ start(label, category = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameCategory"].none, newContext = false) {
        if (!this.active) return new NoopStopwatchFrame();
        if (!this.store) throw new Error('Stopwatch not active');
        let context = 0;
        const zone = this.store.getZone();
        if (newContext) {
            context = ++contextId;
        } else {
            if (!zone) return new NoopStopwatchFrame();
            context = zone.stopwatchContextId;
            // might be getting an empty object on some platforms, which we treat as no context (as we start new context only with stopwatchContextId)
            if (!context) return new NoopStopwatchFrame();
        }
        const id = ++frameId;
        const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["encodeCompoundKey"])(id, 0);
        this.store.add({
            cid,
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameType"].start,
            category,
            context: context,
            label,
            timestamp: 0
        });
        return new StopwatchFrame(this.store, context, category, cid);
    }
}
Stopwatch.__type = [
    'active',
    function() {
        return false;
    },
    ()=>StopwatchStore,
    'store',
    'constructor',
    'enable',
    'disable',
    'label',
    'category',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameCategory"].none,
    'newContext',
    ()=>false,
    ()=>__ΩStopwatchFrameInterface,
    'start',
    'Stopwatch',
    ')3!>"PP7#2$8<"0%P"0&P"0\'P&2("2)>*)2+>,"o-"0.5w/'
]; //# sourceMappingURL=stopwatch.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Workflow": (()=>Workflow),
    "WorkflowDefinition": (()=>WorkflowDefinition),
    "WorkflowError": (()=>WorkflowError),
    "WorkflowEvent": (()=>WorkflowEvent),
    "WorkflowStateSubject": (()=>WorkflowStateSubject),
    "__ΩWorkflowDefinitionEvents": (()=>__ΩWorkflowDefinitionEvents),
    "__ΩWorkflowNextEvent": (()=>__ΩWorkflowNextEvent),
    "__ΩWorkflowPlaces": (()=>__ΩWorkflowPlaces),
    "__ΩWorkflowState": (()=>__ΩWorkflowState),
    "createWorkflow": (()=>createWorkflow)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-ssr] (ecmascript)");
const __ΩOmit = [
    'T',
    'K',
    ()=>__ΩPick,
    ()=>__ΩExclude,
    'Omit',
    'b!b"e!!e!!ge!"o$#o##w%y'
];
const __ΩCapitalize = [
    'S',
    'Capitalize',
    'b!!w"y'
];
const __ΩPick = [
    'T',
    'K',
    'Pick',
    'l+e#!e"!fRb!b"Pde""N#!w#y'
];
const __ΩExclude = [
    'T',
    'U',
    'Exclude',
    'l6!Re$!RPe#!e$"qk#%QRb!b"Pde"!p)w#y'
];
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
const __ΩWorkflowTransition = [
    'T',
    'from',
    'to',
    'label',
    'WorkflowTransition',
    'b!PPe#!g&K4"Pe#!g&K4#&4$8Mw%y'
];
class WorkflowEvent {
    constructor(){
        this.propagationStopped = false;
    }
    stopPropagation() {
        this.propagationStopped = true;
    }
    isPropagationStopped() {
        return this.propagationStopped;
    }
    clearNext() {
        this.nextState = undefined;
        this.nextStateEvent = undefined;
    }
    /**
     * @see WorkflowNextEvent.next
     */ next(nextState, event) {
        this.nextState = nextState;
        this.nextStateEvent = event;
    }
    hasNext() {
        return this.nextState !== undefined;
    }
}
WorkflowEvent.__type = [
    'stopPropagation',
    'isPropagationStopped',
    'nextState',
    'nextStateEvent',
    'clearNext',
    'event',
    'next',
    'hasNext',
    'WorkflowEvent',
    'P"0!P"0""3#8"3$8P"0%P&2#"2&8"0\'P)0(5w)'
];
const __ΩWorkflowPlaces = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>WorkflowEvent,
    'WorkflowPlaces',
    'P&P7"o!"LMw#y'
];
;
const __ΩWorkflowNextEvent = [
    'T',
    'nextState',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    'event',
    'next',
    'WorkflowNextEvent',
    'b!PPe#!g&K4"8P"2"e#!"fo#"2$8$1%Mw&y'
];
;
const __ΩWorkflowDefinitionEvents = [
    'T',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["BaseEvent"],
    ()=>__ΩOmit,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    "next",
    "nextState",
    ()=>__ΩWorkflowNextEvent,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventToken"],
    'on',
    ()=>__ΩCapitalize,
    'WorkflowDefinitionEvents',
    'lQPPPP7"e&!e%!fo$"P.%.&Jo##e&!o\'"K7(P.)e$!o*"SGRb!PdPe#!g&Kt#!w+y'
];
;
class WorkflowDefinition {
    constructor(name, places, transitions = {}){
        this.name = name;
        this.places = places;
        this.transitions = [];
        this.tokens = {};
        this.next = {};
        this.symbol = Symbol('workflow');
        for(const placeName in this.places){
            if (!this.places.hasOwnProperty(placeName)) continue;
            const token = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventToken"](name + '.' + placeName, this.places[placeName]);
            this.tokens[placeName] = token;
            this['on' + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["capitalize"])(placeName)] = token;
        }
        for (const [i, value] of Object.entries(transitions)){
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isArray"])(value)) {
                for (const v of value)this.addTransition(i, v);
            } else if (value !== undefined) {
                this.addTransition(i, value);
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFastProperties"])(this.tokens);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["toFastProperties"])(this.next);
    }
    getEventToken(name) {
        if (!this.tokens[name]) throw new Error(`No event token found for ${String(name)}`);
        return this.tokens[name];
    }
    addTransition(from, to, label) {
        this.transitions.push({
            from,
            to,
            label
        });
        if (!this.next[from]) this.next[from] = [];
        this.next[from].push(to);
    }
    create(state, eventDispatcher, injector, stopwatch) {
        return new Workflow(this, new WorkflowStateSubject(state), eventDispatcher, injector || eventDispatcher.injector, stopwatch);
    }
    getTransitionsFrom(state) {
        return this.next[state] || [];
    }
    buildApplier(eventDispatcher) {
        const compiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CompilerContext"]();
        compiler.context.set('WorkflowError', WorkflowError);
        compiler.context.set('WorkflowEvent', WorkflowEvent);
        compiler.context.set('getClassName', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"]);
        const lines = [];
        for (const [place, eventType] of Object.entries(this.places)){
            const stateString = JSON.stringify(place);
            const eventTypeVar = compiler.reserveVariable('eventType', eventType);
            const allowedFrom = this.transitions.filter(__assignType((v)=>v.to === place, [
                'v',
                '',
                'P"2!"/"'
            ]));
            const allowedFromCondition = allowedFrom.map(__assignType((v)=>`currentState === ${JSON.stringify(v.from)}`, [
                'v',
                '',
                'P"2!"/"'
            ])).join(' || ');
            const checkFrom = `if (!(${allowedFromCondition})) throw new WorkflowError(\`Can not apply state change from \${currentState}->\${nextState}. There's no transition between them or it was blocked.\`);`;
            const eventToken = this.tokens[place];
            const listeners = eventDispatcher.getListeners(eventToken);
            listeners.sort(__assignType((a, b)=>{
                if (a.order > b.order) return +1;
                if (a.order < b.order) return -1;
                return 0;
            }, [
                'a',
                'b',
                '',
                'P"2!"2""/#'
            ]));
            const listenerCode = [];
            for (const listener of listeners){
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEventListenerContainerEntryCallback"])(listener)) {
                    const injector = listener.module ? eventDispatcher.injector.getInjector(listener.module) : eventDispatcher.injector.getRootInjector();
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    const fnVar = compiler.reserveVariable('fn', fn);
                    listenerCode.push(`
                        if (!event.isPropagationStopped()) {
                            await ${fnVar}(scopedContext.scope, event);
                        }
                    `);
                } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["isEventListenerContainerEntryService"])(listener)) {
                    const injector = listener.module ? eventDispatcher.injector.getInjector(listener.module) : eventDispatcher.injector.getRootInjector();
                    const classTypeVar = compiler.reserveVariable('classType', listener.classType);
                    const moduleVar = listener.module ? ', ' + compiler.reserveVariable('module', listener.module) : '';
                    const method = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from(listener.classType).getMethod(listener.methodName);
                    const resolvedVar = compiler.reserveVariable('resolved');
                    let call = `${resolvedVar}.${listener.methodName}(event)`;
                    if (method.getParameters().length > 1) {
                        const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["injectedFunction"])(__assignType((event, classInstance, ...args)=>{
                            return classInstance[listener.methodName](event, ...args);
                        }, [
                            'event',
                            'classInstance',
                            'args',
                            '',
                            'P"2!"2""@2#"/$'
                        ]), injector, 2, method.type, 1);
                        call = `${compiler.reserveVariable('fn', fn)}(scopedContext.scope, event, ${resolvedVar})`;
                    }
                    listenerCode.push(`
                        //${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(listener.classType)}.${listener.methodName}
                        if (!event.isPropagationStopped()) {
                            if (!${resolvedVar}) ${resolvedVar} = scopedContext.get(${classTypeVar}${moduleVar});
                            await ${call};
                        }
                    `);
                }
            }
            const stopWatchId = this.name + '/' + place;
            lines.push(`
            case ${stateString}: {
                ${allowedFrom.length ? checkFrom : ''}
                if (!(event instanceof ${eventTypeVar})) {
                    throw new Error(\`State ${place} got the wrong event. Expected ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["getClassName"])(eventType)}, got \${getClassName(event)}\`);
                }
                const frame = stopwatch && stopwatch.active ? stopwatch.start(${JSON.stringify(stopWatchId)}, ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["FrameCategory"].workflow}) : undefined;

                ${listenerCode.join('\n')}

                if (frame) frame.end();
                state.set(${stateString});
                break;
            }
        `);
        }
        return compiler.buildAsync(`
            while (true) {
                const currentState = state.get();
                switch (nextState) {
                    ${lines.join('\n')}
                }

                if (event.nextState) {
                    nextState = event.nextState;
                    event = event.nextStateEvent || new WorkflowEvent();
                    continue;
                }
                return;
            }
        `, 'scopedContext', 'state', 'nextState', 'event', 'stopwatch');
    }
}
WorkflowDefinition.__type = [
    'T',
    ()=>__ΩWorkflowTransition,
    'transitions',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventToken"],
    'tokens',
    function() {
        return {};
    },
    'next',
    function() {
        return {};
    },
    'name',
    'places',
    ()=>__ΩWorkflowTransitions,
    ()=>({}),
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventToken"],
    'getEventToken',
    'from',
    'to',
    'label',
    'addTransition',
    'state',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Stopwatch"],
    'stopwatch',
    ()=>Workflow,
    'create',
    'getTransitionsFrom',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'buildApplier',
    'WorkflowDefinition',
    'l1P"7%RPe$!g&KFRb!e!!o""F3#>$Pde"!gN#"3&>\'Pde"!gN("3(>)P&2*:9e"!2+:9e"!o,"2#>-"0.P"2*Pe#!"fo/"7001PPe#!g&K22Pe#!g&K23&248"05PPe#!g&K26P7728P792:8P7;2<8Pe#!7=0>PPe#!g&K26Pe#!g&KF0?PP7@28"0A5wB'
];
const __ΩWorkflowTransitions = [
    'T',
    'WorkflowTransitions',
    'l5PPe%!g&KPe%!g&KFJRb!Pde"!gN#"w"y'
];
function createWorkflow(name, definition, transitions = {}) {
    return new WorkflowDefinition(name, definition, transitions);
}
createWorkflow.__type = [
    'name',
    'definition',
    ()=>__ΩWorkflowTransitions,
    'transitions',
    ()=>({}),
    ()=>WorkflowDefinition,
    ()=>__ΩWorkflowDefinitionEvents,
    'createWorkflow',
    'P&2!"2""o#"2$>%PP"7&"o\'"K/('
];
const __ΩWorkflowState = [
    'T',
    'get',
    'v',
    'set',
    'WorkflowState',
    'b!PPPe$!g&K1"PPe$!g&K2#$1$Mw%y'
];
;
class WorkflowStateSubject {
    constructor(value){
        this.value = value;
    }
    get() {
        return this.value;
    }
    set(v) {
        this.value = v;
    }
}
WorkflowStateSubject.__type = [
    'T',
    'value',
    'constructor',
    'get',
    'v',
    'set',
    ()=>__ΩWorkflowState,
    'WorkflowStateSubject',
    'b!PPe#!g&K2":"0#P"0$PPe#!g&K2%"0&5e!!o\'"x"w('
];
class WorkflowError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"] {
}
WorkflowError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["CustomError"],
    'WorkflowError',
    'P7!5w"'
];
class Workflow {
    constructor(definition, state, eventDispatcher, injector, stopwatch){
        this.definition = definition;
        this.state = state;
        this.eventDispatcher = eventDispatcher;
        this.injector = injector;
        this.stopwatch = stopwatch;
        this.events = {};
    }
    can(nextState) {
        return this.definition.getTransitionsFrom(this.state.get()).includes(nextState);
    }
    /**
     * @throws WorkflowError when next state is not possible to apply.
     */ apply(nextState, event) {
        let fn = this.eventDispatcher[this.definition.symbol];
        if (!fn) {
            fn = this.eventDispatcher[this.definition.symbol] = this.definition.buildApplier(this.eventDispatcher);
        }
        return fn(this.injector, this.state, nextState, event || new WorkflowEvent(), this.stopwatch);
    }
    isDone() {
        return this.definition.getTransitionsFrom(this.state.get()).length === 0;
    }
}
Workflow.__type = [
    'T',
    ()=>Function,
    'events',
    function() {
        return {};
    },
    ()=>WorkflowDefinition,
    'definition',
    ()=>__ΩWorkflowState,
    'state',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Stopwatch"],
    'stopwatch',
    'constructor',
    'nextState',
    'can',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    'event',
    'apply',
    'isDone',
    'Workflow',
    'l\'Pu"Rb!Pde"!gN#"3#<>$PPe#!7%2&:e"!o\'"2(:P7)2*;P7+2,;P7-2.8;"0/PPe#!g&K20)01P"20e"!"fo2"238$`04P)055w6'
]; //# sourceMappingURL=workflow.js.map
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/color-name/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
module.exports = {
    "aliceblue": [
        240,
        248,
        255
    ],
    "antiquewhite": [
        250,
        235,
        215
    ],
    "aqua": [
        0,
        255,
        255
    ],
    "aquamarine": [
        127,
        255,
        212
    ],
    "azure": [
        240,
        255,
        255
    ],
    "beige": [
        245,
        245,
        220
    ],
    "bisque": [
        255,
        228,
        196
    ],
    "black": [
        0,
        0,
        0
    ],
    "blanchedalmond": [
        255,
        235,
        205
    ],
    "blue": [
        0,
        0,
        255
    ],
    "blueviolet": [
        138,
        43,
        226
    ],
    "brown": [
        165,
        42,
        42
    ],
    "burlywood": [
        222,
        184,
        135
    ],
    "cadetblue": [
        95,
        158,
        160
    ],
    "chartreuse": [
        127,
        255,
        0
    ],
    "chocolate": [
        210,
        105,
        30
    ],
    "coral": [
        255,
        127,
        80
    ],
    "cornflowerblue": [
        100,
        149,
        237
    ],
    "cornsilk": [
        255,
        248,
        220
    ],
    "crimson": [
        220,
        20,
        60
    ],
    "cyan": [
        0,
        255,
        255
    ],
    "darkblue": [
        0,
        0,
        139
    ],
    "darkcyan": [
        0,
        139,
        139
    ],
    "darkgoldenrod": [
        184,
        134,
        11
    ],
    "darkgray": [
        169,
        169,
        169
    ],
    "darkgreen": [
        0,
        100,
        0
    ],
    "darkgrey": [
        169,
        169,
        169
    ],
    "darkkhaki": [
        189,
        183,
        107
    ],
    "darkmagenta": [
        139,
        0,
        139
    ],
    "darkolivegreen": [
        85,
        107,
        47
    ],
    "darkorange": [
        255,
        140,
        0
    ],
    "darkorchid": [
        153,
        50,
        204
    ],
    "darkred": [
        139,
        0,
        0
    ],
    "darksalmon": [
        233,
        150,
        122
    ],
    "darkseagreen": [
        143,
        188,
        143
    ],
    "darkslateblue": [
        72,
        61,
        139
    ],
    "darkslategray": [
        47,
        79,
        79
    ],
    "darkslategrey": [
        47,
        79,
        79
    ],
    "darkturquoise": [
        0,
        206,
        209
    ],
    "darkviolet": [
        148,
        0,
        211
    ],
    "deeppink": [
        255,
        20,
        147
    ],
    "deepskyblue": [
        0,
        191,
        255
    ],
    "dimgray": [
        105,
        105,
        105
    ],
    "dimgrey": [
        105,
        105,
        105
    ],
    "dodgerblue": [
        30,
        144,
        255
    ],
    "firebrick": [
        178,
        34,
        34
    ],
    "floralwhite": [
        255,
        250,
        240
    ],
    "forestgreen": [
        34,
        139,
        34
    ],
    "fuchsia": [
        255,
        0,
        255
    ],
    "gainsboro": [
        220,
        220,
        220
    ],
    "ghostwhite": [
        248,
        248,
        255
    ],
    "gold": [
        255,
        215,
        0
    ],
    "goldenrod": [
        218,
        165,
        32
    ],
    "gray": [
        128,
        128,
        128
    ],
    "green": [
        0,
        128,
        0
    ],
    "greenyellow": [
        173,
        255,
        47
    ],
    "grey": [
        128,
        128,
        128
    ],
    "honeydew": [
        240,
        255,
        240
    ],
    "hotpink": [
        255,
        105,
        180
    ],
    "indianred": [
        205,
        92,
        92
    ],
    "indigo": [
        75,
        0,
        130
    ],
    "ivory": [
        255,
        255,
        240
    ],
    "khaki": [
        240,
        230,
        140
    ],
    "lavender": [
        230,
        230,
        250
    ],
    "lavenderblush": [
        255,
        240,
        245
    ],
    "lawngreen": [
        124,
        252,
        0
    ],
    "lemonchiffon": [
        255,
        250,
        205
    ],
    "lightblue": [
        173,
        216,
        230
    ],
    "lightcoral": [
        240,
        128,
        128
    ],
    "lightcyan": [
        224,
        255,
        255
    ],
    "lightgoldenrodyellow": [
        250,
        250,
        210
    ],
    "lightgray": [
        211,
        211,
        211
    ],
    "lightgreen": [
        144,
        238,
        144
    ],
    "lightgrey": [
        211,
        211,
        211
    ],
    "lightpink": [
        255,
        182,
        193
    ],
    "lightsalmon": [
        255,
        160,
        122
    ],
    "lightseagreen": [
        32,
        178,
        170
    ],
    "lightskyblue": [
        135,
        206,
        250
    ],
    "lightslategray": [
        119,
        136,
        153
    ],
    "lightslategrey": [
        119,
        136,
        153
    ],
    "lightsteelblue": [
        176,
        196,
        222
    ],
    "lightyellow": [
        255,
        255,
        224
    ],
    "lime": [
        0,
        255,
        0
    ],
    "limegreen": [
        50,
        205,
        50
    ],
    "linen": [
        250,
        240,
        230
    ],
    "magenta": [
        255,
        0,
        255
    ],
    "maroon": [
        128,
        0,
        0
    ],
    "mediumaquamarine": [
        102,
        205,
        170
    ],
    "mediumblue": [
        0,
        0,
        205
    ],
    "mediumorchid": [
        186,
        85,
        211
    ],
    "mediumpurple": [
        147,
        112,
        219
    ],
    "mediumseagreen": [
        60,
        179,
        113
    ],
    "mediumslateblue": [
        123,
        104,
        238
    ],
    "mediumspringgreen": [
        0,
        250,
        154
    ],
    "mediumturquoise": [
        72,
        209,
        204
    ],
    "mediumvioletred": [
        199,
        21,
        133
    ],
    "midnightblue": [
        25,
        25,
        112
    ],
    "mintcream": [
        245,
        255,
        250
    ],
    "mistyrose": [
        255,
        228,
        225
    ],
    "moccasin": [
        255,
        228,
        181
    ],
    "navajowhite": [
        255,
        222,
        173
    ],
    "navy": [
        0,
        0,
        128
    ],
    "oldlace": [
        253,
        245,
        230
    ],
    "olive": [
        128,
        128,
        0
    ],
    "olivedrab": [
        107,
        142,
        35
    ],
    "orange": [
        255,
        165,
        0
    ],
    "orangered": [
        255,
        69,
        0
    ],
    "orchid": [
        218,
        112,
        214
    ],
    "palegoldenrod": [
        238,
        232,
        170
    ],
    "palegreen": [
        152,
        251,
        152
    ],
    "paleturquoise": [
        175,
        238,
        238
    ],
    "palevioletred": [
        219,
        112,
        147
    ],
    "papayawhip": [
        255,
        239,
        213
    ],
    "peachpuff": [
        255,
        218,
        185
    ],
    "peru": [
        205,
        133,
        63
    ],
    "pink": [
        255,
        192,
        203
    ],
    "plum": [
        221,
        160,
        221
    ],
    "powderblue": [
        176,
        224,
        230
    ],
    "purple": [
        128,
        0,
        128
    ],
    "rebeccapurple": [
        102,
        51,
        153
    ],
    "red": [
        255,
        0,
        0
    ],
    "rosybrown": [
        188,
        143,
        143
    ],
    "royalblue": [
        65,
        105,
        225
    ],
    "saddlebrown": [
        139,
        69,
        19
    ],
    "salmon": [
        250,
        128,
        114
    ],
    "sandybrown": [
        244,
        164,
        96
    ],
    "seagreen": [
        46,
        139,
        87
    ],
    "seashell": [
        255,
        245,
        238
    ],
    "sienna": [
        160,
        82,
        45
    ],
    "silver": [
        192,
        192,
        192
    ],
    "skyblue": [
        135,
        206,
        235
    ],
    "slateblue": [
        106,
        90,
        205
    ],
    "slategray": [
        112,
        128,
        144
    ],
    "slategrey": [
        112,
        128,
        144
    ],
    "snow": [
        255,
        250,
        250
    ],
    "springgreen": [
        0,
        255,
        127
    ],
    "steelblue": [
        70,
        130,
        180
    ],
    "tan": [
        210,
        180,
        140
    ],
    "teal": [
        0,
        128,
        128
    ],
    "thistle": [
        216,
        191,
        216
    ],
    "tomato": [
        255,
        99,
        71
    ],
    "turquoise": [
        64,
        224,
        208
    ],
    "violet": [
        238,
        130,
        238
    ],
    "wheat": [
        245,
        222,
        179
    ],
    "white": [
        255,
        255,
        255
    ],
    "whitesmoke": [
        245,
        245,
        245
    ],
    "yellow": [
        255,
        255,
        0
    ],
    "yellowgreen": [
        154,
        205,
        50
    ]
};
}}),
"[project]/node_modules/color-convert/conversions.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/* MIT license */ /* eslint-disable no-mixed-operators */ const cssKeywords = __turbopack_require__("[project]/node_modules/color-name/index.js [app-ssr] (ecmascript)");
// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)
const reverseKeywords = {};
for (const key of Object.keys(cssKeywords)){
    reverseKeywords[cssKeywords[key]] = key;
}
const convert = {
    rgb: {
        channels: 3,
        labels: 'rgb'
    },
    hsl: {
        channels: 3,
        labels: 'hsl'
    },
    hsv: {
        channels: 3,
        labels: 'hsv'
    },
    hwb: {
        channels: 3,
        labels: 'hwb'
    },
    cmyk: {
        channels: 4,
        labels: 'cmyk'
    },
    xyz: {
        channels: 3,
        labels: 'xyz'
    },
    lab: {
        channels: 3,
        labels: 'lab'
    },
    lch: {
        channels: 3,
        labels: 'lch'
    },
    hex: {
        channels: 1,
        labels: [
            'hex'
        ]
    },
    keyword: {
        channels: 1,
        labels: [
            'keyword'
        ]
    },
    ansi16: {
        channels: 1,
        labels: [
            'ansi16'
        ]
    },
    ansi256: {
        channels: 1,
        labels: [
            'ansi256'
        ]
    },
    hcg: {
        channels: 3,
        labels: [
            'h',
            'c',
            'g'
        ]
    },
    apple: {
        channels: 3,
        labels: [
            'r16',
            'g16',
            'b16'
        ]
    },
    gray: {
        channels: 1,
        labels: [
            'gray'
        ]
    }
};
module.exports = convert;
// Hide .channels and .labels properties
for (const model of Object.keys(convert)){
    if (!('channels' in convert[model])) {
        throw new Error('missing channels property: ' + model);
    }
    if (!('labels' in convert[model])) {
        throw new Error('missing channel labels property: ' + model);
    }
    if (convert[model].labels.length !== convert[model].channels) {
        throw new Error('channel and label counts mismatch: ' + model);
    }
    const { channels, labels } = convert[model];
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], 'channels', {
        value: channels
    });
    Object.defineProperty(convert[model], 'labels', {
        value: labels
    });
}
convert.rgb.hsl = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const min = Math.min(r, g, b);
    const max = Math.max(r, g, b);
    const delta = max - min;
    let h;
    let s;
    if (max === min) {
        h = 0;
    } else if (r === max) {
        h = (g - b) / delta;
    } else if (g === max) {
        h = 2 + (b - r) / delta;
    } else if (b === max) {
        h = 4 + (r - g) / delta;
    }
    h = Math.min(h * 60, 360);
    if (h < 0) {
        h += 360;
    }
    const l = (min + max) / 2;
    if (max === min) {
        s = 0;
    } else if (l <= 0.5) {
        s = delta / (max + min);
    } else {
        s = delta / (2 - max - min);
    }
    return [
        h,
        s * 100,
        l * 100
    ];
};
convert.rgb.hsv = function(rgb) {
    let rdif;
    let gdif;
    let bdif;
    let h;
    let s;
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const v = Math.max(r, g, b);
    const diff = v - Math.min(r, g, b);
    const diffc = function(c) {
        return (v - c) / 6 / diff + 1 / 2;
    };
    if (diff === 0) {
        h = 0;
        s = 0;
    } else {
        s = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b);
        if (r === v) {
            h = bdif - gdif;
        } else if (g === v) {
            h = 1 / 3 + rdif - bdif;
        } else if (b === v) {
            h = 2 / 3 + gdif - rdif;
        }
        if (h < 0) {
            h += 1;
        } else if (h > 1) {
            h -= 1;
        }
    }
    return [
        h * 360,
        s * 100,
        v * 100
    ];
};
convert.rgb.hwb = function(rgb) {
    const r = rgb[0];
    const g = rgb[1];
    let b = rgb[2];
    const h = convert.rgb.hsl(rgb)[0];
    const w = 1 / 255 * Math.min(r, Math.min(g, b));
    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
    return [
        h,
        w * 100,
        b * 100
    ];
};
convert.rgb.cmyk = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const k = Math.min(1 - r, 1 - g, 1 - b);
    const c = (1 - r - k) / (1 - k) || 0;
    const m = (1 - g - k) / (1 - k) || 0;
    const y = (1 - b - k) / (1 - k) || 0;
    return [
        c * 100,
        m * 100,
        y * 100,
        k * 100
    ];
};
function comparativeDistance(x, y) {
    /*
		See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	*/ return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;
}
convert.rgb.keyword = function(rgb) {
    const reversed = reverseKeywords[rgb];
    if (reversed) {
        return reversed;
    }
    let currentClosestDistance = Infinity;
    let currentClosestKeyword;
    for (const keyword of Object.keys(cssKeywords)){
        const value = cssKeywords[keyword];
        // Compute comparative distance
        const distance = comparativeDistance(rgb, value);
        // Check if its less, if so set as closest
        if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
        }
    }
    return currentClosestKeyword;
};
convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
};
convert.rgb.xyz = function(rgb) {
    let r = rgb[0] / 255;
    let g = rgb[1] / 255;
    let b = rgb[2] / 255;
    // Assume sRGB
    r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
    g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
    b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
    const x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    const y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    const z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    return [
        x * 100,
        y * 100,
        z * 100
    ];
};
convert.rgb.lab = function(rgb) {
    const xyz = convert.rgb.xyz(rgb);
    let x = xyz[0];
    let y = xyz[1];
    let z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y - 16;
    const a = 500 * (x - y);
    const b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.hsl.rgb = function(hsl) {
    const h = hsl[0] / 360;
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    let t2;
    let t3;
    let val;
    if (s === 0) {
        val = l * 255;
        return [
            val,
            val,
            val
        ];
    }
    if (l < 0.5) {
        t2 = l * (1 + s);
    } else {
        t2 = l + s - l * s;
    }
    const t1 = 2 * l - t2;
    const rgb = [
        0,
        0,
        0
    ];
    for(let i = 0; i < 3; i++){
        t3 = h + 1 / 3 * -(i - 1);
        if (t3 < 0) {
            t3++;
        }
        if (t3 > 1) {
            t3--;
        }
        if (6 * t3 < 1) {
            val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
            val = t2;
        } else if (3 * t3 < 2) {
            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
            val = t1;
        }
        rgb[i] = val * 255;
    }
    return rgb;
};
convert.hsl.hsv = function(hsl) {
    const h = hsl[0];
    let s = hsl[1] / 100;
    let l = hsl[2] / 100;
    let smin = s;
    const lmin = Math.max(l, 0.01);
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    const v = (l + s) / 2;
    const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [
        h,
        sv * 100,
        v * 100
    ];
};
convert.hsv.rgb = function(hsv) {
    const h = hsv[0] / 60;
    const s = hsv[1] / 100;
    let v = hsv[2] / 100;
    const hi = Math.floor(h) % 6;
    const f = h - Math.floor(h);
    const p = 255 * v * (1 - s);
    const q = 255 * v * (1 - s * f);
    const t = 255 * v * (1 - s * (1 - f));
    v *= 255;
    switch(hi){
        case 0:
            return [
                v,
                t,
                p
            ];
        case 1:
            return [
                q,
                v,
                p
            ];
        case 2:
            return [
                p,
                v,
                t
            ];
        case 3:
            return [
                p,
                q,
                v
            ];
        case 4:
            return [
                t,
                p,
                v
            ];
        case 5:
            return [
                v,
                p,
                q
            ];
    }
};
convert.hsv.hsl = function(hsv) {
    const h = hsv[0];
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const vmin = Math.max(v, 0.01);
    let sl;
    let l;
    l = (2 - s) * v;
    const lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [
        h,
        sl * 100,
        l * 100
    ];
};
// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function(hwb) {
    const h = hwb[0] / 360;
    let wh = hwb[1] / 100;
    let bl = hwb[2] / 100;
    const ratio = wh + bl;
    let f;
    // Wh + bl cant be > 1
    if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
    }
    const i = Math.floor(6 * h);
    const v = 1 - bl;
    f = 6 * h - i;
    if ((i & 0x01) !== 0) {
        f = 1 - f;
    }
    const n = wh + f * (v - wh); // Linear interpolation
    let r;
    let g;
    let b;
    /* eslint-disable max-statements-per-line,no-multi-spaces */ switch(i){
        default:
        case 6:
        case 0:
            r = v;
            g = n;
            b = wh;
            break;
        case 1:
            r = n;
            g = v;
            b = wh;
            break;
        case 2:
            r = wh;
            g = v;
            b = n;
            break;
        case 3:
            r = wh;
            g = n;
            b = v;
            break;
        case 4:
            r = n;
            g = wh;
            b = v;
            break;
        case 5:
            r = v;
            g = wh;
            b = n;
            break;
    }
    /* eslint-enable max-statements-per-line,no-multi-spaces */ return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.cmyk.rgb = function(cmyk) {
    const c = cmyk[0] / 100;
    const m = cmyk[1] / 100;
    const y = cmyk[2] / 100;
    const k = cmyk[3] / 100;
    const r = 1 - Math.min(1, c * (1 - k) + k);
    const g = 1 - Math.min(1, m * (1 - k) + k);
    const b = 1 - Math.min(1, y * (1 - k) + k);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.rgb = function(xyz) {
    const x = xyz[0] / 100;
    const y = xyz[1] / 100;
    const z = xyz[2] / 100;
    let r;
    let g;
    let b;
    r = x * 3.2406 + y * -1.5372 + z * -0.4986;
    g = x * -0.9689 + y * 1.8758 + z * 0.0415;
    b = x * 0.0557 + y * -0.2040 + z * 1.0570;
    // Assume sRGB
    r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;
    g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;
    b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.lab = function(xyz) {
    let x = xyz[0];
    let y = xyz[1];
    let z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y - 16;
    const a = 500 * (x - y);
    const b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.lab.xyz = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let x;
    let y;
    let z;
    y = (l + 16) / 116;
    x = a / 500 + y;
    z = y - b / 200;
    const y2 = y ** 3;
    const x2 = x ** 3;
    const z2 = z ** 3;
    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x *= 95.047;
    y *= 100;
    z *= 108.883;
    return [
        x,
        y,
        z
    ];
};
convert.lab.lch = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let h;
    const hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;
    if (h < 0) {
        h += 360;
    }
    const c = Math.sqrt(a * a + b * b);
    return [
        l,
        c,
        h
    ];
};
convert.lch.lab = function(lch) {
    const l = lch[0];
    const c = lch[1];
    const h = lch[2];
    const hr = h / 360 * 2 * Math.PI;
    const a = c * Math.cos(hr);
    const b = c * Math.sin(hr);
    return [
        l,
        a,
        b
    ];
};
convert.rgb.ansi16 = function(args, saturation = null) {
    const [r, g, b] = args;
    let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization
    value = Math.round(value / 50);
    if (value === 0) {
        return 30;
    }
    let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
    if (value === 2) {
        ansi += 60;
    }
    return ansi;
};
convert.hsv.ansi16 = function(args) {
    // Optimization here; we already know the value and don't need to get
    // it converted for us.
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};
convert.rgb.ansi256 = function(args) {
    const r = args[0];
    const g = args[1];
    const b = args[2];
    // We use the extended greyscale palette here, with the exception of
    // black and white. normal palette only has 4 greyscale shades.
    if (r === g && g === b) {
        if (r < 8) {
            return 16;
        }
        if (r > 248) {
            return 231;
        }
        return Math.round((r - 8) / 247 * 24) + 232;
    }
    const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
};
convert.ansi16.rgb = function(args) {
    let color = args % 10;
    // Handle greyscale
    if (color === 0 || color === 7) {
        if (args > 50) {
            color += 3.5;
        }
        color = color / 10.5 * 255;
        return [
            color,
            color,
            color
        ];
    }
    const mult = (~~(args > 50) + 1) * 0.5;
    const r = (color & 1) * mult * 255;
    const g = (color >> 1 & 1) * mult * 255;
    const b = (color >> 2 & 1) * mult * 255;
    return [
        r,
        g,
        b
    ];
};
convert.ansi256.rgb = function(args) {
    // Handle greyscale
    if (args >= 232) {
        const c = (args - 232) * 10 + 8;
        return [
            c,
            c,
            c
        ];
    }
    args -= 16;
    let rem;
    const r = Math.floor(args / 36) / 5 * 255;
    const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
    const b = rem % 6 / 5 * 255;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hex = function(args) {
    const integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
    const string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.hex.rgb = function(args) {
    const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) {
        return [
            0,
            0,
            0
        ];
    }
    let colorString = match[0];
    if (match[0].length === 3) {
        colorString = colorString.split('').map((char)=>{
            return char + char;
        }).join('');
    }
    const integer = parseInt(colorString, 16);
    const r = integer >> 16 & 0xFF;
    const g = integer >> 8 & 0xFF;
    const b = integer & 0xFF;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hcg = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const max = Math.max(Math.max(r, g), b);
    const min = Math.min(Math.min(r, g), b);
    const chroma = max - min;
    let grayscale;
    let hue;
    if (chroma < 1) {
        grayscale = min / (1 - chroma);
    } else {
        grayscale = 0;
    }
    if (chroma <= 0) {
        hue = 0;
    } else if (max === r) {
        hue = (g - b) / chroma % 6;
    } else if (max === g) {
        hue = 2 + (b - r) / chroma;
    } else {
        hue = 4 + (r - g) / chroma;
    }
    hue /= 6;
    hue %= 1;
    return [
        hue * 360,
        chroma * 100,
        grayscale * 100
    ];
};
convert.hsl.hcg = function(hsl) {
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    const c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);
    let f = 0;
    if (c < 1.0) {
        f = (l - 0.5 * c) / (1.0 - c);
    }
    return [
        hsl[0],
        c * 100,
        f * 100
    ];
};
convert.hsv.hcg = function(hsv) {
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const c = s * v;
    let f = 0;
    if (c < 1.0) {
        f = (v - c) / (1 - c);
    }
    return [
        hsv[0],
        c * 100,
        f * 100
    ];
};
convert.hcg.rgb = function(hcg) {
    const h = hcg[0] / 360;
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    if (c === 0.0) {
        return [
            g * 255,
            g * 255,
            g * 255
        ];
    }
    const pure = [
        0,
        0,
        0
    ];
    const hi = h % 1 * 6;
    const v = hi % 1;
    const w = 1 - v;
    let mg = 0;
    /* eslint-disable max-statements-per-line */ switch(Math.floor(hi)){
        case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
        case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
        case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
        case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
        case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
        default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
    }
    /* eslint-enable max-statements-per-line */ mg = (1.0 - c) * g;
    return [
        (c * pure[0] + mg) * 255,
        (c * pure[1] + mg) * 255,
        (c * pure[2] + mg) * 255
    ];
};
convert.hcg.hsv = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const v = c + g * (1.0 - c);
    let f = 0;
    if (v > 0.0) {
        f = c / v;
    }
    return [
        hcg[0],
        f * 100,
        v * 100
    ];
};
convert.hcg.hsl = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const l = g * (1.0 - c) + 0.5 * c;
    let s = 0;
    if (l > 0.0 && l < 0.5) {
        s = c / (2 * l);
    } else if (l >= 0.5 && l < 1.0) {
        s = c / (2 * (1 - l));
    }
    return [
        hcg[0],
        s * 100,
        l * 100
    ];
};
convert.hcg.hwb = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const v = c + g * (1.0 - c);
    return [
        hcg[0],
        (v - c) * 100,
        (1 - v) * 100
    ];
};
convert.hwb.hcg = function(hwb) {
    const w = hwb[1] / 100;
    const b = hwb[2] / 100;
    const v = 1 - b;
    const c = v - w;
    let g = 0;
    if (c < 1) {
        g = (v - c) / (1 - c);
    }
    return [
        hwb[0],
        c * 100,
        g * 100
    ];
};
convert.apple.rgb = function(apple) {
    return [
        apple[0] / 65535 * 255,
        apple[1] / 65535 * 255,
        apple[2] / 65535 * 255
    ];
};
convert.rgb.apple = function(rgb) {
    return [
        rgb[0] / 255 * 65535,
        rgb[1] / 255 * 65535,
        rgb[2] / 255 * 65535
    ];
};
convert.gray.rgb = function(args) {
    return [
        args[0] / 100 * 255,
        args[0] / 100 * 255,
        args[0] / 100 * 255
    ];
};
convert.gray.hsl = function(args) {
    return [
        0,
        0,
        args[0]
    ];
};
convert.gray.hsv = convert.gray.hsl;
convert.gray.hwb = function(gray) {
    return [
        0,
        100,
        gray[0]
    ];
};
convert.gray.cmyk = function(gray) {
    return [
        0,
        0,
        0,
        gray[0]
    ];
};
convert.gray.lab = function(gray) {
    return [
        gray[0],
        0,
        0
    ];
};
convert.gray.hex = function(gray) {
    const val = Math.round(gray[0] / 100 * 255) & 0xFF;
    const integer = (val << 16) + (val << 8) + val;
    const string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.rgb.gray = function(rgb) {
    const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [
        val / 255 * 100
    ];
};
}}),
"[project]/node_modules/color-convert/route.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
const conversions = __turbopack_require__("[project]/node_modules/color-convert/conversions.js [app-ssr] (ecmascript)");
/*
	This function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/ function buildGraph() {
    const graph = {};
    // https://jsperf.com/object-keys-vs-for-in-with-closure/3
    const models = Object.keys(conversions);
    for(let len = models.length, i = 0; i < len; i++){
        graph[models[i]] = {
            // http://jsperf.com/1-vs-infinity
            // micro-opt, but this is simple.
            distance: -1,
            parent: null
        };
    }
    return graph;
}
// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
    const graph = buildGraph();
    const queue = [
        fromModel
    ]; // Unshift -> queue -> pop
    graph[fromModel].distance = 0;
    while(queue.length){
        const current = queue.pop();
        const adjacents = Object.keys(conversions[current]);
        for(let len = adjacents.length, i = 0; i < len; i++){
            const adjacent = adjacents[i];
            const node = graph[adjacent];
            if (node.distance === -1) {
                node.distance = graph[current].distance + 1;
                node.parent = current;
                queue.unshift(adjacent);
            }
        }
    }
    return graph;
}
function link(from, to) {
    return function(args) {
        return to(from(args));
    };
}
function wrapConversion(toModel, graph) {
    const path = [
        graph[toModel].parent,
        toModel
    ];
    let fn = conversions[graph[toModel].parent][toModel];
    let cur = graph[toModel].parent;
    while(graph[cur].parent){
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
}
module.exports = function(fromModel) {
    const graph = deriveBFS(fromModel);
    const conversion = {};
    const models = Object.keys(graph);
    for(let len = models.length, i = 0; i < len; i++){
        const toModel = models[i];
        const node = graph[toModel];
        if (node.parent === null) {
            continue;
        }
        conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
};
}}),
"[project]/node_modules/color-convert/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
const conversions = __turbopack_require__("[project]/node_modules/color-convert/conversions.js [app-ssr] (ecmascript)");
const route = __turbopack_require__("[project]/node_modules/color-convert/route.js [app-ssr] (ecmascript)");
const convert = {};
const models = Object.keys(conversions);
function wrapRaw(fn) {
    const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        return fn(args);
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
function wrapRounded(fn) {
    const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        const result = fn(args);
        // We're assuming the result is an array here.
        // see notice in conversions.js; don't use box types
        // in conversion functions.
        if (typeof result === 'object') {
            for(let len = result.length, i = 0; i < len; i++){
                result[i] = Math.round(result[i]);
            }
        }
        return result;
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
models.forEach((fromModel)=>{
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], 'channels', {
        value: conversions[fromModel].channels
    });
    Object.defineProperty(convert[fromModel], 'labels', {
        value: conversions[fromModel].labels
    });
    const routes = route(fromModel);
    const routeModels = Object.keys(routes);
    routeModels.forEach((toModel)=>{
        const fn = routes[toModel];
        convert[fromModel][toModel] = wrapRounded(fn);
        convert[fromModel][toModel].raw = wrapRaw(fn);
    });
});
module.exports = convert;
}}),
"[project]/node_modules/ansi-styles/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
const wrapAnsi16 = (fn, offset)=>(...args)=>{
        const code = fn(...args);
        return `\u001B[${code + offset}m`;
    };
const wrapAnsi256 = (fn, offset)=>(...args)=>{
        const code = fn(...args);
        return `\u001B[${38 + offset};5;${code}m`;
    };
const wrapAnsi16m = (fn, offset)=>(...args)=>{
        const rgb = fn(...args);
        return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
    };
const ansi2ansi = (n)=>n;
const rgb2rgb = (r, g, b)=>[
        r,
        g,
        b
    ];
const setLazyProperty = (object, property, get)=>{
    Object.defineProperty(object, property, {
        get: ()=>{
            const value = get();
            Object.defineProperty(object, property, {
                value,
                enumerable: true,
                configurable: true
            });
            return value;
        },
        enumerable: true,
        configurable: true
    });
};
/** @type {typeof import('color-convert')} */ let colorConvert;
const makeDynamicStyles = (wrap, targetSpace, identity, isBackground)=>{
    if (colorConvert === undefined) {
        colorConvert = __turbopack_require__("[project]/node_modules/color-convert/index.js [app-ssr] (ecmascript)");
    }
    const offset = isBackground ? 10 : 0;
    const styles = {};
    for (const [sourceSpace, suite] of Object.entries(colorConvert)){
        const name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;
        if (sourceSpace === targetSpace) {
            styles[name] = wrap(identity, offset);
        } else if (typeof suite === 'object') {
            styles[name] = wrap(suite[targetSpace], offset);
        }
    }
    return styles;
};
function assembleStyles() {
    const codes = new Map();
    const styles = {
        modifier: {
            reset: [
                0,
                0
            ],
            // 21 isn't widely supported and 22 does the same thing
            bold: [
                1,
                22
            ],
            dim: [
                2,
                22
            ],
            italic: [
                3,
                23
            ],
            underline: [
                4,
                24
            ],
            inverse: [
                7,
                27
            ],
            hidden: [
                8,
                28
            ],
            strikethrough: [
                9,
                29
            ]
        },
        color: {
            black: [
                30,
                39
            ],
            red: [
                31,
                39
            ],
            green: [
                32,
                39
            ],
            yellow: [
                33,
                39
            ],
            blue: [
                34,
                39
            ],
            magenta: [
                35,
                39
            ],
            cyan: [
                36,
                39
            ],
            white: [
                37,
                39
            ],
            // Bright color
            blackBright: [
                90,
                39
            ],
            redBright: [
                91,
                39
            ],
            greenBright: [
                92,
                39
            ],
            yellowBright: [
                93,
                39
            ],
            blueBright: [
                94,
                39
            ],
            magentaBright: [
                95,
                39
            ],
            cyanBright: [
                96,
                39
            ],
            whiteBright: [
                97,
                39
            ]
        },
        bgColor: {
            bgBlack: [
                40,
                49
            ],
            bgRed: [
                41,
                49
            ],
            bgGreen: [
                42,
                49
            ],
            bgYellow: [
                43,
                49
            ],
            bgBlue: [
                44,
                49
            ],
            bgMagenta: [
                45,
                49
            ],
            bgCyan: [
                46,
                49
            ],
            bgWhite: [
                47,
                49
            ],
            // Bright color
            bgBlackBright: [
                100,
                49
            ],
            bgRedBright: [
                101,
                49
            ],
            bgGreenBright: [
                102,
                49
            ],
            bgYellowBright: [
                103,
                49
            ],
            bgBlueBright: [
                104,
                49
            ],
            bgMagentaBright: [
                105,
                49
            ],
            bgCyanBright: [
                106,
                49
            ],
            bgWhiteBright: [
                107,
                49
            ]
        }
    };
    // Alias bright black as gray (and grey)
    styles.color.gray = styles.color.blackBright;
    styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
    styles.color.grey = styles.color.blackBright;
    styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
    for (const [groupName, group] of Object.entries(styles)){
        for (const [styleName, style] of Object.entries(group)){
            styles[styleName] = {
                open: `\u001B[${style[0]}m`,
                close: `\u001B[${style[1]}m`
            };
            group[styleName] = styles[styleName];
            codes.set(style[0], style[1]);
        }
        Object.defineProperty(styles, groupName, {
            value: group,
            enumerable: false
        });
    }
    Object.defineProperty(styles, 'codes', {
        value: codes,
        enumerable: false
    });
    styles.color.close = '\u001B[39m';
    styles.bgColor.close = '\u001B[49m';
    setLazyProperty(styles.color, 'ansi', ()=>makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));
    setLazyProperty(styles.color, 'ansi256', ()=>makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));
    setLazyProperty(styles.color, 'ansi16m', ()=>makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));
    setLazyProperty(styles.bgColor, 'ansi', ()=>makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));
    setLazyProperty(styles.bgColor, 'ansi256', ()=>makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));
    setLazyProperty(styles.bgColor, 'ansi16m', ()=>makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));
    return styles;
}
// Make the export immutable
Object.defineProperty(module, 'exports', {
    enumerable: true,
    get: assembleStyles
});
}}),
"[project]/node_modules/format-util/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
module.exports = __turbopack_require__("[externals]/ [external] (util, cjs)").format;
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "MemoryLoggerTransport": (()=>MemoryLoggerTransport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
;
;
class MemoryLoggerTransport {
    constructor(){
        this.messages = [];
        this.messageStrings = [];
    }
    clear() {
        this.messages.length = 0;
        this.messageStrings.length = 0;
    }
    write(message) {
        this.messages.push(message);
        this.messageStrings.push(message.message);
    }
    supportsColor() {
        return false;
    }
}
MemoryLoggerTransport.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLogMessage"],
    'messages',
    function() {
        return [];
    },
    'messageStrings',
    function() {
        return [];
    },
    'clear',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLogMessage"],
    'message',
    'write',
    'supportsColor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩLoggerTransport"],
    'MemoryLoggerTransport',
    'n!F3">#&F3$>%P$0&Pn\'2("0)P"0*5n+x"w,'
]; //# sourceMappingURL=memory-logger.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "ColorFormatter": (()=>ColorFormatter),
    "ConsoleLogger": (()=>ConsoleLogger),
    "ConsoleTransport": (()=>ConsoleTransport),
    "DefaultFormatter": (()=>DefaultFormatter),
    "JSONTransport": (()=>JSONTransport),
    "LogLevelFormatter": (()=>LogLevelFormatter),
    "Logger": (()=>Logger),
    "LoggerLevel": (()=>LoggerLevel),
    "MemoryLogger": (()=>MemoryLogger),
    "RemoveColorFormatter": (()=>RemoveColorFormatter),
    "ScopeFormatter": (()=>ScopeFormatter),
    "ScopedLogger": (()=>ScopedLogger),
    "TimestampFormatter": (()=>TimestampFormatter),
    "__ΩLogData": (()=>__ΩLogData),
    "__ΩLogMessage": (()=>__ΩLogMessage),
    "__ΩLoggerFormatter": (()=>__ΩLoggerFormatter),
    "__ΩLoggerInterface": (()=>__ΩLoggerInterface),
    "__ΩLoggerLevel": (()=>__ΩLoggerLevel),
    "__ΩLoggerTransport": (()=>__ΩLoggerTransport),
    "__ΩScopedLogger": (()=>__ΩScopedLogger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/ansi-styles/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$format$2d$util$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/format-util/index.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/types.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-ssr] (ecmascript)");
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
const __ΩLoggerLevel = [
    'none',
    'alert',
    'error',
    'warning',
    'log',
    'info',
    'debug',
    'LoggerLevel',
    'PC!C"C#C$C%C&C\'Bw('
];
;
var LoggerLevel;
(function(LoggerLevel) {
    LoggerLevel[LoggerLevel["none"] = 0] = "none";
    LoggerLevel[LoggerLevel["alert"] = 1] = "alert";
    LoggerLevel[LoggerLevel["error"] = 2] = "error";
    LoggerLevel[LoggerLevel["warning"] = 3] = "warning";
    LoggerLevel[LoggerLevel["log"] = 4] = "log";
    LoggerLevel[LoggerLevel["info"] = 5] = "info";
    LoggerLevel[LoggerLevel["debug"] = 6] = "debug";
})(LoggerLevel || (LoggerLevel = {}));
const __ΩLogData = [
    'LogData',
    'P&"LMw!y'
];
;
const __ΩLogMessage = [
    'message',
    'rawMessage',
    'date',
    ()=>__ΩLoggerLevel,
    'level',
    'scope',
    ()=>__ΩLogData,
    'data',
    'LogMessage',
    'P&4!&4"T4#n$4%&4&n\'4(Mw)y'
];
;
class ConsoleTransport {
    constructor(withColors = true){
        this.withColors = withColors;
    }
    write(message) {
        if (message.level === LoggerLevel.error) {
            process.stderr.write(message.message + '\n');
        } else {
            process.stdout.write(message.message + '\n');
        }
    }
    supportsColor() {
        return this.withColors;
    }
}
ConsoleTransport.__type = [
    'withColors',
    ()=>true,
    'constructor',
    ()=>__ΩLogMessage,
    'message',
    'write',
    'supportsColor',
    ()=>__ΩLoggerTransport,
    'ConsoleTransport',
    'P)2!<>""0#Pn$2%$0&P"0\'5n(x"w)'
];
class JSONTransport {
    constructor(){
        this.out = process.stdout;
    }
    write(message) {
        this.out.write(JSON.stringify({
            message: message.message,
            level: message.level,
            date: message.date,
            scope: message.scope,
            data: message.data
        }) + '\n');
    }
    supportsColor() {
        return false;
    }
}
JSONTransport.__type = [
    'v',
    '',
    'write',
    'out',
    function() {
        return process.stdout;
    },
    ()=>__ΩLogMessage,
    'message',
    'supportsColor',
    ()=>__ΩLoggerTransport,
    'JSONTransport',
    'PP&2!"/"4#M3$>%Pn&2\'"0#P"0(5n)x"w*'
];
const __ΩLoggerTransport = [
    ()=>__ΩLogMessage,
    'message',
    'write',
    'supportsColor',
    'LoggerTransport',
    'PPn!2"$1#P)1$Mw%y'
];
;
const __ΩLoggerFormatter = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    'LoggerFormatter',
    'PPn!2"$1#Mw$y'
];
;
class ColorFormatter {
    format(message) {
        if (message.level === LoggerLevel.error || message.level === LoggerLevel.alert) {
            message.message = `<red>${message.message}</red>`;
        }
        if (message.message.includes('<')) {
            message.message = message.message.replace(/<(\/)?([a-zA-Z]+)>/g, __assignType(function(a, end, color) {
                if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][color]) return a;
                if (end === '/') return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][color].close;
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"][color].open;
            }, [
                'a',
                'end',
                'color',
                '',
                'P"2!"2""2#"/$'
            ]));
        }
    }
}
ColorFormatter.colors = [
    'black',
    'red',
    'green',
    'yellow',
    'blue',
    'cyan',
    'magenta',
    'white',
    'gray',
    'grey'
];
ColorFormatter.__type = [
    'colors',
    function() {
        return [
            'black',
            'red',
            'green',
            'yellow',
            'blue',
            'cyan',
            'magenta',
            'white',
            'gray',
            'grey'
        ];
    },
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'ColorFormatter',
    '&F3!s>"Pn#2$$0%5n&x"w\''
];
class RemoveColorFormatter {
    format(message) {
        if (message.message.includes('<')) {
            message.message = message.message.replace(/<(\/)?([a-zA-Z]+)>/g, __assignType(function(a, end, color) {
                return '';
            }, [
                'a',
                'end',
                'color',
                '',
                'P"2!"2""2#"/$'
            ]));
        }
    }
}
RemoveColorFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'RemoveColorFormatter',
    'Pn!2"$0#5n$x"w%'
];
class DefaultFormatter {
    constructor(){
        this.formatters = [
            new ScopeFormatter(),
            new LogLevelFormatter(),
            new TimestampFormatter()
        ];
    }
    format(message) {
        for (const formatter of this.formatters){
            formatter.format(message);
        }
    }
}
DefaultFormatter.__type = [
    ()=>__ΩLoggerFormatter,
    'formatters',
    function() {
        return [
            new ScopeFormatter(),
            new LogLevelFormatter(),
            new TimestampFormatter()
        ];
    },
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'DefaultFormatter',
    'n!F3">#Pn$2%$0&5n\'x"w('
];
class TimestampFormatter {
    format(message) {
        message.message = `<yellow>${new Date().toISOString()}</yellow> ${message.message}`;
    }
}
TimestampFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'TimestampFormatter',
    'Pn!2"$0#5n$x"w%'
];
class LogLevelFormatter {
    format(message) {
        message.message = `[${String(LoggerLevel[message.level]).toUpperCase()}] ${message.message}`;
    }
}
LogLevelFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'LogLevelFormatter',
    'Pn!2"$0#5n$x"w%'
];
class ScopeFormatter {
    format(message) {
        if (!message.scope) return;
        message.message = `(<yellow>${message.scope}</yellow>) ${message.message}`;
    }
}
ScopeFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'ScopeFormatter',
    'Pn!2"$0#5n$x"w%'
];
const __ΩLoggerInterface = [
    ()=>__ΩLoggerLevel,
    'level',
    'name',
    0,
    'scoped',
    ()=>__ΩLogData,
    'data',
    0,
    ()=>__ΩLoggerLevel,
    'is',
    'message',
    'alert',
    'error',
    'warn',
    'log',
    'info',
    'debug',
    'LoggerInterface',
    'Pn!4"P&2#n$1%Pn&2\'n(1\'Pn)2")1*P"@2+$1,P"@2+$1-P"@2+$1.P"@2+$1/P"@2+$10P"@2+$11Mw2y'
];
;
class Logger {
    constructor(transporter = [], formatter = [], scope = ''){
        this.transporter = transporter;
        this.formatter = formatter;
        this.scope = scope;
        this.colorFormatter = new ColorFormatter;
        this.removeColorFormatter = new RemoveColorFormatter;
        /**
         * Setting a log level means only logs below or equal to this level will be handled.
         */ this.level = LoggerLevel.info;
        this.scopedLevel = {};
        this.scopes = {};
    }
    data(data) {
        this.logData = data;
        return this;
    }
    scoped(name) {
        var _a;
        const scopedLogger = (_a = this.scopes)[name] || (_a[name] = new this.constructor(this.transporter, this.formatter, name));
        scopedLogger.level = this.level;
        return scopedLogger;
    }
    addTransport(transport) {
        this.transporter.push(transport);
    }
    setTransport(transport) {
        this.transporter = transport;
    }
    removeTransport(transport) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.transporter, transport);
    }
    hasFormatter(formatterType) {
        for (const formatter of this.formatter){
            if (formatter instanceof formatterType) return true;
        }
        return false;
    }
    hasFormatters() {
        return this.formatter.length > 0;
    }
    addFormatter(formatter) {
        this.formatter.push(formatter);
    }
    setFormatter(formatter) {
        this.formatter = formatter;
    }
    format(message) {
        for (const formatter of this.formatter){
            formatter.format(message);
        }
    }
    is(level) {
        return level <= this.level;
    }
    send(messages, level, data = {}) {
        if (!this.is(level)) return;
        if (this.logData) {
            data = this.logData;
            this.logData = undefined;
        }
        const rawMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$format$2d$util$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["default"])(...messages);
        const message = {
            message: rawMessage,
            rawMessage,
            level,
            date: new Date,
            scope: this.scope,
            data
        };
        this.format(message);
        for (const transport of this.transporter){
            const formattedMessage = {
                ...message
            };
            if (transport.supportsColor()) {
                this.colorFormatter.format(formattedMessage);
                transport.write(formattedMessage);
            } else {
                this.removeColorFormatter.format(formattedMessage);
                transport.write(formattedMessage);
            }
        }
    }
    alert(...message) {
        this.send(message, LoggerLevel.alert);
    }
    error(...message) {
        this.send(message, LoggerLevel.error);
    }
    warn(...message) {
        this.send(message, LoggerLevel.warning);
    }
    log(...message) {
        this.send(message, LoggerLevel.log);
    }
    info(...message) {
        this.send(message, LoggerLevel.info);
    }
    debug(...message) {
        this.send(message, LoggerLevel.debug);
    }
}
Logger.__type = [
    ()=>__ΩLoggerLevel,
    'level',
    function() {
        return LoggerLevel.info;
    },
    ()=>__ΩLogData,
    'logData',
    ()=>__ΩLoggerLevel,
    'scopedLevel',
    function() {
        return {};
    },
    ()=>Logger,
    'scopes',
    function() {
        return {};
    },
    ()=>__ΩLoggerTransport,
    'transporter',
    ()=>[],
    ()=>__ΩLoggerFormatter,
    'formatter',
    ()=>[],
    'scope',
    ()=>"",
    'constructor',
    ()=>__ΩLogData,
    'data',
    'name',
    ()=>Logger,
    'scoped',
    ()=>__ΩLoggerTransport,
    'transport',
    'addTransport',
    ()=>__ΩLoggerTransport,
    'setTransport',
    ()=>__ΩLoggerTransport,
    'removeTransport',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__ΩLoggerFormatter,
    'formatterType',
    'hasFormatter',
    'hasFormatters',
    ()=>__ΩLoggerFormatter,
    'addFormatter',
    ()=>__ΩLoggerFormatter,
    'setFormatter',
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerLevel,
    'is',
    'messages',
    ()=>__ΩLoggerLevel,
    ()=>__ΩLogData,
    ()=>({}),
    'send',
    'alert',
    'error',
    'warn',
    'log',
    'info',
    'debug',
    ()=>__ΩLoggerInterface,
    'Logger',
    'n!3">#n$3%8<P&n&LM3\'>(P&P7)LM3*<>+Pn,F2-<>.n/F20<>1&22<>3"04Pn526!06P&27P7809Pn:2;"0<Pn=F2;"0>Pn?2;"0@PnBoA"2C"0DP)0EPnF20"0GPnHF20"0IPnJ2K$0L<PnM2")0NP"F2OnP2"nQ26>R"0S<P"@2K"0TP"@2K"0UP"@2K"0VP"@2K"0WP"@2K"0XP"@2K"0Y5nZx"w['
];
class ConsoleLogger extends Logger {
    constructor(){
        super([
            new ConsoleTransport
        ]);
    }
}
ConsoleLogger.__type = [
    ()=>Logger,
    'constructor',
    'ConsoleLogger',
    'P7!P"0"5w#'
];
class MemoryLogger extends Logger {
    constructor(){
        super([]);
        this.memory = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["MemoryLoggerTransport"]();
        this.transporter.push(this.memory);
    }
    getOutput() {
        return this.memory.messageStrings.join('\n');
    }
    clear() {
        this.memory.messageStrings = [];
        this.memory.messages = [];
    }
}
MemoryLogger.__type = [
    ()=>Logger,
    'constructor',
    'getOutput',
    'clear',
    'MemoryLogger',
    'P7!P"0"P&0#P"0$5w%'
];
const __ΩScopedLogger = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩInject"],
    ()=>__ΩLoggerInterface,
    "scoped-logger",
    'ScopedLogger',
    'n".#o!#w$y'
];
;
const ScopedLogger = {
    provide: 'scoped-logger',
    transient: true,
    useFactory: __assignType((target, logger = new Logger())=>{
        var _a, _b;
        return logger.scoped((_b = (_a = target.token) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : String(target.token));
    }, [
        ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["TransientInjectionTarget"],
        'target',
        ()=>Logger,
        'logger',
        ()=>new Logger(),
        '',
        'PP7!2"P7#2$>%"/&'
    ])
}; //# sourceMappingURL=logger.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/pybridge/dist/esm/src/config.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "PyBridgeConfig": (()=>PyBridgeConfig)
});
class PyBridgeConfig {
    constructor(){
        /**
         * The path to the python executable.
         */ this.python = 'python3';
        this.cwd = '';
    }
}
PyBridgeConfig.__type = [
    'python',
    function() {
        return 'python3';
    },
    'cwd',
    function() {
        return '';
    },
    'PyBridgeConfig',
    '&3!>"&3#>$5w%'
];
;
 //# sourceMappingURL=config.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Controller": (()=>Controller),
    "PyBridge": (()=>PyBridge),
    "__ΩRemoteController": (()=>__ΩRemoteController)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$child_process$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (child_process, cjs)");
var __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__ = __turbopack_import__("[externals]/ [external] (path, cjs)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
(()=>{
    const e = new Error("Cannot find module 'rxjs'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/utils.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/serializer-facade.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-ssr] (ecmascript)");
const __ΩParameters = [
    'T',
    'args',
    '',
    'Parameters',
    'l>e"!R!RPde#!Ph"!@2""/#qk#\'QRb!Pde"!p)w$y'
];
const __ΩReturnType = [
    'T',
    'args',
    '',
    'ReturnType',
    'l>e"!R"RPde#!P"@2"h"!/#qk#\'QRb!Pde"!p)w$y'
];
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
;
;
const __ΩRpcMessage = [
    'id',
    true,
    'ready',
    'result',
    'yield',
    'error',
    'RpcMessage',
    'P\'4!."4#8"4$8"4%8&4&8Mw\'y'
];
function fromCode(code) {
    return `
import sys
import types

module = types.ModuleType('my_module')
my_code = ${JSON.stringify(code)}
exec(my_code, module.__dict__)
`;
}
fromCode.__type = [
    'code',
    'fromCode',
    'P&2!&/"'
];
const hook = `
import sys
import traceback
import json
from typing import Generator

def debug(*args):
    print(*args, file=sys.stderr, flush=True)

# redirect all output to stderr
orig_stdout = sys.stdout
sys.stdout = sys.stderr

{{__load__}}

try:
    for line in sys.stdin:
        p = None
        try:
            # debug("got: ", line)
            p = json.loads(line)
            result = getattr(module, p['method'])(*p['args'])
            # if result is a generator, iterate over it
            if isinstance(result, Generator):
                for r in result:
                    message = {'id': p['id'], 'yield': r}
                    print(json.dumps(message) + '\\n', file=orig_stdout, flush=True)
                print(json.dumps({'id': p['id']}) + '\\n', file=orig_stdout, flush=True)
            else:
                print(json.dumps({'id': p['id'], 'yield': result}) + '\\n', file=orig_stdout, flush=True)
                print(json.dumps({'id': p['id']}) + '\\n', file=orig_stdout, flush=True)
        except Exception as e:
            if p is not None:
                message = {'id': p['id'], 'error': traceback.format_exception(*sys.exc_info())}
                print(json.dumps(message) + '\\n', file=orig_stdout, flush=True)
            print("Failed nlp method\\n", file=sys.stderr, flush=True)
            traceback.print_exception(*sys.exc_info(), file=sys.stderr)
except KeyboardInterrupt:
    sys.exit(0)
`;
function isSubjectType(type) {
    return Boolean(type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionKind"].class && type.classType === Subject && type.typeArguments);
}
isSubjectType.__type = [
    'Type',
    'type',
    'isSubjectType',
    'P"w!2"!/#'
];
class Controller {
    constructor(moduleNameOrCode, config, logger){
        this.moduleNameOrCode = moduleNameOrCode;
        this.config = config;
        this.logger = logger;
        this.messageId = 0;
        this.subscribers = {};
    }
    ensureProcess() {
        if (this.process) return this.process;
        let python = this.config.python;
        if (!(0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["isAbsolute"])(python)) {
            const venvBin = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$utils$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["findParentPath"])('venv/bin');
            if (venvBin) {
                python = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$path$2c$__cjs$29$__["join"])(venvBin, python);
            }
        }
        let cwd = this.config.cwd;
        this.logger.log(`Start python via ${python} in ${cwd} for ${this.moduleNameOrCode.replace(/\n/g, '\\n').substring(0, 50)}`);
        let load = this.moduleNameOrCode.includes(' ') ? fromCode(this.moduleNameOrCode) : `import ${this.moduleNameOrCode} as module;`;
        if (this.moduleNameOrCode.endsWith('.py')) {
            load = `import sys; sys.path.append('${cwd}'); import ${this.moduleNameOrCode.replace('.py', '')} as module;`;
        }
        const code = hook.replace('{{__load__}}', load);
        // console.log(code);
        this.process = (0, __TURBOPACK__imported__module__$5b$externals$5d2f$__$5b$external$5d$__$28$child_process$2c$__cjs$29$__["spawn"])(python, [
            '-c',
            code
        ], {
            stdio: [
                'pipe',
                'pipe',
                process.stderr
            ],
            cwd: cwd
        });
        const onExit = ()=>{
            var _a;
            (_a = this.process) === null || _a === void 0 ? void 0 : _a.kill();
        };
        process.on('exit', onExit);
        this.process.on('close', ()=>{
            this.process = undefined;
            process.off('exit', onExit);
        });
        const buffer = [];
        const read = __assignType((data)=>{
            buffer.push(data);
            // console.log('read', data.includes('\n'), Buffer.concat(buffer).toString('utf8'));
            if (data.includes('\n'.charCodeAt(0))) {
                const messages = Buffer.concat(buffer).toString('utf8').trim().split('\n');
                for (const message of messages){
                    if (!message.startsWith('{"')) continue;
                    try {
                        const res = JSON.parse(message);
                        const messageId = res.id;
                        if (this.subscribers[messageId]) {
                            this.subscribers[messageId](res);
                        }
                    } catch (error) {
                        console.warn('Could not parse: ' + message);
                    }
                }
                buffer.length = 0;
            }
        }, [
            'data',
            '',
            'P!2!"/"'
        ]);
        this.process.stdout.on('data', read);
        return this.process;
    }
    send(method, args, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.send.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.send.Ω = undefined;
        const pythonProcess = this.ensureProcess();
        const messageId = this.messageId++;
        type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type);
        if (isSubjectType(type)) {
            type = type.typeArguments[0];
        }
        const subject = (Subject.Ω = [
            [
                '"'
            ]
        ], new Subject());
        const deserializer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["deserializeFunction"])(undefined, undefined, type);
        this.subscribers[messageId] = __assignType((data)=>{
            try {
                if (data.ready) {} else if (data.yield) {
                    const v = deserializer(data.yield);
                    subject.next(v);
                } else if (data.error) {
                    delete this.subscribers[messageId];
                    subject.error(new Error(data.error));
                } else {
                    delete this.subscribers[messageId];
                    subject.complete();
                }
            } catch (_a) {}
        }, [
            'data',
            '',
            'P"2!"/"'
        ]);
        pythonProcess.stdin.write(JSON.stringify({
            id: messageId,
            method,
            args
        }) + '\n');
        return subject;
    }
}
Controller.__type = [
    'process',
    'messageId',
    function() {
        return 0;
    },
    ()=>__ΩRpcMessage,
    'data',
    '',
    'subscribers',
    function() {
        return {};
    },
    'moduleNameOrCode',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"],
    'logger',
    'constructor',
    'ensureProcess',
    'method',
    'args',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    ()=>Subject,
    'send',
    'Controller',
    '!3!8\'3">#P\'Pn$2%$/&LM3\'>(P&2);P7*2+;P7,2-;"0.P!0/P&20"F21"o2"238P"74055w6'
];
;
const __ΩPromisifyFn = [
    'T',
    ()=>__ΩParameters,
    'args',
    ()=>__ΩReturnType,
    ()=>Subject,
    '',
    'PromisifyFn',
    'lUe$!Re$!Re$!`RPe#!"`qk\'+QRPde%!p0RPde#!Ph"!7%qk#<QRb!Pe"!o""@2#Pde#!o$"pD/&w\'y'
];
const __ΩRemoteController = [
    'T',
    'args',
    '',
    ()=>__ΩPromisifyFn,
    ()=>Controller,
    'RemoteController',
    'lFe&!e$!fo$"R!RPe%!e#!fP"@2""/#qk#.QRb!PPde#!gN0!P7%Kw&y'
];
;
class PyBridge {
    constructor(config, logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"]([
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConsoleTransport"]()
    ])){
        this.config = config;
        this.logger = logger;
        this.controllers = {};
    }
    close() {
        var _a;
        for (const controller of Object.values(this.controllers)){
            (_a = controller.process) === null || _a === void 0 ? void 0 : _a.kill();
        }
    }
    controller(moduleName, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.controller.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.controller.Ω = undefined;
        if (this.controllers[moduleName]) return this.controllers[moduleName];
        const controller = new Controller(moduleName, this.config, this.logger);
        if (!type) throw new Error('No controller type T given');
        const reflectionClass = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ReflectionClass"].from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type));
        return this.controllers[moduleName] = new Proxy({}, {
            get: __assignType((target, name)=>{
                if (name === 'process') return controller.process;
                return __assignType((...args)=>{
                    const returnType = reflectionClass.getMethod(name).getReturnType();
                    const subject = controller.send(name, args, returnType);
                    return isSubjectType(returnType) ? subject : subject.toPromise();
                }, [
                    'args',
                    '',
                    'P"@2!"/"'
                ]);
            }, [
                'target',
                'name',
                '',
                'P"2!&2""/#'
            ])
        });
    }
}
PyBridge.__type = [
    ()=>__ΩRemoteController,
    'controllers',
    function() {
        return {};
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"],
    'logger',
    ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["Logger"]([
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["ConsoleTransport"]()
        ]),
    'constructor',
    'close',
    'moduleName',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    ()=>__ΩRemoteController,
    'controller',
    'PyBridge',
    'P&"o!"LM3"<>#PP7$2%<P7&2\'<>("0)P"0*P&2+"o,"2-8"o."0/5w0'
];
;
 //# sourceMappingURL=bridge.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/src/module.js [app-ssr] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "PyBridgeModule": (()=>PyBridgeModule)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/app.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-ssr] (ecmascript)");
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
class PyBridgeModule extends (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createModule"])({
    config: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    providers: [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridge"]
    ],
    exports: [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridge"]
    ]
}) {
    process() {
        this.addListener(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["onAppShutdown"].listen(__assignType((event, python)=>{
            // disconnect all open python processes when app shuts down
            python.close();
        }, [
            'event',
            ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridge"],
            'python',
            '',
            'P"2!P7"2#"/$'
        ])));
    }
}
PyBridgeModule.__type = [
    ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["createModule"])({
            config: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
            providers: [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridge"]
            ],
            exports: [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__["PyBridge"]
            ]
        }),
    'process',
    'PyBridgeModule',
    'P7!P"0"5w#'
];
;
 //# sourceMappingURL=module.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/index.js [app-ssr] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/index.js [app-ssr] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/module.js [app-ssr] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$ssr$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/index.js [app-ssr] (ecmascript) <locals>");
}}),
"[project]/node_modules/delayed-stream/lib/delayed_stream.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var Stream = __turbopack_require__("[externals]/ [external] (stream, cjs)").Stream;
var util = __turbopack_require__("[externals]/ [external] (util, cjs)");
module.exports = DelayedStream;
function DelayedStream() {
    this.source = null;
    this.dataSize = 0;
    this.maxDataSize = 1024 * 1024;
    this.pauseStream = true;
    this._maxDataSizeExceeded = false;
    this._released = false;
    this._bufferedEvents = [];
}
util.inherits(DelayedStream, Stream);
DelayedStream.create = function(source, options) {
    var delayedStream = new this();
    options = options || {};
    for(var option in options){
        delayedStream[option] = options[option];
    }
    delayedStream.source = source;
    var realEmit = source.emit;
    source.emit = function() {
        delayedStream._handleEmit(arguments);
        return realEmit.apply(source, arguments);
    };
    source.on('error', function() {});
    if (delayedStream.pauseStream) {
        source.pause();
    }
    return delayedStream;
};
Object.defineProperty(DelayedStream.prototype, 'readable', {
    configurable: true,
    enumerable: true,
    get: function() {
        return this.source.readable;
    }
});
DelayedStream.prototype.setEncoding = function() {
    return this.source.setEncoding.apply(this.source, arguments);
};
DelayedStream.prototype.resume = function() {
    if (!this._released) {
        this.release();
    }
    this.source.resume();
};
DelayedStream.prototype.pause = function() {
    this.source.pause();
};
DelayedStream.prototype.release = function() {
    this._released = true;
    this._bufferedEvents.forEach((function(args) {
        this.emit.apply(this, args);
    }).bind(this));
    this._bufferedEvents = [];
};
DelayedStream.prototype.pipe = function() {
    var r = Stream.prototype.pipe.apply(this, arguments);
    this.resume();
    return r;
};
DelayedStream.prototype._handleEmit = function(args) {
    if (this._released) {
        this.emit.apply(this, args);
        return;
    }
    if (args[0] === 'data') {
        this.dataSize += args[1].length;
        this._checkIfMaxDataSizeExceeded();
    }
    this._bufferedEvents.push(args);
};
DelayedStream.prototype._checkIfMaxDataSizeExceeded = function() {
    if (this._maxDataSizeExceeded) {
        return;
    }
    if (this.dataSize <= this.maxDataSize) {
        return;
    }
    this._maxDataSizeExceeded = true;
    var message = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
    this.emit('error', new Error(message));
};
}}),
"[project]/node_modules/combined-stream/lib/combined_stream.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var util = __turbopack_require__("[externals]/ [external] (util, cjs)");
var Stream = __turbopack_require__("[externals]/ [external] (stream, cjs)").Stream;
var DelayedStream = __turbopack_require__("[project]/node_modules/delayed-stream/lib/delayed_stream.js [app-ssr] (ecmascript)");
module.exports = CombinedStream;
function CombinedStream() {
    this.writable = false;
    this.readable = true;
    this.dataSize = 0;
    this.maxDataSize = 2 * 1024 * 1024;
    this.pauseStreams = true;
    this._released = false;
    this._streams = [];
    this._currentStream = null;
    this._insideLoop = false;
    this._pendingNext = false;
}
util.inherits(CombinedStream, Stream);
CombinedStream.create = function(options) {
    var combinedStream = new this();
    options = options || {};
    for(var option in options){
        combinedStream[option] = options[option];
    }
    return combinedStream;
};
CombinedStream.isStreamLike = function(stream) {
    return typeof stream !== 'function' && typeof stream !== 'string' && typeof stream !== 'boolean' && typeof stream !== 'number' && !Buffer.isBuffer(stream);
};
CombinedStream.prototype.append = function(stream) {
    var isStreamLike = CombinedStream.isStreamLike(stream);
    if (isStreamLike) {
        if (!(stream instanceof DelayedStream)) {
            var newStream = DelayedStream.create(stream, {
                maxDataSize: Infinity,
                pauseStream: this.pauseStreams
            });
            stream.on('data', this._checkDataSize.bind(this));
            stream = newStream;
        }
        this._handleErrors(stream);
        if (this.pauseStreams) {
            stream.pause();
        }
    }
    this._streams.push(stream);
    return this;
};
CombinedStream.prototype.pipe = function(dest, options) {
    Stream.prototype.pipe.call(this, dest, options);
    this.resume();
    return dest;
};
CombinedStream.prototype._getNext = function() {
    this._currentStream = null;
    if (this._insideLoop) {
        this._pendingNext = true;
        return; // defer call
    }
    this._insideLoop = true;
    try {
        do {
            this._pendingNext = false;
            this._realGetNext();
        }while (this._pendingNext)
    } finally{
        this._insideLoop = false;
    }
};
CombinedStream.prototype._realGetNext = function() {
    var stream = this._streams.shift();
    if (typeof stream == 'undefined') {
        this.end();
        return;
    }
    if (typeof stream !== 'function') {
        this._pipeNext(stream);
        return;
    }
    var getStream = stream;
    getStream((function(stream) {
        var isStreamLike = CombinedStream.isStreamLike(stream);
        if (isStreamLike) {
            stream.on('data', this._checkDataSize.bind(this));
            this._handleErrors(stream);
        }
        this._pipeNext(stream);
    }).bind(this));
};
CombinedStream.prototype._pipeNext = function(stream) {
    this._currentStream = stream;
    var isStreamLike = CombinedStream.isStreamLike(stream);
    if (isStreamLike) {
        stream.on('end', this._getNext.bind(this));
        stream.pipe(this, {
            end: false
        });
        return;
    }
    var value = stream;
    this.write(value);
    this._getNext();
};
CombinedStream.prototype._handleErrors = function(stream) {
    var self = this;
    stream.on('error', function(err) {
        self._emitError(err);
    });
};
CombinedStream.prototype.write = function(data) {
    this.emit('data', data);
};
CombinedStream.prototype.pause = function() {
    if (!this.pauseStreams) {
        return;
    }
    if (this.pauseStreams && this._currentStream && typeof this._currentStream.pause == 'function') this._currentStream.pause();
    this.emit('pause');
};
CombinedStream.prototype.resume = function() {
    if (!this._released) {
        this._released = true;
        this.writable = true;
        this._getNext();
    }
    if (this.pauseStreams && this._currentStream && typeof this._currentStream.resume == 'function') this._currentStream.resume();
    this.emit('resume');
};
CombinedStream.prototype.end = function() {
    this._reset();
    this.emit('end');
};
CombinedStream.prototype.destroy = function() {
    this._reset();
    this.emit('close');
};
CombinedStream.prototype._reset = function() {
    this.writable = false;
    this._streams = [];
    this._currentStream = null;
};
CombinedStream.prototype._checkDataSize = function() {
    this._updateDataSize();
    if (this.dataSize <= this.maxDataSize) {
        return;
    }
    var message = 'DelayedStream#maxDataSize of ' + this.maxDataSize + ' bytes exceeded.';
    this._emitError(new Error(message));
};
CombinedStream.prototype._updateDataSize = function() {
    this.dataSize = 0;
    var self = this;
    this._streams.forEach(function(stream) {
        if (!stream.dataSize) {
            return;
        }
        self.dataSize += stream.dataSize;
    });
    if (this._currentStream && this._currentStream.dataSize) {
        this.dataSize += this._currentStream.dataSize;
    }
};
CombinedStream.prototype._emitError = function(err) {
    this._reset();
    this.emit('error', err);
};
}}),
"[project]/node_modules/mime-types/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/*!
 * mime-types
 * Copyright(c) 2014 Jonathan Ong
 * Copyright(c) 2015 Douglas Christopher Wilson
 * MIT Licensed
 */ 'use strict';
/**
 * Module dependencies.
 * @private
 */ var db = __turbopack_require__("[project]/node_modules/mime-db/index.js [app-ssr] (ecmascript)");
var extname = __turbopack_require__("[externals]/ [external] (path, cjs)").extname;
/**
 * Module variables.
 * @private
 */ var EXTRACT_TYPE_REGEXP = /^\s*([^;\s]*)(?:;|\s|$)/;
var TEXT_TYPE_REGEXP = /^text\//i;
/**
 * Module exports.
 * @public
 */ exports.charset = charset;
exports.charsets = {
    lookup: charset
};
exports.contentType = contentType;
exports.extension = extension;
exports.extensions = Object.create(null);
exports.lookup = lookup;
exports.types = Object.create(null);
// Populate the extensions/types maps
populateMaps(exports.extensions, exports.types);
/**
 * Get the default charset for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */ function charset(type) {
    if (!type || typeof type !== 'string') {
        return false;
    }
    // TODO: use media-typer
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    var mime = match && db[match[1].toLowerCase()];
    if (mime && mime.charset) {
        return mime.charset;
    }
    // default text/* to utf-8
    if (match && TEXT_TYPE_REGEXP.test(match[1])) {
        return 'UTF-8';
    }
    return false;
}
/**
 * Create a full Content-Type header given a MIME type or extension.
 *
 * @param {string} str
 * @return {boolean|string}
 */ function contentType(str) {
    // TODO: should this even be in this module?
    if (!str || typeof str !== 'string') {
        return false;
    }
    var mime = str.indexOf('/') === -1 ? exports.lookup(str) : str;
    if (!mime) {
        return false;
    }
    // TODO: use content-type or other module
    if (mime.indexOf('charset') === -1) {
        var charset = exports.charset(mime);
        if (charset) mime += '; charset=' + charset.toLowerCase();
    }
    return mime;
}
/**
 * Get the default extension for a MIME type.
 *
 * @param {string} type
 * @return {boolean|string}
 */ function extension(type) {
    if (!type || typeof type !== 'string') {
        return false;
    }
    // TODO: use media-typer
    var match = EXTRACT_TYPE_REGEXP.exec(type);
    // get extensions
    var exts = match && exports.extensions[match[1].toLowerCase()];
    if (!exts || !exts.length) {
        return false;
    }
    return exts[0];
}
/**
 * Lookup the MIME type for a file path/extension.
 *
 * @param {string} path
 * @return {boolean|string}
 */ function lookup(path) {
    if (!path || typeof path !== 'string') {
        return false;
    }
    // get the extension ("ext" or ".ext" or full path)
    var extension = extname('x.' + path).toLowerCase().substr(1);
    if (!extension) {
        return false;
    }
    return exports.types[extension] || false;
}
/**
 * Populate the extensions and types maps.
 * @private
 */ function populateMaps(extensions, types) {
    // source preference (least -> most)
    var preference = [
        'nginx',
        'apache',
        undefined,
        'iana'
    ];
    Object.keys(db).forEach(function forEachMimeType(type) {
        var mime = db[type];
        var exts = mime.extensions;
        if (!exts || !exts.length) {
            return;
        }
        // mime -> extensions
        extensions[type] = exts;
        // extension -> mime
        for(var i = 0; i < exts.length; i++){
            var extension = exts[i];
            if (types[extension]) {
                var from = preference.indexOf(db[types[extension]].source);
                var to = preference.indexOf(mime.source);
                if (types[extension] !== 'application/octet-stream' && (from > to || from === to && types[extension].substr(0, 12) === 'application/')) {
                    continue;
                }
            }
            // set the extension -> mime
            types[extension] = type;
        }
    });
}
}}),
"[project]/node_modules/asynckit/lib/defer.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
module.exports = defer;
/**
 * Runs provided function on next iteration of the event loop
 *
 * @param {function} fn - function to run
 */ function defer(fn) {
    var nextTick = typeof setImmediate == 'function' ? setImmediate : typeof process == 'object' && typeof process.nextTick == 'function' ? process.nextTick : null;
    if (nextTick) {
        nextTick(fn);
    } else {
        setTimeout(fn, 0);
    }
}
}}),
"[project]/node_modules/asynckit/lib/async.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var defer = __turbopack_require__("[project]/node_modules/asynckit/lib/defer.js [app-ssr] (ecmascript)");
// API
module.exports = async;
/**
 * Runs provided callback asynchronously
 * even if callback itself is not
 *
 * @param   {function} callback - callback to invoke
 * @returns {function} - augmented callback
 */ function async(callback) {
    var isAsync = false;
    // check if async happened
    defer(function() {
        isAsync = true;
    });
    return function async_callback(err, result) {
        if (isAsync) {
            callback(err, result);
        } else {
            defer(function nextTick_callback() {
                callback(err, result);
            });
        }
    };
}
}}),
"[project]/node_modules/asynckit/lib/abort.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
// API
module.exports = abort;
/**
 * Aborts leftover active jobs
 *
 * @param {object} state - current state object
 */ function abort(state) {
    Object.keys(state.jobs).forEach(clean.bind(state));
    // reset leftover jobs
    state.jobs = {};
}
/**
 * Cleans up leftover job by invoking abort function for the provided job id
 *
 * @this  state
 * @param {string|number} key - job id to abort
 */ function clean(key) {
    if (typeof this.jobs[key] == 'function') {
        this.jobs[key]();
    }
}
}}),
"[project]/node_modules/asynckit/lib/iterate.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var async = __turbopack_require__("[project]/node_modules/asynckit/lib/async.js [app-ssr] (ecmascript)"), abort = __turbopack_require__("[project]/node_modules/asynckit/lib/abort.js [app-ssr] (ecmascript)");
// API
module.exports = iterate;
/**
 * Iterates over each job object
 *
 * @param {array|object} list - array or object (named list) to iterate over
 * @param {function} iterator - iterator to run
 * @param {object} state - current job status
 * @param {function} callback - invoked when all elements processed
 */ function iterate(list, iterator, state, callback) {
    // store current index
    var key = state['keyedList'] ? state['keyedList'][state.index] : state.index;
    state.jobs[key] = runJob(iterator, key, list[key], function(error, output) {
        // don't repeat yourself
        // skip secondary callbacks
        if (!(key in state.jobs)) {
            return;
        }
        // clean up jobs
        delete state.jobs[key];
        if (error) {
            // don't process rest of the results
            // stop still active jobs
            // and reset the list
            abort(state);
        } else {
            state.results[key] = output;
        }
        // return salvaged results
        callback(error, state.results);
    });
}
/**
 * Runs iterator over provided job element
 *
 * @param   {function} iterator - iterator to invoke
 * @param   {string|number} key - key/index of the element in the list of jobs
 * @param   {mixed} item - job description
 * @param   {function} callback - invoked after iterator is done with the job
 * @returns {function|mixed} - job abort function or something else
 */ function runJob(iterator, key, item, callback) {
    var aborter;
    // allow shortcut if iterator expects only two arguments
    if (iterator.length == 2) {
        aborter = iterator(item, async(callback));
    } else {
        aborter = iterator(item, key, async(callback));
    }
    return aborter;
}
}}),
"[project]/node_modules/asynckit/lib/state.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
// API
module.exports = state;
/**
 * Creates initial state object
 * for iteration over list
 *
 * @param   {array|object} list - list to iterate over
 * @param   {function|null} sortMethod - function to use for keys sort,
 *                                     or `null` to keep them as is
 * @returns {object} - initial state object
 */ function state(list, sortMethod) {
    var isNamedList = !Array.isArray(list), initState = {
        index: 0,
        keyedList: isNamedList || sortMethod ? Object.keys(list) : null,
        jobs: {},
        results: isNamedList ? {} : [],
        size: isNamedList ? Object.keys(list).length : list.length
    };
    if (sortMethod) {
        // sort array keys based on it's values
        // sort object's keys just on own merit
        initState.keyedList.sort(isNamedList ? sortMethod : function(a, b) {
            return sortMethod(list[a], list[b]);
        });
    }
    return initState;
}
}}),
"[project]/node_modules/asynckit/lib/terminator.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var abort = __turbopack_require__("[project]/node_modules/asynckit/lib/abort.js [app-ssr] (ecmascript)"), async = __turbopack_require__("[project]/node_modules/asynckit/lib/async.js [app-ssr] (ecmascript)");
// API
module.exports = terminator;
/**
 * Terminates jobs in the attached state context
 *
 * @this  AsyncKitState#
 * @param {function} callback - final callback to invoke after termination
 */ function terminator(callback) {
    if (!Object.keys(this.jobs).length) {
        return;
    }
    // fast forward iteration index
    this.index = this.size;
    // abort jobs
    abort(this);
    // send back results we have so far
    async(callback)(null, this.results);
}
}}),
"[project]/node_modules/asynckit/parallel.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var iterate = __turbopack_require__("[project]/node_modules/asynckit/lib/iterate.js [app-ssr] (ecmascript)"), initState = __turbopack_require__("[project]/node_modules/asynckit/lib/state.js [app-ssr] (ecmascript)"), terminator = __turbopack_require__("[project]/node_modules/asynckit/lib/terminator.js [app-ssr] (ecmascript)");
// Public API
module.exports = parallel;
/**
 * Runs iterator over provided array elements in parallel
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */ function parallel(list, iterator, callback) {
    var state = initState(list);
    while(state.index < (state['keyedList'] || list).length){
        iterate(list, iterator, state, function(error, result) {
            if (error) {
                callback(error, result);
                return;
            }
            // looks like it's the last one
            if (Object.keys(state.jobs).length === 0) {
                callback(null, state.results);
                return;
            }
        });
        state.index++;
    }
    return terminator.bind(state, callback);
}
}}),
"[project]/node_modules/asynckit/serialOrdered.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var iterate = __turbopack_require__("[project]/node_modules/asynckit/lib/iterate.js [app-ssr] (ecmascript)"), initState = __turbopack_require__("[project]/node_modules/asynckit/lib/state.js [app-ssr] (ecmascript)"), terminator = __turbopack_require__("[project]/node_modules/asynckit/lib/terminator.js [app-ssr] (ecmascript)");
// Public API
module.exports = serialOrdered;
// sorting helpers
module.exports.ascending = ascending;
module.exports.descending = descending;
/**
 * Runs iterator over provided sorted array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} sortMethod - custom sort function
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */ function serialOrdered(list, iterator, sortMethod, callback) {
    var state = initState(list, sortMethod);
    iterate(list, iterator, state, function iteratorHandler(error, result) {
        if (error) {
            callback(error, result);
            return;
        }
        state.index++;
        // are we there yet?
        if (state.index < (state['keyedList'] || list).length) {
            iterate(list, iterator, state, iteratorHandler);
            return;
        }
        // done here
        callback(null, state.results);
    });
    return terminator.bind(state, callback);
}
/*
 * -- Sort methods
 */ /**
 * sort helper to sort array elements in ascending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */ function ascending(a, b) {
    return a < b ? -1 : a > b ? 1 : 0;
}
/**
 * sort helper to sort array elements in descending order
 *
 * @param   {mixed} a - an item to compare
 * @param   {mixed} b - an item to compare
 * @returns {number} - comparison result
 */ function descending(a, b) {
    return -1 * ascending(a, b);
}
}}),
"[project]/node_modules/asynckit/serial.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var serialOrdered = __turbopack_require__("[project]/node_modules/asynckit/serialOrdered.js [app-ssr] (ecmascript)");
// Public API
module.exports = serial;
/**
 * Runs iterator over provided array elements in series
 *
 * @param   {array|object} list - array or object (named list) to iterate over
 * @param   {function} iterator - iterator to run
 * @param   {function} callback - invoked when all elements processed
 * @returns {function} - jobs terminator
 */ function serial(list, iterator, callback) {
    return serialOrdered(list, iterator, null, callback);
}
}}),
"[project]/node_modules/asynckit/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
module.exports = {
    parallel: __turbopack_require__("[project]/node_modules/asynckit/parallel.js [app-ssr] (ecmascript)"),
    serial: __turbopack_require__("[project]/node_modules/asynckit/serial.js [app-ssr] (ecmascript)"),
    serialOrdered: __turbopack_require__("[project]/node_modules/asynckit/serialOrdered.js [app-ssr] (ecmascript)")
};
}}),
"[project]/node_modules/form-data/lib/populate.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
// populates missing values
module.exports = function(dst, src) {
    Object.keys(src).forEach(function(prop) {
        dst[prop] = dst[prop] || src[prop];
    });
    return dst;
};
}}),
"[project]/node_modules/form-data/lib/form_data.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var CombinedStream = __turbopack_require__("[project]/node_modules/combined-stream/lib/combined_stream.js [app-ssr] (ecmascript)");
var util = __turbopack_require__("[externals]/ [external] (util, cjs)");
var path = __turbopack_require__("[externals]/ [external] (path, cjs)");
var http = __turbopack_require__("[externals]/ [external] (http, cjs)");
var https = __turbopack_require__("[externals]/ [external] (https, cjs)");
var parseUrl = __turbopack_require__("[externals]/ [external] (url, cjs)").parse;
var fs = __turbopack_require__("[externals]/ [external] (fs, cjs)");
var Stream = __turbopack_require__("[externals]/ [external] (stream, cjs)").Stream;
var mime = __turbopack_require__("[project]/node_modules/mime-types/index.js [app-ssr] (ecmascript)");
var asynckit = __turbopack_require__("[project]/node_modules/asynckit/index.js [app-ssr] (ecmascript)");
var populate = __turbopack_require__("[project]/node_modules/form-data/lib/populate.js [app-ssr] (ecmascript)");
// Public API
module.exports = FormData;
// make it a Stream
util.inherits(FormData, CombinedStream);
/**
 * Create readable "multipart/form-data" streams.
 * Can be used to submit forms
 * and file uploads to other web applications.
 *
 * @constructor
 * @param {Object} options - Properties to be added/overriden for FormData and CombinedStream
 */ function FormData(options) {
    if (!(this instanceof FormData)) {
        return new FormData(options);
    }
    this._overheadLength = 0;
    this._valueLength = 0;
    this._valuesToMeasure = [];
    CombinedStream.call(this);
    options = options || {};
    for(var option in options){
        this[option] = options[option];
    }
}
FormData.LINE_BREAK = '\r\n';
FormData.DEFAULT_CONTENT_TYPE = 'application/octet-stream';
FormData.prototype.append = function(field, value, options) {
    options = options || {};
    // allow filename as single option
    if (typeof options == 'string') {
        options = {
            filename: options
        };
    }
    var append = CombinedStream.prototype.append.bind(this);
    // all that streamy business can't handle numbers
    if (typeof value == 'number') {
        value = '' + value;
    }
    // https://github.com/felixge/node-form-data/issues/38
    if (Array.isArray(value)) {
        // Please convert your array into string
        // the way web server expects it
        this._error(new Error('Arrays are not supported.'));
        return;
    }
    var header = this._multiPartHeader(field, value, options);
    var footer = this._multiPartFooter();
    append(header);
    append(value);
    append(footer);
    // pass along options.knownLength
    this._trackLength(header, value, options);
};
FormData.prototype._trackLength = function(header, value, options) {
    var valueLength = 0;
    // used w/ getLengthSync(), when length is known.
    // e.g. for streaming directly from a remote server,
    // w/ a known file a size, and not wanting to wait for
    // incoming file to finish to get its size.
    if (options.knownLength != null) {
        valueLength += +options.knownLength;
    } else if (Buffer.isBuffer(value)) {
        valueLength = value.length;
    } else if (typeof value === 'string') {
        valueLength = Buffer.byteLength(value);
    }
    this._valueLength += valueLength;
    // @check why add CRLF? does this account for custom/multiple CRLFs?
    this._overheadLength += Buffer.byteLength(header) + FormData.LINE_BREAK.length;
    // empty or either doesn't have path or not an http response or not a stream
    if (!value || !value.path && !(value.readable && value.hasOwnProperty('httpVersion')) && !(value instanceof Stream)) {
        return;
    }
    // no need to bother with the length
    if (!options.knownLength) {
        this._valuesToMeasure.push(value);
    }
};
FormData.prototype._lengthRetriever = function(value, callback) {
    if (value.hasOwnProperty('fd')) {
        // take read range into a account
        // `end` = Infinity –> read file till the end
        //
        // TODO: Looks like there is bug in Node fs.createReadStream
        // it doesn't respect `end` options without `start` options
        // Fix it when node fixes it.
        // https://github.com/joyent/node/issues/7819
        if (value.end != undefined && value.end != Infinity && value.start != undefined) {
            // when end specified
            // no need to calculate range
            // inclusive, starts with 0
            callback(null, value.end + 1 - (value.start ? value.start : 0));
        // not that fast snoopy
        } else {
            // still need to fetch file size from fs
            fs.stat(value.path, function(err, stat) {
                var fileSize;
                if (err) {
                    callback(err);
                    return;
                }
                // update final size based on the range options
                fileSize = stat.size - (value.start ? value.start : 0);
                callback(null, fileSize);
            });
        }
    // or http response
    } else if (value.hasOwnProperty('httpVersion')) {
        callback(null, +value.headers['content-length']);
    // or request stream http://github.com/mikeal/request
    } else if (value.hasOwnProperty('httpModule')) {
        // wait till response come back
        value.on('response', function(response) {
            value.pause();
            callback(null, +response.headers['content-length']);
        });
        value.resume();
    // something else
    } else {
        callback('Unknown stream');
    }
};
FormData.prototype._multiPartHeader = function(field, value, options) {
    // custom header specified (as string)?
    // it becomes responsible for boundary
    // (e.g. to handle extra CRLFs on .NET servers)
    if (typeof options.header == 'string') {
        return options.header;
    }
    var contentDisposition = this._getContentDisposition(value, options);
    var contentType = this._getContentType(value, options);
    var contents = '';
    var headers = {
        // add custom disposition as third element or keep it two elements if not
        'Content-Disposition': [
            'form-data',
            'name="' + field + '"'
        ].concat(contentDisposition || []),
        // if no content type. allow it to be empty array
        'Content-Type': [].concat(contentType || [])
    };
    // allow custom headers.
    if (typeof options.header == 'object') {
        populate(headers, options.header);
    }
    var header;
    for(var prop in headers){
        if (!headers.hasOwnProperty(prop)) continue;
        header = headers[prop];
        // skip nullish headers.
        if (header == null) {
            continue;
        }
        // convert all headers to arrays.
        if (!Array.isArray(header)) {
            header = [
                header
            ];
        }
        // add non-empty headers.
        if (header.length) {
            contents += prop + ': ' + header.join('; ') + FormData.LINE_BREAK;
        }
    }
    return '--' + this.getBoundary() + FormData.LINE_BREAK + contents + FormData.LINE_BREAK;
};
FormData.prototype._getContentDisposition = function(value, options) {
    var filename, contentDisposition;
    if (typeof options.filepath === 'string') {
        // custom filepath for relative paths
        filename = path.normalize(options.filepath).replace(/\\/g, '/');
    } else if (options.filename || value.name || value.path) {
        // custom filename take precedence
        // formidable and the browser add a name property
        // fs- and request- streams have path property
        filename = path.basename(options.filename || value.name || value.path);
    } else if (value.readable && value.hasOwnProperty('httpVersion')) {
        // or try http response
        filename = path.basename(value.client._httpMessage.path || '');
    }
    if (filename) {
        contentDisposition = 'filename="' + filename + '"';
    }
    return contentDisposition;
};
FormData.prototype._getContentType = function(value, options) {
    // use custom content-type above all
    var contentType = options.contentType;
    // or try `name` from formidable, browser
    if (!contentType && value.name) {
        contentType = mime.lookup(value.name);
    }
    // or try `path` from fs-, request- streams
    if (!contentType && value.path) {
        contentType = mime.lookup(value.path);
    }
    // or if it's http-reponse
    if (!contentType && value.readable && value.hasOwnProperty('httpVersion')) {
        contentType = value.headers['content-type'];
    }
    // or guess it from the filepath or filename
    if (!contentType && (options.filepath || options.filename)) {
        contentType = mime.lookup(options.filepath || options.filename);
    }
    // fallback to the default content type if `value` is not simple value
    if (!contentType && typeof value == 'object') {
        contentType = FormData.DEFAULT_CONTENT_TYPE;
    }
    return contentType;
};
FormData.prototype._multiPartFooter = function() {
    return (function(next) {
        var footer = FormData.LINE_BREAK;
        var lastPart = this._streams.length === 0;
        if (lastPart) {
            footer += this._lastBoundary();
        }
        next(footer);
    }).bind(this);
};
FormData.prototype._lastBoundary = function() {
    return '--' + this.getBoundary() + '--' + FormData.LINE_BREAK;
};
FormData.prototype.getHeaders = function(userHeaders) {
    var header;
    var formHeaders = {
        'content-type': 'multipart/form-data; boundary=' + this.getBoundary()
    };
    for(header in userHeaders){
        if (userHeaders.hasOwnProperty(header)) {
            formHeaders[header.toLowerCase()] = userHeaders[header];
        }
    }
    return formHeaders;
};
FormData.prototype.setBoundary = function(boundary) {
    this._boundary = boundary;
};
FormData.prototype.getBoundary = function() {
    if (!this._boundary) {
        this._generateBoundary();
    }
    return this._boundary;
};
FormData.prototype.getBuffer = function() {
    var dataBuffer = new Buffer.alloc(0);
    var boundary = this.getBoundary();
    // Create the form content. Add Line breaks to the end of data.
    for(var i = 0, len = this._streams.length; i < len; i++){
        if (typeof this._streams[i] !== 'function') {
            // Add content to the buffer.
            if (Buffer.isBuffer(this._streams[i])) {
                dataBuffer = Buffer.concat([
                    dataBuffer,
                    this._streams[i]
                ]);
            } else {
                dataBuffer = Buffer.concat([
                    dataBuffer,
                    Buffer.from(this._streams[i])
                ]);
            }
            // Add break after content.
            if (typeof this._streams[i] !== 'string' || this._streams[i].substring(2, boundary.length + 2) !== boundary) {
                dataBuffer = Buffer.concat([
                    dataBuffer,
                    Buffer.from(FormData.LINE_BREAK)
                ]);
            }
        }
    }
    // Add the footer and return the Buffer object.
    return Buffer.concat([
        dataBuffer,
        Buffer.from(this._lastBoundary())
    ]);
};
FormData.prototype._generateBoundary = function() {
    // This generates a 50 character boundary similar to those used by Firefox.
    // They are optimized for boyer-moore parsing.
    var boundary = '--------------------------';
    for(var i = 0; i < 24; i++){
        boundary += Math.floor(Math.random() * 10).toString(16);
    }
    this._boundary = boundary;
};
// Note: getLengthSync DOESN'T calculate streams length
// As workaround one can calculate file size manually
// and add it as knownLength option
FormData.prototype.getLengthSync = function() {
    var knownLength = this._overheadLength + this._valueLength;
    // Don't get confused, there are 3 "internal" streams for each keyval pair
    // so it basically checks if there is any value added to the form
    if (this._streams.length) {
        knownLength += this._lastBoundary().length;
    }
    // https://github.com/form-data/form-data/issues/40
    if (!this.hasKnownLength()) {
        // Some async length retrievers are present
        // therefore synchronous length calculation is false.
        // Please use getLength(callback) to get proper length
        this._error(new Error('Cannot calculate proper length in synchronous way.'));
    }
    return knownLength;
};
// Public API to check if length of added values is known
// https://github.com/form-data/form-data/issues/196
// https://github.com/form-data/form-data/issues/262
FormData.prototype.hasKnownLength = function() {
    var hasKnownLength = true;
    if (this._valuesToMeasure.length) {
        hasKnownLength = false;
    }
    return hasKnownLength;
};
FormData.prototype.getLength = function(cb) {
    var knownLength = this._overheadLength + this._valueLength;
    if (this._streams.length) {
        knownLength += this._lastBoundary().length;
    }
    if (!this._valuesToMeasure.length) {
        process.nextTick(cb.bind(this, null, knownLength));
        return;
    }
    asynckit.parallel(this._valuesToMeasure, this._lengthRetriever, function(err, values) {
        if (err) {
            cb(err);
            return;
        }
        values.forEach(function(length) {
            knownLength += length;
        });
        cb(null, knownLength);
    });
};
FormData.prototype.submit = function(params, cb) {
    var request, options, defaults = {
        method: 'post'
    };
    // parse provided url if it's string
    // or treat it as options object
    if (typeof params == 'string') {
        params = parseUrl(params);
        options = populate({
            port: params.port,
            path: params.pathname,
            host: params.hostname,
            protocol: params.protocol
        }, defaults);
    // use custom params
    } else {
        options = populate(params, defaults);
        // if no port provided use default one
        if (!options.port) {
            options.port = options.protocol == 'https:' ? 443 : 80;
        }
    }
    // put that good code in getHeaders to some use
    options.headers = this.getHeaders(params.headers);
    // https if specified, fallback to http in any other case
    if (options.protocol == 'https:') {
        request = https.request(options);
    } else {
        request = http.request(options);
    }
    // get content length and fire away
    this.getLength((function(err, length) {
        if (err && err !== 'Unknown stream') {
            this._error(err);
            return;
        }
        // add content length
        if (length) {
            request.setHeader('Content-Length', length);
        }
        this.pipe(request);
        if (cb) {
            var onResponse;
            var callback = function(error, responce) {
                request.removeListener('error', callback);
                request.removeListener('response', onResponse);
                return cb.call(this, error, responce);
            };
            onResponse = callback.bind(this, null);
            request.on('error', callback);
            request.on('response', onResponse);
        }
    }).bind(this));
    return request;
};
FormData.prototype._error = function(err) {
    if (!this.error) {
        this.error = err;
        this.pause();
        this.emit('error', err);
    }
};
FormData.prototype.toString = function() {
    return '[object FormData]';
};
}}),
"[project]/node_modules/proxy-from-env/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
var parseUrl = __turbopack_require__("[externals]/ [external] (url, cjs)").parse;
var DEFAULT_PORTS = {
    ftp: 21,
    gopher: 70,
    http: 80,
    https: 443,
    ws: 80,
    wss: 443
};
var stringEndsWith = String.prototype.endsWith || function(s) {
    return s.length <= this.length && this.indexOf(s, this.length - s.length) !== -1;
};
/**
 * @param {string|object} url - The URL, or the result from url.parse.
 * @return {string} The URL of the proxy that should handle the request to the
 *  given URL. If no proxy is set, this will be an empty string.
 */ function getProxyForUrl(url) {
    var parsedUrl = typeof url === 'string' ? parseUrl(url) : url || {};
    var proto = parsedUrl.protocol;
    var hostname = parsedUrl.host;
    var port = parsedUrl.port;
    if (typeof hostname !== 'string' || !hostname || typeof proto !== 'string') {
        return ''; // Don't proxy URLs without a valid scheme or host.
    }
    proto = proto.split(':', 1)[0];
    // Stripping ports in this way instead of using parsedUrl.hostname to make
    // sure that the brackets around IPv6 addresses are kept.
    hostname = hostname.replace(/:\d*$/, '');
    port = parseInt(port) || DEFAULT_PORTS[proto] || 0;
    if (!shouldProxy(hostname, port)) {
        return ''; // Don't proxy URLs that match NO_PROXY.
    }
    var proxy = getEnv('npm_config_' + proto + '_proxy') || getEnv(proto + '_proxy') || getEnv('npm_config_proxy') || getEnv('all_proxy');
    if (proxy && proxy.indexOf('://') === -1) {
        // Missing scheme in proxy, default to the requested URL's scheme.
        proxy = proto + '://' + proxy;
    }
    return proxy;
}
/**
 * Determines whether a given URL should be proxied.
 *
 * @param {string} hostname - The host name of the URL.
 * @param {number} port - The effective port of the URL.
 * @returns {boolean} Whether the given URL should be proxied.
 * @private
 */ function shouldProxy(hostname, port) {
    var NO_PROXY = (getEnv('npm_config_no_proxy') || getEnv('no_proxy')).toLowerCase();
    if (!NO_PROXY) {
        return true; // Always proxy if NO_PROXY is not set.
    }
    if (NO_PROXY === '*') {
        return false; // Never proxy if wildcard is set.
    }
    return NO_PROXY.split(/[,\s]/).every(function(proxy) {
        if (!proxy) {
            return true; // Skip zero-length hosts.
        }
        var parsedProxy = proxy.match(/^(.+):(\d+)$/);
        var parsedProxyHostname = parsedProxy ? parsedProxy[1] : proxy;
        var parsedProxyPort = parsedProxy ? parseInt(parsedProxy[2]) : 0;
        if (parsedProxyPort && parsedProxyPort !== port) {
            return true; // Skip if ports don't match.
        }
        if (!/^[.*]/.test(parsedProxyHostname)) {
            // No wildcards, so stop proxying if there is an exact match.
            return hostname !== parsedProxyHostname;
        }
        if (parsedProxyHostname.charAt(0) === '*') {
            // Remove leading wildcard.
            parsedProxyHostname = parsedProxyHostname.slice(1);
        }
        // Stop proxying if the hostname ends with the no_proxy host.
        return !stringEndsWith.call(hostname, parsedProxyHostname);
    });
}
/**
 * Get the value for an environment variable.
 *
 * @param {string} key - The name of the environment variable.
 * @return {string} The value of the environment variable.
 * @private
 */ function getEnv(key) {
    return process.env[key.toLowerCase()] || process.env[key.toUpperCase()] || '';
}
exports.getProxyForUrl = getProxyForUrl;
}}),
"[project]/node_modules/ms/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Helpers.
 */ var s = 1000;
var m = s * 60;
var h = m * 60;
var d = h * 24;
var w = d * 7;
var y = d * 365.25;
/**
 * Parse or format the given `val`.
 *
 * Options:
 *
 *  - `long` verbose formatting [false]
 *
 * @param {String|Number} val
 * @param {Object} [options]
 * @throws {Error} throw an error if val is not a non-empty string or a number
 * @return {String|Number}
 * @api public
 */ module.exports = function(val, options) {
    options = options || {};
    var type = typeof val;
    if (type === 'string' && val.length > 0) {
        return parse(val);
    } else if (type === 'number' && isFinite(val)) {
        return options.long ? fmtLong(val) : fmtShort(val);
    }
    throw new Error('val is not a non-empty string or a valid number. val=' + JSON.stringify(val));
};
/**
 * Parse the given `str` and return milliseconds.
 *
 * @param {String} str
 * @return {Number}
 * @api private
 */ function parse(str) {
    str = String(str);
    if (str.length > 100) {
        return;
    }
    var match = /^(-?(?:\d+)?\.?\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(str);
    if (!match) {
        return;
    }
    var n = parseFloat(match[1]);
    var type = (match[2] || 'ms').toLowerCase();
    switch(type){
        case 'years':
        case 'year':
        case 'yrs':
        case 'yr':
        case 'y':
            return n * y;
        case 'weeks':
        case 'week':
        case 'w':
            return n * w;
        case 'days':
        case 'day':
        case 'd':
            return n * d;
        case 'hours':
        case 'hour':
        case 'hrs':
        case 'hr':
        case 'h':
            return n * h;
        case 'minutes':
        case 'minute':
        case 'mins':
        case 'min':
        case 'm':
            return n * m;
        case 'seconds':
        case 'second':
        case 'secs':
        case 'sec':
        case 's':
            return n * s;
        case 'milliseconds':
        case 'millisecond':
        case 'msecs':
        case 'msec':
        case 'ms':
            return n;
        default:
            return undefined;
    }
}
/**
 * Short format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */ function fmtShort(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d) {
        return Math.round(ms / d) + 'd';
    }
    if (msAbs >= h) {
        return Math.round(ms / h) + 'h';
    }
    if (msAbs >= m) {
        return Math.round(ms / m) + 'm';
    }
    if (msAbs >= s) {
        return Math.round(ms / s) + 's';
    }
    return ms + 'ms';
}
/**
 * Long format for `ms`.
 *
 * @param {Number} ms
 * @return {String}
 * @api private
 */ function fmtLong(ms) {
    var msAbs = Math.abs(ms);
    if (msAbs >= d) {
        return plural(ms, msAbs, d, 'day');
    }
    if (msAbs >= h) {
        return plural(ms, msAbs, h, 'hour');
    }
    if (msAbs >= m) {
        return plural(ms, msAbs, m, 'minute');
    }
    if (msAbs >= s) {
        return plural(ms, msAbs, s, 'second');
    }
    return ms + ' ms';
}
/**
 * Pluralization helper.
 */ function plural(ms, msAbs, n, name) {
    var isPlural = msAbs >= n * 1.5;
    return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');
}
}}),
"[project]/node_modules/debug/src/common.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * This is the common logic for both the Node.js and web browser
 * implementations of `debug()`.
 */ function setup(env) {
    createDebug.debug = createDebug;
    createDebug.default = createDebug;
    createDebug.coerce = coerce;
    createDebug.disable = disable;
    createDebug.enable = enable;
    createDebug.enabled = enabled;
    createDebug.humanize = __turbopack_require__("[project]/node_modules/ms/index.js [app-ssr] (ecmascript)");
    createDebug.destroy = destroy;
    Object.keys(env).forEach((key)=>{
        createDebug[key] = env[key];
    });
    /**
	* The currently active debug mode names, and names to skip.
	*/ createDebug.names = [];
    createDebug.skips = [];
    /**
	* Map of special "%n" handling functions, for the debug "format" argument.
	*
	* Valid key names are a single, lower or upper-case letter, i.e. "n" and "N".
	*/ createDebug.formatters = {};
    /**
	* Selects a color for a debug namespace
	* @param {String} namespace The namespace string for the debug instance to be colored
	* @return {Number|String} An ANSI color code for the given namespace
	* @api private
	*/ function selectColor(namespace) {
        let hash = 0;
        for(let i = 0; i < namespace.length; i++){
            hash = (hash << 5) - hash + namespace.charCodeAt(i);
            hash |= 0; // Convert to 32bit integer
        }
        return createDebug.colors[Math.abs(hash) % createDebug.colors.length];
    }
    createDebug.selectColor = selectColor;
    /**
	* Create a debugger with the given `namespace`.
	*
	* @param {String} namespace
	* @return {Function}
	* @api public
	*/ function createDebug(namespace) {
        let prevTime;
        let enableOverride = null;
        let namespacesCache;
        let enabledCache;
        function debug(...args) {
            // Disabled?
            if (!debug.enabled) {
                return;
            }
            const self = debug;
            // Set `diff` timestamp
            const curr = Number(new Date());
            const ms = curr - (prevTime || curr);
            self.diff = ms;
            self.prev = prevTime;
            self.curr = curr;
            prevTime = curr;
            args[0] = createDebug.coerce(args[0]);
            if (typeof args[0] !== 'string') {
                // Anything else let's inspect with %O
                args.unshift('%O');
            }
            // Apply any `formatters` transformations
            let index = 0;
            args[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format)=>{
                // If we encounter an escaped % then don't increase the array index
                if (match === '%%') {
                    return '%';
                }
                index++;
                const formatter = createDebug.formatters[format];
                if (typeof formatter === 'function') {
                    const val = args[index];
                    match = formatter.call(self, val);
                    // Now we need to remove `args[index]` since it's inlined in the `format`
                    args.splice(index, 1);
                    index--;
                }
                return match;
            });
            // Apply env-specific formatting (colors, etc.)
            createDebug.formatArgs.call(self, args);
            const logFn = self.log || createDebug.log;
            logFn.apply(self, args);
        }
        debug.namespace = namespace;
        debug.useColors = createDebug.useColors();
        debug.color = createDebug.selectColor(namespace);
        debug.extend = extend;
        debug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.
        Object.defineProperty(debug, 'enabled', {
            enumerable: true,
            configurable: false,
            get: ()=>{
                if (enableOverride !== null) {
                    return enableOverride;
                }
                if (namespacesCache !== createDebug.namespaces) {
                    namespacesCache = createDebug.namespaces;
                    enabledCache = createDebug.enabled(namespace);
                }
                return enabledCache;
            },
            set: (v)=>{
                enableOverride = v;
            }
        });
        // Env-specific initialization logic for debug instances
        if (typeof createDebug.init === 'function') {
            createDebug.init(debug);
        }
        return debug;
    }
    function extend(namespace, delimiter) {
        const newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);
        newDebug.log = this.log;
        return newDebug;
    }
    /**
	* Enables a debug mode by namespaces. This can include modes
	* separated by a colon and wildcards.
	*
	* @param {String} namespaces
	* @api public
	*/ function enable(namespaces) {
        createDebug.save(namespaces);
        createDebug.namespaces = namespaces;
        createDebug.names = [];
        createDebug.skips = [];
        let i;
        const split = (typeof namespaces === 'string' ? namespaces : '').split(/[\s,]+/);
        const len = split.length;
        for(i = 0; i < len; i++){
            if (!split[i]) {
                continue;
            }
            namespaces = split[i].replace(/\*/g, '.*?');
            if (namespaces[0] === '-') {
                createDebug.skips.push(new RegExp('^' + namespaces.slice(1) + '$'));
            } else {
                createDebug.names.push(new RegExp('^' + namespaces + '$'));
            }
        }
    }
    /**
	* Disable debug output.
	*
	* @return {String} namespaces
	* @api public
	*/ function disable() {
        const namespaces = [
            ...createDebug.names.map(toNamespace),
            ...createDebug.skips.map(toNamespace).map((namespace)=>'-' + namespace)
        ].join(',');
        createDebug.enable('');
        return namespaces;
    }
    /**
	* Returns true if the given mode name is enabled, false otherwise.
	*
	* @param {String} name
	* @return {Boolean}
	* @api public
	*/ function enabled(name) {
        if (name[name.length - 1] === '*') {
            return true;
        }
        let i;
        let len;
        for(i = 0, len = createDebug.skips.length; i < len; i++){
            if (createDebug.skips[i].test(name)) {
                return false;
            }
        }
        for(i = 0, len = createDebug.names.length; i < len; i++){
            if (createDebug.names[i].test(name)) {
                return true;
            }
        }
        return false;
    }
    /**
	* Convert regexp to namespace
	*
	* @param {RegExp} regxep
	* @return {String} namespace
	* @api private
	*/ function toNamespace(regexp) {
        return regexp.toString().substring(2, regexp.toString().length - 2).replace(/\.\*\?$/, '*');
    }
    /**
	* Coerce `val`.
	*
	* @param {Mixed} val
	* @return {Mixed}
	* @api private
	*/ function coerce(val) {
        if (val instanceof Error) {
            return val.stack || val.message;
        }
        return val;
    }
    /**
	* XXX DO NOT USE. This is a temporary stub function.
	* XXX It WILL be removed in the next major release.
	*/ function destroy() {
        console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
    }
    createDebug.enable(createDebug.load());
    return createDebug;
}
module.exports = setup;
}}),
"[project]/node_modules/debug/src/node.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Module dependencies.
 */ const tty = __turbopack_require__("[externals]/ [external] (tty, cjs)");
const util = __turbopack_require__("[externals]/ [external] (util, cjs)");
/**
 * This is the Node.js implementation of `debug()`.
 */ exports.init = init;
exports.log = log;
exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.destroy = util.deprecate(()=>{}, 'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
/**
 * Colors.
 */ exports.colors = [
    6,
    2,
    3,
    4,
    5,
    1
];
try {
    // Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)
    // eslint-disable-next-line import/no-extraneous-dependencies
    const supportsColor = __turbopack_require__("[project]/node_modules/supports-color/index.js [app-ssr] (ecmascript)");
    if (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {
        exports.colors = [
            20,
            21,
            26,
            27,
            32,
            33,
            38,
            39,
            40,
            41,
            42,
            43,
            44,
            45,
            56,
            57,
            62,
            63,
            68,
            69,
            74,
            75,
            76,
            77,
            78,
            79,
            80,
            81,
            92,
            93,
            98,
            99,
            112,
            113,
            128,
            129,
            134,
            135,
            148,
            149,
            160,
            161,
            162,
            163,
            164,
            165,
            166,
            167,
            168,
            169,
            170,
            171,
            172,
            173,
            178,
            179,
            184,
            185,
            196,
            197,
            198,
            199,
            200,
            201,
            202,
            203,
            204,
            205,
            206,
            207,
            208,
            209,
            214,
            215,
            220,
            221
        ];
    }
} catch (error) {
// Swallow - we only care if `supports-color` is available; it doesn't have to be.
}
/**
 * Build up the default `inspectOpts` object from the environment variables.
 *
 *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js
 */ exports.inspectOpts = Object.keys(process.env).filter((key)=>{
    return /^debug_/i.test(key);
}).reduce((obj, key)=>{
    // Camel-case
    const prop = key.substring(6).toLowerCase().replace(/_([a-z])/g, (_, k)=>{
        return k.toUpperCase();
    });
    // Coerce string value into JS value
    let val = process.env[key];
    if (/^(yes|on|true|enabled)$/i.test(val)) {
        val = true;
    } else if (/^(no|off|false|disabled)$/i.test(val)) {
        val = false;
    } else if (val === 'null') {
        val = null;
    } else {
        val = Number(val);
    }
    obj[prop] = val;
    return obj;
}, {});
/**
 * Is stdout a TTY? Colored output is enabled when `true`.
 */ function useColors() {
    return 'colors' in exports.inspectOpts ? Boolean(exports.inspectOpts.colors) : tty.isatty(process.stderr.fd);
}
/**
 * Adds ANSI color escape codes if enabled.
 *
 * @api public
 */ function formatArgs(args) {
    const { namespace: name, useColors } = this;
    if (useColors) {
        const c = this.color;
        const colorCode = '\u001B[3' + (c < 8 ? c : '8;5;' + c);
        const prefix = `  ${colorCode};1m${name} \u001B[0m`;
        args[0] = prefix + args[0].split('\n').join('\n' + prefix);
        args.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\u001B[0m');
    } else {
        args[0] = getDate() + name + ' ' + args[0];
    }
}
function getDate() {
    if (exports.inspectOpts.hideDate) {
        return '';
    }
    return new Date().toISOString() + ' ';
}
/**
 * Invokes `util.formatWithOptions()` with the specified arguments and writes to stderr.
 */ function log(...args) {
    return process.stderr.write(util.formatWithOptions(exports.inspectOpts, ...args) + '\n');
}
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */ function save(namespaces) {
    if (namespaces) {
        process.env.DEBUG = namespaces;
    } else {
        // If you set a process.env field to null or undefined, it gets cast to the
        // string 'null' or 'undefined'. Just delete instead.
        delete process.env.DEBUG;
    }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */ function load() {
    return process.env.DEBUG;
}
/**
 * Init logic for `debug` instances.
 *
 * Create a new `inspectOpts` object in case `useColors` is set
 * differently for a particular `debug` instance.
 */ function init(debug) {
    debug.inspectOpts = {};
    const keys = Object.keys(exports.inspectOpts);
    for(let i = 0; i < keys.length; i++){
        debug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];
    }
}
module.exports = __turbopack_require__("[project]/node_modules/debug/src/common.js [app-ssr] (ecmascript)")(exports);
const { formatters } = module.exports;
/**
 * Map %o to `util.inspect()`, all on a single line.
 */ formatters.o = function(v) {
    this.inspectOpts.colors = this.useColors;
    return util.inspect(v, this.inspectOpts).split('\n').map((str)=>str.trim()).join(' ');
};
/**
 * Map %O to `util.inspect()`, allowing multiple lines if needed.
 */ formatters.O = function(v) {
    this.inspectOpts.colors = this.useColors;
    return util.inspect(v, this.inspectOpts);
};
}}),
"[project]/node_modules/debug/src/browser.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/* eslint-env browser */ /**
 * This is the web browser implementation of `debug()`.
 */ exports.formatArgs = formatArgs;
exports.save = save;
exports.load = load;
exports.useColors = useColors;
exports.storage = localstorage();
exports.destroy = (()=>{
    let warned = false;
    return ()=>{
        if (!warned) {
            warned = true;
            console.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');
        }
    };
})();
/**
 * Colors.
 */ exports.colors = [
    '#0000CC',
    '#0000FF',
    '#0033CC',
    '#0033FF',
    '#0066CC',
    '#0066FF',
    '#0099CC',
    '#0099FF',
    '#00CC00',
    '#00CC33',
    '#00CC66',
    '#00CC99',
    '#00CCCC',
    '#00CCFF',
    '#3300CC',
    '#3300FF',
    '#3333CC',
    '#3333FF',
    '#3366CC',
    '#3366FF',
    '#3399CC',
    '#3399FF',
    '#33CC00',
    '#33CC33',
    '#33CC66',
    '#33CC99',
    '#33CCCC',
    '#33CCFF',
    '#6600CC',
    '#6600FF',
    '#6633CC',
    '#6633FF',
    '#66CC00',
    '#66CC33',
    '#9900CC',
    '#9900FF',
    '#9933CC',
    '#9933FF',
    '#99CC00',
    '#99CC33',
    '#CC0000',
    '#CC0033',
    '#CC0066',
    '#CC0099',
    '#CC00CC',
    '#CC00FF',
    '#CC3300',
    '#CC3333',
    '#CC3366',
    '#CC3399',
    '#CC33CC',
    '#CC33FF',
    '#CC6600',
    '#CC6633',
    '#CC9900',
    '#CC9933',
    '#CCCC00',
    '#CCCC33',
    '#FF0000',
    '#FF0033',
    '#FF0066',
    '#FF0099',
    '#FF00CC',
    '#FF00FF',
    '#FF3300',
    '#FF3333',
    '#FF3366',
    '#FF3399',
    '#FF33CC',
    '#FF33FF',
    '#FF6600',
    '#FF6633',
    '#FF9900',
    '#FF9933',
    '#FFCC00',
    '#FFCC33'
];
/**
 * Currently only WebKit-based Web Inspectors, Firefox >= v31,
 * and the Firebug extension (any Firefox version) are known
 * to support "%c" CSS customizations.
 *
 * TODO: add a `localStorage` variable to explicitly enable/disable colors
 */ // eslint-disable-next-line complexity
function useColors() {
    // NB: In an Electron preload script, document will be defined but not fully
    // initialized. Since we know we're in Chrome, we'll just detect this case
    // explicitly
    if (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {
        return true;
    }
    // Internet Explorer and Edge do not support colors.
    if (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\/(\d+)/)) {
        return false;
    }
    let m;
    // Is webkit? http://stackoverflow.com/a/16459606/376773
    // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632
    return typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance || typeof window !== 'undefined' && window.console && (window.console.firebug || window.console.exception && window.console.table) || typeof navigator !== 'undefined' && navigator.userAgent && (m = navigator.userAgent.toLowerCase().match(/firefox\/(\d+)/)) && parseInt(m[1], 10) >= 31 || typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\/(\d+)/);
}
/**
 * Colorize log arguments if enabled.
 *
 * @api public
 */ function formatArgs(args) {
    args[0] = (this.useColors ? '%c' : '') + this.namespace + (this.useColors ? ' %c' : ' ') + args[0] + (this.useColors ? '%c ' : ' ') + '+' + module.exports.humanize(this.diff);
    if (!this.useColors) {
        return;
    }
    const c = 'color: ' + this.color;
    args.splice(1, 0, c, 'color: inherit');
    // The final "%c" is somewhat tricky, because there could be other
    // arguments passed either before or after the %c, so we need to
    // figure out the correct index to insert the CSS into
    let index = 0;
    let lastC = 0;
    args[0].replace(/%[a-zA-Z%]/g, (match)=>{
        if (match === '%%') {
            return;
        }
        index++;
        if (match === '%c') {
            // We only are interested in the *last* %c
            // (the user may have provided their own)
            lastC = index;
        }
    });
    args.splice(lastC, 0, c);
}
/**
 * Invokes `console.debug()` when available.
 * No-op when `console.debug` is not a "function".
 * If `console.debug` is not available, falls back
 * to `console.log`.
 *
 * @api public
 */ exports.log = console.debug || console.log || (()=>{});
/**
 * Save `namespaces`.
 *
 * @param {String} namespaces
 * @api private
 */ function save(namespaces) {
    try {
        if (namespaces) {
            exports.storage.setItem('debug', namespaces);
        } else {
            exports.storage.removeItem('debug');
        }
    } catch (error) {
    // Swallow
    // XXX (@Qix-) should we be logging these?
    }
}
/**
 * Load `namespaces`.
 *
 * @return {String} returns the previously persisted debug modes
 * @api private
 */ function load() {
    let r;
    try {
        r = exports.storage.getItem('debug');
    } catch (error) {
    // Swallow
    // XXX (@Qix-) should we be logging these?
    }
    // If debug isn't set in LS, and we're in Electron, try to load $DEBUG
    if (!r && typeof process !== 'undefined' && 'env' in process) {
        r = process.env.DEBUG;
    }
    return r;
}
/**
 * Localstorage attempts to return the localstorage.
 *
 * This is necessary because safari throws
 * when a user disables cookies/localstorage
 * and you attempt to access it.
 *
 * @return {LocalStorage}
 * @api private
 */ function localstorage() {
    try {
        // TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context
        // The Browser also has localStorage in the global context.
        return localStorage;
    } catch (error) {
    // Swallow
    // XXX (@Qix-) should we be logging these?
    }
}
module.exports = __turbopack_require__("[project]/node_modules/debug/src/common.js [app-ssr] (ecmascript)")(exports);
const { formatters } = module.exports;
/**
 * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.
 */ formatters.j = function(v) {
    try {
        return JSON.stringify(v);
    } catch (error) {
        return '[UnexpectedJSONParseError]: ' + error.message;
    }
};
}}),
"[project]/node_modules/debug/src/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
/**
 * Detect Electron renderer / nwjs process, which is node, but we should
 * treat as a browser.
 */ if (typeof process === 'undefined' || process.type === 'renderer' || ("TURBOPACK compile-time value", false) === true || process.__nwjs) {
    module.exports = __turbopack_require__("[project]/node_modules/debug/src/browser.js [app-ssr] (ecmascript)");
} else {
    module.exports = __turbopack_require__("[project]/node_modules/debug/src/node.js [app-ssr] (ecmascript)");
}
}}),
"[project]/node_modules/has-flag/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
module.exports = (flag, argv = process.argv)=>{
    const prefix = flag.startsWith('-') ? '' : flag.length === 1 ? '-' : '--';
    const position = argv.indexOf(prefix + flag);
    const terminatorPosition = argv.indexOf('--');
    return position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);
};
}}),
"[project]/node_modules/supports-color/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
const os = __turbopack_require__("[externals]/ [external] (os, cjs)");
const tty = __turbopack_require__("[externals]/ [external] (tty, cjs)");
const hasFlag = __turbopack_require__("[project]/node_modules/has-flag/index.js [app-ssr] (ecmascript)");
const { env } = process;
let forceColor;
if (hasFlag('no-color') || hasFlag('no-colors') || hasFlag('color=false') || hasFlag('color=never')) {
    forceColor = 0;
} else if (hasFlag('color') || hasFlag('colors') || hasFlag('color=true') || hasFlag('color=always')) {
    forceColor = 1;
}
if ('FORCE_COLOR' in env) {
    if (env.FORCE_COLOR === 'true') {
        forceColor = 1;
    } else if (env.FORCE_COLOR === 'false') {
        forceColor = 0;
    } else {
        forceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);
    }
}
function translateLevel(level) {
    if (level === 0) {
        return false;
    }
    return {
        level,
        hasBasic: true,
        has256: level >= 2,
        has16m: level >= 3
    };
}
function supportsColor(haveStream, streamIsTTY) {
    if (forceColor === 0) {
        return 0;
    }
    if (hasFlag('color=16m') || hasFlag('color=full') || hasFlag('color=truecolor')) {
        return 3;
    }
    if (hasFlag('color=256')) {
        return 2;
    }
    if (haveStream && !streamIsTTY && forceColor === undefined) {
        return 0;
    }
    const min = forceColor || 0;
    if (env.TERM === 'dumb') {
        return min;
    }
    if ("TURBOPACK compile-time truthy", 1) {
        // Windows 10 build 10586 is the first Windows release that supports 256 colors.
        // Windows 10 build 14931 is the first release that supports 16m/TrueColor.
        const osRelease = os.release().split('.');
        if (Number(osRelease[0]) >= 10 && Number(osRelease[2]) >= 10586) {
            return Number(osRelease[2]) >= 14931 ? 3 : 2;
        }
        return 1;
    }
    "TURBOPACK unreachable";
}
function getSupportLevel(stream) {
    const level = supportsColor(stream, stream && stream.isTTY);
    return translateLevel(level);
}
module.exports = {
    supportsColor: getSupportLevel,
    stdout: translateLevel(supportsColor(true, tty.isatty(1))),
    stderr: translateLevel(supportsColor(true, tty.isatty(2)))
};
}}),
"[project]/node_modules/follow-redirects/debug.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var debug;
module.exports = function() {
    if (!debug) {
        try {
            /* eslint global-require: off */ debug = __turbopack_require__("[project]/node_modules/debug/src/index.js [app-ssr] (ecmascript)")("follow-redirects");
        } catch (error) {}
        if (typeof debug !== "function") {
            debug = function() {};
        }
    }
    debug.apply(null, arguments);
};
}}),
"[project]/node_modules/follow-redirects/index.js [app-ssr] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, x: __turbopack_external_require__, y: __turbopack_external_import__, m: module, e: exports, t: require } = __turbopack_context__;
{
var url = __turbopack_require__("[externals]/ [external] (url, cjs)");
var URL = url.URL;
var http = __turbopack_require__("[externals]/ [external] (http, cjs)");
var https = __turbopack_require__("[externals]/ [external] (https, cjs)");
var Writable = __turbopack_require__("[externals]/ [external] (stream, cjs)").Writable;
var assert = __turbopack_require__("[externals]/ [external] (assert, cjs)");
var debug = __turbopack_require__("[project]/node_modules/follow-redirects/debug.js [app-ssr] (ecmascript)");
// Preventive platform detection
// istanbul ignore next
(function detectUnsupportedEnvironment() {
    var looksLikeNode = typeof process !== "undefined";
    var looksLikeBrowser = typeof window !== "undefined" && typeof document !== "undefined";
    var looksLikeV8 = isFunction(Error.captureStackTrace);
    if (!looksLikeNode && (looksLikeBrowser || !looksLikeV8)) {
        console.warn("The follow-redirects package should be excluded from browser builds.");
    }
})();
// Whether to use the native URL object or the legacy url module
var useNativeURL = false;
try {
    assert(new URL(""));
} catch (error) {
    useNativeURL = error.code === "ERR_INVALID_URL";
}
// URL fields to preserve in copy operations
var preservedUrlFields = [
    "auth",
    "host",
    "hostname",
    "href",
    "path",
    "pathname",
    "port",
    "protocol",
    "query",
    "search",
    "hash"
];
// Create handlers that pass events from native requests
var events = [
    "abort",
    "aborted",
    "connect",
    "error",
    "socket",
    "timeout"
];
var eventHandlers = Object.create(null);
events.forEach(function(event) {
    eventHandlers[event] = function(arg1, arg2, arg3) {
        this._redirectable.emit(event, arg1, arg2, arg3);
    };
});
// Error types with codes
var InvalidUrlError = createErrorType("ERR_INVALID_URL", "Invalid URL", TypeError);
var RedirectionError = createErrorType("ERR_FR_REDIRECTION_FAILURE", "Redirected request failed");
var TooManyRedirectsError = createErrorType("ERR_FR_TOO_MANY_REDIRECTS", "Maximum number of redirects exceeded", RedirectionError);
var MaxBodyLengthExceededError = createErrorType("ERR_FR_MAX_BODY_LENGTH_EXCEEDED", "Request body larger than maxBodyLength limit");
var WriteAfterEndError = createErrorType("ERR_STREAM_WRITE_AFTER_END", "write after end");
// istanbul ignore next
var destroy = Writable.prototype.destroy || noop;
// An HTTP(S) request that can be redirected
function RedirectableRequest(options, responseCallback) {
    // Initialize the request
    Writable.call(this);
    this._sanitizeOptions(options);
    this._options = options;
    this._ended = false;
    this._ending = false;
    this._redirectCount = 0;
    this._redirects = [];
    this._requestBodyLength = 0;
    this._requestBodyBuffers = [];
    // Attach a callback if passed
    if (responseCallback) {
        this.on("response", responseCallback);
    }
    // React to responses of native requests
    var self = this;
    this._onNativeResponse = function(response) {
        try {
            self._processResponse(response);
        } catch (cause) {
            self.emit("error", cause instanceof RedirectionError ? cause : new RedirectionError({
                cause: cause
            }));
        }
    };
    // Perform the first request
    this._performRequest();
}
RedirectableRequest.prototype = Object.create(Writable.prototype);
RedirectableRequest.prototype.abort = function() {
    destroyRequest(this._currentRequest);
    this._currentRequest.abort();
    this.emit("abort");
};
RedirectableRequest.prototype.destroy = function(error) {
    destroyRequest(this._currentRequest, error);
    destroy.call(this, error);
    return this;
};
// Writes buffered data to the current native request
RedirectableRequest.prototype.write = function(data, encoding, callback) {
    // Writing is not allowed if end has been called
    if (this._ending) {
        throw new WriteAfterEndError();
    }
    // Validate input and shift parameters if necessary
    if (!isString(data) && !isBuffer(data)) {
        throw new TypeError("data should be a string, Buffer or Uint8Array");
    }
    if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
    }
    // Ignore empty buffers, since writing them doesn't invoke the callback
    // https://github.com/nodejs/node/issues/22066
    if (data.length === 0) {
        if (callback) {
            callback();
        }
        return;
    }
    // Only write when we don't exceed the maximum body length
    if (this._requestBodyLength + data.length <= this._options.maxBodyLength) {
        this._requestBodyLength += data.length;
        this._requestBodyBuffers.push({
            data: data,
            encoding: encoding
        });
        this._currentRequest.write(data, encoding, callback);
    } else {
        this.emit("error", new MaxBodyLengthExceededError());
        this.abort();
    }
};
// Ends the current native request
RedirectableRequest.prototype.end = function(data, encoding, callback) {
    // Shift parameters if necessary
    if (isFunction(data)) {
        callback = data;
        data = encoding = null;
    } else if (isFunction(encoding)) {
        callback = encoding;
        encoding = null;
    }
    // Write data if needed and end
    if (!data) {
        this._ended = this._ending = true;
        this._currentRequest.end(null, null, callback);
    } else {
        var self = this;
        var currentRequest = this._currentRequest;
        this.write(data, encoding, function() {
            self._ended = true;
            currentRequest.end(null, null, callback);
        });
        this._ending = true;
    }
};
// Sets a header value on the current native request
RedirectableRequest.prototype.setHeader = function(name, value) {
    this._options.headers[name] = value;
    this._currentRequest.setHeader(name, value);
};
// Clears a header value on the current native request
RedirectableRequest.prototype.removeHeader = function(name) {
    delete this._options.headers[name];
    this._currentRequest.removeHeader(name);
};
// Global timeout for all underlying requests
RedirectableRequest.prototype.setTimeout = function(msecs, callback) {
    var self = this;
    // Destroys the socket on timeout
    function destroyOnTimeout(socket) {
        socket.setTimeout(msecs);
        socket.removeListener("timeout", socket.destroy);
        socket.addListener("timeout", socket.destroy);
    }
    // Sets up a timer to trigger a timeout event
    function startTimer(socket) {
        if (self._timeout) {
            clearTimeout(self._timeout);
        }
        self._timeout = setTimeout(function() {
            self.emit("timeout");
            clearTimer();
        }, msecs);
        destroyOnTimeout(socket);
    }
    // Stops a timeout from triggering
    function clearTimer() {
        // Clear the timeout
        if (self._timeout) {
            clearTimeout(self._timeout);
            self._timeout = null;
        }
        // Clean up all attached listeners
        self.removeListener("abort", clearTimer);
        self.removeListener("error", clearTimer);
        self.removeListener("response", clearTimer);
        self.removeListener("close", clearTimer);
        if (callback) {
            self.removeListener("timeout", callback);
        }
        if (!self.socket) {
            self._currentRequest.removeListener("socket", startTimer);
        }
    }
    // Attach callback if passed
    if (callback) {
        this.on("timeout", callback);
    }
    // Start the timer if or when the socket is opened
    if (this.socket) {
        startTimer(this.socket);
    } else {
        this._currentRequest.once("socket", startTimer);
    }
    // Clean up on events
    this.on("socket", destroyOnTimeout);
    this.on("abort", clearTimer);
    this.on("error", clearTimer);
    this.on("response", clearTimer);
    this.on("close", clearTimer);
    return this;
};
// Proxy all other public ClientRequest methods
[
    "flushHeaders",
    "getHeader",
    "setNoDelay",
    "setSocketKeepAlive"
].forEach(function(method) {
    RedirectableRequest.prototype[method] = function(a, b) {
        return this._currentRequest[method](a, b);
    };
});
// Proxy all public ClientRequest properties
[
    "aborted",
    "connection",
    "socket"
].forEach(function(property) {
    Object.defineProperty(RedirectableRequest.prototype, property, {
        get: function() {
            return this._currentRequest[property];
        }
    });
});
RedirectableRequest.prototype._sanitizeOptions = function(options) {
    // Ensure headers are always present
    if (!options.headers) {
        options.headers = {};
    }
    // Since http.request treats host as an alias of hostname,
    // but the url module interprets host as hostname plus port,
    // eliminate the host property to avoid confusion.
    if (options.host) {
        // Use hostname if set, because it has precedence
        if (!options.hostname) {
            options.hostname = options.host;
        }
        delete options.host;
    }
    // Complete the URL object when necessary
    if (!options.pathname && options.path) {
        var searchPos = options.path.indexOf("?");
        if (searchPos < 0) {
            options.pathname = options.path;
        } else {
            options.pathname = options.path.substring(0, searchPos);
            options.search = options.path.substring(searchPos);
        }
    }
};
// Executes the next native request (initial or redirect)
RedirectableRequest.prototype._performRequest = function() {
    // Load the native protocol
    var protocol = this._options.protocol;
    var nativeProtocol = this._options.nativeProtocols[protocol];
    if (!nativeProtocol) {
        throw new TypeError("Unsupported protocol " + protocol);
    }
    // If specified, use the agent corresponding to the protocol
    // (HTTP and HTTPS use different types of agents)
    if (this._options.agents) {
        var scheme = protocol.slice(0, -1);
        this._options.agent = this._options.agents[scheme];
    }
    // Create the native request and set up its event handlers
    var request = this._currentRequest = nativeProtocol.request(this._options, this._onNativeResponse);
    request._redirectable = this;
    for (var event of events){
        request.on(event, eventHandlers[event]);
    }
    // RFC7230§5.3.1: When making a request directly to an origin server, […]
    // a client MUST send only the absolute path […] as the request-target.
    this._currentUrl = /^\//.test(this._options.path) ? url.format(this._options) : // When making a request to a proxy, […]
    // a client MUST send the target URI in absolute-form […].
    this._options.path;
    // End a redirected request
    // (The first request must be ended explicitly with RedirectableRequest#end)
    if (this._isRedirect) {
        // Write the request entity and end
        var i = 0;
        var self = this;
        var buffers = this._requestBodyBuffers;
        (function writeNext(error) {
            // Only write if this request has not been redirected yet
            // istanbul ignore else
            if (request === self._currentRequest) {
                // Report any write errors
                // istanbul ignore if
                if (error) {
                    self.emit("error", error);
                } else if (i < buffers.length) {
                    var buffer = buffers[i++];
                    // istanbul ignore else
                    if (!request.finished) {
                        request.write(buffer.data, buffer.encoding, writeNext);
                    }
                } else if (self._ended) {
                    request.end();
                }
            }
        })();
    }
};
// Processes a response from the current native request
RedirectableRequest.prototype._processResponse = function(response) {
    // Store the redirected response
    var statusCode = response.statusCode;
    if (this._options.trackRedirects) {
        this._redirects.push({
            url: this._currentUrl,
            headers: response.headers,
            statusCode: statusCode
        });
    }
    // RFC7231§6.4: The 3xx (Redirection) class of status code indicates
    // that further action needs to be taken by the user agent in order to
    // fulfill the request. If a Location header field is provided,
    // the user agent MAY automatically redirect its request to the URI
    // referenced by the Location field value,
    // even if the specific status code is not understood.
    // If the response is not a redirect; return it as-is
    var location = response.headers.location;
    if (!location || this._options.followRedirects === false || statusCode < 300 || statusCode >= 400) {
        response.responseUrl = this._currentUrl;
        response.redirects = this._redirects;
        this.emit("response", response);
        // Clean up
        this._requestBodyBuffers = [];
        return;
    }
    // The response is a redirect, so abort the current request
    destroyRequest(this._currentRequest);
    // Discard the remainder of the response to avoid waiting for data
    response.destroy();
    // RFC7231§6.4: A client SHOULD detect and intervene
    // in cyclical redirections (i.e., "infinite" redirection loops).
    if (++this._redirectCount > this._options.maxRedirects) {
        throw new TooManyRedirectsError();
    }
    // Store the request headers if applicable
    var requestHeaders;
    var beforeRedirect = this._options.beforeRedirect;
    if (beforeRedirect) {
        requestHeaders = Object.assign({
            // The Host header was set by nativeProtocol.request
            Host: response.req.getHeader("host")
        }, this._options.headers);
    }
    // RFC7231§6.4: Automatic redirection needs to done with
    // care for methods not known to be safe, […]
    // RFC7231§6.4.2–3: For historical reasons, a user agent MAY change
    // the request method from POST to GET for the subsequent request.
    var method = this._options.method;
    if ((statusCode === 301 || statusCode === 302) && this._options.method === "POST" || // RFC7231§6.4.4: The 303 (See Other) status code indicates that
    // the server is redirecting the user agent to a different resource […]
    // A user agent can perform a retrieval request targeting that URI
    // (a GET or HEAD request if using HTTP) […]
    statusCode === 303 && !/^(?:GET|HEAD)$/.test(this._options.method)) {
        this._options.method = "GET";
        // Drop a possible entity and headers related to it
        this._requestBodyBuffers = [];
        removeMatchingHeaders(/^content-/i, this._options.headers);
    }
    // Drop the Host header, as the redirect might lead to a different host
    var currentHostHeader = removeMatchingHeaders(/^host$/i, this._options.headers);
    // If the redirect is relative, carry over the host of the last request
    var currentUrlParts = parseUrl(this._currentUrl);
    var currentHost = currentHostHeader || currentUrlParts.host;
    var currentUrl = /^\w+:/.test(location) ? this._currentUrl : url.format(Object.assign(currentUrlParts, {
        host: currentHost
    }));
    // Create the redirected request
    var redirectUrl = resolveUrl(location, currentUrl);
    debug("redirecting to", redirectUrl.href);
    this._isRedirect = true;
    spreadUrlObject(redirectUrl, this._options);
    // Drop confidential headers when redirecting to a less secure protocol
    // or to a different domain that is not a superdomain
    if (redirectUrl.protocol !== currentUrlParts.protocol && redirectUrl.protocol !== "https:" || redirectUrl.host !== currentHost && !isSubdomain(redirectUrl.host, currentHost)) {
        removeMatchingHeaders(/^(?:(?:proxy-)?authorization|cookie)$/i, this._options.headers);
    }
    // Evaluate the beforeRedirect callback
    if (isFunction(beforeRedirect)) {
        var responseDetails = {
            headers: response.headers,
            statusCode: statusCode
        };
        var requestDetails = {
            url: currentUrl,
            method: method,
            headers: requestHeaders
        };
        beforeRedirect(this._options, responseDetails, requestDetails);
        this._sanitizeOptions(this._options);
    }
    // Perform the redirected request
    this._performRequest();
};
// Wraps the key/value object of protocols with redirect functionality
function wrap(protocols) {
    // Default settings
    var exports = {
        maxRedirects: 21,
        maxBodyLength: 10 * 1024 * 1024
    };
    // Wrap each protocol
    var nativeProtocols = {};
    Object.keys(protocols).forEach(function(scheme) {
        var protocol = scheme + ":";
        var nativeProtocol = nativeProtocols[protocol] = protocols[scheme];
        var wrappedProtocol = exports[scheme] = Object.create(nativeProtocol);
        // Executes a request, following redirects
        function request(input, options, callback) {
            // Parse parameters, ensuring that input is an object
            if (isURL(input)) {
                input = spreadUrlObject(input);
            } else if (isString(input)) {
                input = spreadUrlObject(parseUrl(input));
            } else {
                callback = options;
                options = validateUrl(input);
                input = {
                    protocol: protocol
                };
            }
            if (isFunction(options)) {
                callback = options;
                options = null;
            }
            // Set defaults
            options = Object.assign({
                maxRedirects: exports.maxRedirects,
                maxBodyLength: exports.maxBodyLength
            }, input, options);
            options.nativeProtocols = nativeProtocols;
            if (!isString(options.host) && !isString(options.hostname)) {
                options.hostname = "::1";
            }
            assert.equal(options.protocol, protocol, "protocol mismatch");
            debug("options", options);
            return new RedirectableRequest(options, callback);
        }
        // Executes a GET request, following redirects
        function get(input, options, callback) {
            var wrappedRequest = wrappedProtocol.request(input, options, callback);
            wrappedRequest.end();
            return wrappedRequest;
        }
        // Expose the properties on the wrapped protocol
        Object.defineProperties(wrappedProtocol, {
            request: {
                value: request,
                configurable: true,
                enumerable: true,
                writable: true
            },
            get: {
                value: get,
                configurable: true,
                enumerable: true,
                writable: true
            }
        });
    });
    return exports;
}
function noop() {}
function parseUrl(input) {
    var parsed;
    // istanbul ignore else
    if (useNativeURL) {
        parsed = new URL(input);
    } else {
        // Ensure the URL is valid and absolute
        parsed = validateUrl(url.parse(input));
        if (!isString(parsed.protocol)) {
            throw new InvalidUrlError({
                input
            });
        }
    }
    return parsed;
}
function resolveUrl(relative, base) {
    // istanbul ignore next
    return useNativeURL ? new URL(relative, base) : parseUrl(url.resolve(base, relative));
}
function validateUrl(input) {
    if (/^\[/.test(input.hostname) && !/^\[[:0-9a-f]+\]$/i.test(input.hostname)) {
        throw new InvalidUrlError({
            input: input.href || input
        });
    }
    if (/^\[/.test(input.host) && !/^\[[:0-9a-f]+\](:\d+)?$/i.test(input.host)) {
        throw new InvalidUrlError({
            input: input.href || input
        });
    }
    return input;
}
function spreadUrlObject(urlObject, target) {
    var spread = target || {};
    for (var key of preservedUrlFields){
        spread[key] = urlObject[key];
    }
    // Fix IPv6 hostname
    if (spread.hostname.startsWith("[")) {
        spread.hostname = spread.hostname.slice(1, -1);
    }
    // Ensure port is a number
    if (spread.port !== "") {
        spread.port = Number(spread.port);
    }
    // Concatenate path
    spread.path = spread.search ? spread.pathname + spread.search : spread.pathname;
    return spread;
}
function removeMatchingHeaders(regex, headers) {
    var lastValue;
    for(var header in headers){
        if (regex.test(header)) {
            lastValue = headers[header];
            delete headers[header];
        }
    }
    return lastValue === null || typeof lastValue === "undefined" ? undefined : String(lastValue).trim();
}
function createErrorType(code, message, baseClass) {
    // Create constructor
    function CustomError(properties) {
        // istanbul ignore else
        if (isFunction(Error.captureStackTrace)) {
            Error.captureStackTrace(this, this.constructor);
        }
        Object.assign(this, properties || {});
        this.code = code;
        this.message = this.cause ? message + ": " + this.cause.message : message;
    }
    // Attach constructor and set default properties
    CustomError.prototype = new (baseClass || Error)();
    Object.defineProperties(CustomError.prototype, {
        constructor: {
            value: CustomError,
            enumerable: false
        },
        name: {
            value: "Error [" + code + "]",
            enumerable: false
        }
    });
    return CustomError;
}
function destroyRequest(request, error) {
    for (var event of events){
        request.removeListener(event, eventHandlers[event]);
    }
    request.on("error", noop);
    request.destroy(error);
}
function isSubdomain(subdomain, domain) {
    assert(isString(subdomain) && isString(domain));
    var dot = subdomain.length - domain.length - 1;
    return dot > 0 && subdomain[dot] === "." && subdomain.endsWith(domain);
}
function isString(value) {
    return typeof value === "string" || value instanceof String;
}
function isFunction(value) {
    return typeof value === "function";
}
function isBuffer(value) {
    return typeof value === "object" && "length" in value;
}
function isURL(value) {
    return URL && value instanceof URL;
}
// Exports
module.exports = wrap({
    http: http,
    https: https
});
module.exports.wrap = wrap;
}}),

};

//# sourceMappingURL=node_modules_8c61a1._.js.map