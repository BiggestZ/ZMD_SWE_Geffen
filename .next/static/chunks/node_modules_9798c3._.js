(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_9798c3._.js", {

"[project]/node_modules/is-obj/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
module.exports = (value)=>{
    const type = typeof value;
    return value !== null && (type === 'object' || type === 'function');
};
}}),
"[project]/node_modules/dot-prop/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
const isObj = __turbopack_require__("[project]/node_modules/is-obj/index.js [app-client] (ecmascript)");
const disallowedKeys = [
    '__proto__',
    'prototype',
    'constructor'
];
const isValidPath = (pathSegments)=>!pathSegments.some((segment)=>disallowedKeys.includes(segment));
function getPathSegments(path) {
    const pathArray = path.split('.');
    const parts = [];
    for(let i = 0; i < pathArray.length; i++){
        let p = pathArray[i];
        while(p[p.length - 1] === '\\' && pathArray[i + 1] !== undefined){
            p = p.slice(0, -1) + '.';
            p += pathArray[++i];
        }
        parts.push(p);
    }
    if (!isValidPath(parts)) {
        return [];
    }
    return parts;
}
module.exports = {
    get (object, path, value) {
        if (!isObj(object) || typeof path !== 'string') {
            return value === undefined ? object : value;
        }
        const pathArray = getPathSegments(path);
        if (pathArray.length === 0) {
            return;
        }
        for(let i = 0; i < pathArray.length; i++){
            if (!Object.prototype.propertyIsEnumerable.call(object, pathArray[i])) {
                return value;
            }
            object = object[pathArray[i]];
            if (object === undefined || object === null) {
                // `object` is either `undefined` or `null` so we want to stop the loop, and
                // if this is not the last bit of the path, and
                // if it did't return `undefined`
                // it would return `null` if `object` is `null`
                // but we want `get({foo: null}, 'foo.bar')` to equal `undefined`, or the supplied value, not `null`
                if (i !== pathArray.length - 1) {
                    return value;
                }
                break;
            }
        }
        return object;
    },
    set (object, path, value) {
        if (!isObj(object) || typeof path !== 'string') {
            return object;
        }
        const root = object;
        const pathArray = getPathSegments(path);
        for(let i = 0; i < pathArray.length; i++){
            const p = pathArray[i];
            if (!isObj(object[p])) {
                object[p] = {};
            }
            if (i === pathArray.length - 1) {
                object[p] = value;
            }
            object = object[p];
        }
        return root;
    },
    delete (object, path) {
        if (!isObj(object) || typeof path !== 'string') {
            return false;
        }
        const pathArray = getPathSegments(path);
        for(let i = 0; i < pathArray.length; i++){
            const p = pathArray[i];
            if (i === pathArray.length - 1) {
                delete object[p];
                return true;
            }
            object = object[p];
            if (!isObj(object)) {
                return false;
            }
        }
    },
    has (object, path) {
        if (!isObj(object) || typeof path !== 'string') {
            return false;
        }
        const pathArray = getPathSegments(path);
        if (pathArray.length === 0) {
            return false;
        }
        // eslint-disable-next-line unicorn/no-for-loop
        for(let i = 0; i < pathArray.length; i++){
            if (isObj(object)) {
                if (!(pathArray[i] in object)) {
                    return false;
                }
                object = object[pathArray[i]];
            } else {
                return false;
            }
        }
        return true;
    }
};
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "each": (()=>each),
    "eachKey": (()=>eachKey),
    "eachPair": (()=>eachPair)
});
const __ΩArrayLike = [
    'T',
    'length',
    'ArrayLike',
    'b!P\'4"9\'e"!LMw#y'
];
const __ΩIterableIterator = [
    'T',
    ()=>__ΩIterator,
    0,
    ()=>Symbol.iterator,
    'IterableIterator',
    'b!Pe"!o""Pe#!o#"1$Mw%y'
];
const __ΩIterator = [
    'T',
    'TReturn',
    'TNext',
    'args',
    ()=>__ΩIteratorResult,
    'next',
    'value',
    ()=>__ΩIteratorResult,
    'return',
    'e',
    ()=>__ΩIteratorResult,
    'throw',
    'Iterator',
    'b!"c"-c#PPPPGPe%#GJ@2$e#!e#"o%#1&Pe#"2\'8e#!e#"o(#1)P"2*8e#!e#"o+#1,Mw-y'
];
const __ΩIteratorResult = [
    'T',
    'TReturn',
    ()=>__ΩIteratorYieldResult,
    ()=>__ΩIteratorReturnResult,
    'IteratorResult',
    'b!"c"Pe"!o#"e""o$"Jw%y'
];
const __ΩIteratorYieldResult = [
    'TYield',
    false,
    'done',
    'value',
    'IteratorYieldResult',
    'b!P."4#8e"!4$Mw%y'
];
const __ΩIteratorReturnResult = [
    'TReturn',
    true,
    'done',
    'value',
    'IteratorReturnResult',
    'b!P."4#e"!4$Mw%y'
];
eachKey.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'P"o!"2"\'o#"/$'
];
eachKey.__type = [
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'P"2!&o""/#'
];
function* eachKey(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield i;
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield i;
            }
        }
    }
}
eachKey.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachKey',
    'PP""o!"J2"P&\'Jo#"/$'
];
function* each(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield object[i];
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield object[i];
            }
        }
    }
}
each.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'each',
    'PPP&"LM"o!"J2""o#"/$'
];
eachPair.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'P"o!"2"P\'"Go#"/$'
];
eachPair.__type = [
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'PP&"LM2!P&"Go""/#'
];
function* eachPair(object) {
    if (Array.isArray(object)) {
        for(let i = 0; i < object.length; i++){
            yield [
                i,
                object[i]
            ];
        }
    } else {
        for(const i in object){
            if (object.hasOwnProperty(i)) {
                yield [
                    i,
                    object[i]
                ];
            }
        }
    }
}
eachPair.__type = [
    ()=>__ΩArrayLike,
    'object',
    ()=>__ΩIterableIterator,
    'eachPair',
    'PPP&"LM"o!"J2"PP&"GP\'"GJo#"/$'
]; //# sourceMappingURL=iterators.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "CustomError": (()=>CustomError),
    "__ΩAbstractClassType": (()=>__ΩAbstractClassType),
    "__ΩClassType": (()=>__ΩClassType),
    "__ΩExtractClassType": (()=>__ΩExtractClassType),
    "appendObject": (()=>appendObject),
    "applyDefaults": (()=>applyDefaults),
    "assertDefined": (()=>assertDefined),
    "assertInstanceOf": (()=>assertInstanceOf),
    "asyncOperation": (()=>asyncOperation),
    "average": (()=>average),
    "changeClass": (()=>changeClass),
    "collectForMicrotask": (()=>collectForMicrotask),
    "copy": (()=>copy),
    "createDynamicClass": (()=>createDynamicClass),
    "createStack": (()=>createStack),
    "deletePathValue": (()=>deletePathValue),
    "empty": (()=>empty),
    "escapeRegExp": (()=>escapeRegExp),
    "first": (()=>first),
    "firstKey": (()=>firstKey),
    "fixAsyncOperation": (()=>fixAsyncOperation),
    "formatError": (()=>formatError),
    "forwardTypeArguments": (()=>forwardTypeArguments),
    "getClassName": (()=>getClassName),
    "getClassPropertyName": (()=>getClassPropertyName),
    "getClassTypeFromInstance": (()=>getClassTypeFromInstance),
    "getCurrentFileName": (()=>getCurrentFileName),
    "getInheritanceChain": (()=>getInheritanceChain),
    "getObjectKeysSize": (()=>getObjectKeysSize),
    "getParentClass": (()=>getParentClass),
    "getPathValue": (()=>getPathValue),
    "hasProperty": (()=>hasProperty),
    "humanBytes": (()=>humanBytes),
    "identifyType": (()=>identifyType),
    "inDebugMode": (()=>inDebugMode),
    "indexOf": (()=>indexOf),
    "isArray": (()=>isArray),
    "isAsyncFunction": (()=>isAsyncFunction),
    "isClass": (()=>isClass),
    "isClassInstance": (()=>isClassInstance),
    "isConstructable": (()=>isConstructable),
    "isFunction": (()=>isFunction),
    "isGlobalClass": (()=>isGlobalClass),
    "isInteger": (()=>isInteger),
    "isIterable": (()=>isIterable),
    "isNull": (()=>isNull),
    "isNumber": (()=>isNumber),
    "isNumeric": (()=>isNumeric),
    "isObject": (()=>isObject),
    "isObjectLiteral": (()=>isObjectLiteral),
    "isPlainObject": (()=>isPlainObject),
    "isPromise": (()=>isPromise),
    "isPrototypeOfBase": (()=>isPrototypeOfBase),
    "isSet": (()=>isSet),
    "isString": (()=>isString),
    "isUndefined": (()=>isUndefined),
    "iterableSize": (()=>iterableSize),
    "last": (()=>last),
    "lastKey": (()=>lastKey),
    "mergePromiseStack": (()=>mergePromiseStack),
    "mergeStack": (()=>mergeStack),
    "prependObjectKeys": (()=>prependObjectKeys),
    "prettyPrintObject": (()=>prettyPrintObject),
    "range": (()=>range),
    "rangeArray": (()=>rangeArray),
    "setPathValue": (()=>setPathValue),
    "size": (()=>size),
    "sleep": (()=>sleep),
    "stringifyValueWithType": (()=>stringifyValueWithType),
    "time": (()=>time),
    "zip": (()=>zip)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/dot-prop/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
const __ΩError = [
    'name',
    'message',
    'stack',
    'Error',
    'P&4!&4"&4#8Mw$y'
];
const __ΩObject = [
    ()=>Function,
    'constructor',
    'toString',
    'toLocaleString',
    0,
    'valueOf',
    ()=>__ΩPropertyKey,
    'v',
    'hasOwnProperty',
    0,
    'isPrototypeOf',
    ()=>__ΩPropertyKey,
    'propertyIsEnumerable',
    'Object',
    'PPu!4"P&1#P&1$Pn%1&Pn\'2()1)Pn*2()1+Pn,2()1-Mw.y'
];
const __ΩIterableIterator = [
    'T',
    ()=>__ΩIterator,
    0,
    ()=>Symbol.iterator,
    'IterableIterator',
    'b!Pe"!o""Pe#!o#"1$Mw%y'
];
const __ΩPropertyKey = [
    'PropertyKey',
    'P&\'+Jw!y'
];
const __ΩIterator = [
    'T',
    'TReturn',
    'TNext',
    'args',
    ()=>__ΩIteratorResult,
    'next',
    'value',
    ()=>__ΩIteratorResult,
    'return',
    'e',
    ()=>__ΩIteratorResult,
    'throw',
    'Iterator',
    'b!"c"-c#PPPPGPe%#GJ@2$e#!e#"o%#1&Pe#"2\'8e#!e#"o(#1)P"2*8e#!e#"o+#1,Mw-y'
];
const __ΩIteratorResult = [
    'T',
    'TReturn',
    ()=>__ΩIteratorYieldResult,
    ()=>__ΩIteratorReturnResult,
    'IteratorResult',
    'b!"c"Pe"!o#"e""o$"Jw%y'
];
const __ΩIteratorYieldResult = [
    'TYield',
    false,
    'done',
    'value',
    'IteratorYieldResult',
    'b!P."4#8e"!4$Mw%y'
];
const __ΩIteratorReturnResult = [
    'TReturn',
    true,
    'done',
    'value',
    'IteratorReturnResult',
    'b!P."4#e"!4$Mw%y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
class CustomError extends Error {
    constructor(...args){
        super(...args);
        this.name = this.constructor.name;
    }
}
CustomError.__type = [
    ()=>Error,
    'name',
    'stack',
    ()=>__ΩError,
    'cause',
    'args',
    'constructor',
    'CustomError',
    'P7!&3"&3#8Pn$"J3%8P"@2&"0\'5w('
];
const __ΩClassType = [
    'T',
    'args',
    'new',
    'ClassType',
    '"c!PP"@2"e#!1#Mw$y'
];
;
const __ΩAbstractClassType = [
    'T',
    'args',
    'new',
    'AbstractClassType',
    '"c!P"@2"e"!/#w$y'
];
;
const __ΩExtractClassType = [
    'T',
    ()=>__ΩAbstractClassType,
    'ExtractClassType',
    'l:e"!R!RPde#!h!!o""qk#\'QRb!Pde"!p)w#y'
];
;
function getClassName(classTypeOrInstance) {
    if (!classTypeOrInstance) return 'undefined';
    const proto = classTypeOrInstance['prototype'] ? classTypeOrInstance['prototype'] : classTypeOrInstance;
    return proto.constructor.name || 'anonymous class';
}
getClassName.__type = [
    ()=>__ΩClassType,
    ()=>__ΩObject,
    'classTypeOrInstance',
    'getClassName',
    'PP"o!"n"J2#&/$'
];
function getClassPropertyName(classType, propertyName) {
    const name = getClassName(classType);
    return `${name}.${propertyName}`;
}
getClassPropertyName.__type = [
    ()=>__ΩClassType,
    ()=>__ΩObject,
    'classType',
    'propertyName',
    'getClassPropertyName',
    'PP"o!"n"J2#&2$&/%'
];
function applyDefaults(classType, target) {
    const classInstance = new classType();
    for (const [i, v] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eachPair"])(target)){
        classInstance[i] = v;
    }
    return classInstance;
}
applyDefaults.__type = [
    ()=>__ΩClassType,
    'classType',
    'target',
    'applyDefaults',
    'P"o!"2"P&"LM2#"/$'
];
function identifyType(obj) {
    return ((({}).toString.call(obj).match(/\s([a-zA-Z]+)/) || [])[1] || '').toLowerCase();
}
identifyType.__type = [
    'obj',
    'identifyType',
    'P"2!"/"'
];
function isPlainObject(obj) {
    return Boolean(obj && typeof obj === 'object' && obj.constructor instanceof obj.constructor);
}
isPlainObject.__type = [
    'obj',
    'isPlainObject',
    'P"2!!/"'
];
function getClassTypeFromInstance(target) {
    if (!isClassInstance(target)) {
        throw new Error(`Value is not a class instance. Got ${stringifyValueWithType(target)}`);
    }
    return target['constructor'];
}
getClassTypeFromInstance.__type = [
    'target',
    ()=>__ΩClassType,
    'getClassTypeFromInstance',
    'P"2!"o""/#'
];
function isClassInstance(target) {
    return target !== undefined && target !== null && target['constructor'] && Object.getPrototypeOf(target) === target['constructor'].prototype && !isPlainObject(target) && isObject(target);
}
isClassInstance.__type = [
    'target',
    'isClassInstance',
    'P"2!)/"'
];
function stringifyValueWithType(value, depth = 0) {
    if ('string' === typeof value) return `string(${value})`;
    if ('number' === typeof value) return `number(${value})`;
    if ('boolean' === typeof value) return `boolean(${value})`;
    if ('bigint' === typeof value) return `bigint(${value})`;
    if (isPlainObject(value)) return `object ${depth < 2 ? prettyPrintObject(value, depth) : ''}`;
    if (isArray(value)) return `Array`;
    if (isClass(value)) return `${getClassName(value)}`;
    if (isObject(value)) return `${getClassName(getClassTypeFromInstance(value))} ${depth < 2 ? prettyPrintObject(value, depth) : ''}`;
    if ('function' === typeof value) return `function ${value.name}`;
    if (null === value) return `null`;
    return 'undefined';
}
stringifyValueWithType.__type = [
    'value',
    'depth',
    ()=>0,
    'stringifyValueWithType',
    'P"2!\'2">#&/$'
];
function changeClass(value, newClass) {
    return Object.assign(Object.create(newClass.prototype), value);
}
changeClass.__type = [
    'value',
    ()=>__ΩClassType,
    'newClass',
    'changeClass',
    'P%2!"o""2#"/$'
];
function prettyPrintObject(object, depth = 0) {
    const res = [];
    for(const i in object){
        res.push(i + ': ' + stringifyValueWithType(object[i], depth + 1));
    }
    return '{' + res.join(',') + '}';
}
prettyPrintObject.__type = [
    'object',
    'depth',
    ()=>0,
    'prettyPrintObject',
    'P%2!\'2">#&/$'
];
function isFunction(obj) {
    if ('function' === typeof obj) {
        return !obj.toString().startsWith('class ') && !obj.toString().startsWith('class{');
    }
    return false;
}
isFunction.__type = [
    'obj',
    'isFunction',
    'P"2!!/"'
];
const AsyncFunction = (async ()=>{}).constructor;
function isAsyncFunction(obj) {
    return obj instanceof AsyncFunction;
}
isAsyncFunction.__type = [
    'obj',
    'isAsyncFunction',
    'P"2!!/"'
];
function isPromise(obj) {
    return obj !== null && typeof obj === 'object' && typeof obj.then === 'function' && typeof obj.catch === 'function' && typeof obj.finally === 'function';
}
isPromise.__type = [
    'obj',
    'isPromise',
    'PP""`J2!!/"'
];
function isClass(obj) {
    if ('function' === typeof obj) {
        return obj.toString().startsWith('class ') || obj.toString().startsWith('class{');
    }
    return false;
}
isClass.__type = [
    'obj',
    'isClass',
    'P"2!!/"'
];
function isGlobalClass(obj) {
    if ('function' !== typeof obj) return false;
    if ('undefined' !== typeof window) {
        return window[getClassName(obj)] === obj;
    }
    if ('undefined' !== typeof global) {
        return global[getClassName(obj)] === obj;
    }
    return false;
}
isGlobalClass.__type = [
    'obj',
    'isGlobalClass',
    'P"2!!/"'
];
function isObject(obj) {
    if (obj === null) {
        return false;
    }
    return typeof obj === 'object' && !isArray(obj);
}
isObject.__type = [
    'obj',
    'isObject',
    'P"2!!/"'
];
function isObjectLiteral(obj) {
    return isObject(obj) && !(obj instanceof Date) && !(obj instanceof Map) && !(obj instanceof Set);
}
isObjectLiteral.__type = [
    'obj',
    'isObjectLiteral',
    'P"2!!/"'
];
const isArray = Array.isArray;
function isNull(obj) {
    return null === obj;
}
isNull.__type = [
    'obj',
    'isNull',
    'P"2!!/"'
];
function isUndefined(obj) {
    return undefined === obj;
}
isUndefined.__type = [
    'obj',
    'isUndefined',
    'P"2!!/"'
];
function isSet(obj) {
    return !isNull(obj) && !isUndefined(obj);
}
isSet.__type = [
    'obj',
    'isSet',
    'P"2!)/"'
];
function isNumber(obj) {
    return 'number' === identifyType(obj);
}
isNumber.__type = [
    'obj',
    'isNumber',
    'P"2!!/"'
];
function isNumeric(s) {
    if ('number' === typeof s) return true;
    let points = 0;
    for(let i = s.length - 1; i >= 0; i--){
        const d = s.charCodeAt(i);
        if (d === 46) {
            //46 = .
            if (points++ > 0) return false;
            continue;
        }
        if (d < 48 || d > 57) return false;
    }
    return true;
}
isNumeric.__type = [
    's',
    'isNumeric',
    'PP&\'J2!)/"'
];
const isInteger = Number.isInteger || __assignType(function(obj) {
    return obj % 1 === 0;
}, [
    'obj',
    '',
    'P"2!"/"'
]);
function isString(obj) {
    return 'string' === identifyType(obj);
}
isString.__type = [
    'obj',
    'isString',
    'P"2!!/"'
];
function indexOf(array, item) {
    if (!array) {
        return -1;
    }
    return array.indexOf(item);
}
indexOf.__type = [
    'array',
    'item',
    'indexOf',
    'P"F2!"2"\'/#'
];
async function sleep(seconds) {
    return Promise.Ω = [
        [
            '$'
        ]
    ], new Promise(__assignType((resolve)=>setTimeout(resolve, seconds * 1000), [
        'resolve',
        '',
        'P"2!"/"'
    ]));
}
sleep.__type = [
    'seconds',
    'sleep',
    'P\'2!$`/"'
];
function copy(v) {
    if (isArray(v)) {
        return v.slice(0);
    }
    return v;
}
copy.__type = [
    'v',
    'copy',
    'P"F2!"F/"'
];
function empty(value) {
    if (!value) return true;
    if (isArray(value)) {
        return value.length === 0;
    } else {
        for(const i in value)if (value.hasOwnProperty(i)) return false;
        return true;
    }
}
empty.__type = [
    'value',
    'empty',
    'PP"F%PMJ2!8)/"'
];
function size(array) {
    if (!array) {
        return 0;
    }
    if (isArray(array)) {
        return array.length;
    } else {
        return getObjectKeysSize(array);
    }
}
size.__type = [
    'array',
    'size',
    'PP"FP&"LMJ2!\'/"'
];
function firstKey(v) {
    return Object.keys(v)[0];
}
firstKey.__type = [
    'v',
    'firstKey',
    'PPP&"LM%J2!P&-J/"'
];
function lastKey(v) {
    const keys = Object.keys(v);
    if (keys.length) {
        return;
    }
    return keys[keys.length - 1];
}
lastKey.__type = [
    'v',
    'lastKey',
    'PPP&"LM%J2!P&-J/"'
];
function first(v) {
    if (isArray(v)) {
        return v[0];
    }
    const key = firstKey(v);
    if (key) {
        return v[key];
    }
    return;
}
first.__type = [
    'v',
    'first',
    'PPP&"LM"FJ2!P"-J/"'
];
function last(v) {
    if (isArray(v)) {
        if (v.length > 0) {
            return v[v.length - 1];
        }
        return;
    }
    const key = firstKey(v);
    if (key) {
        return v[key];
    }
    return;
}
last.__type = [
    'v',
    'last',
    'PPP&"LM"FJ2!P"-J/"'
];
function average(array) {
    let sum = 0;
    for (const n of array){
        sum += n;
    }
    return sum / array.length;
}
average.__type = [
    'array',
    'average',
    'P\'F2!\'/"'
];
function prependObjectKeys(o, prependText) {
    const converted = {};
    for(const i in o){
        if (!o.hasOwnProperty(i)) continue;
        converted[prependText + i] = o[i];
    }
    return converted;
}
prependObjectKeys.__type = [
    'o',
    'prependText',
    'prependObjectKeys',
    'PP&"LM2!&2"P&"LM/#'
];
function appendObject(origin, extend, prependKeyName = '') {
    const no = prependObjectKeys(extend, prependKeyName);
    for (const [i, v] of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eachPair"])(no)){
        origin[i] = v;
    }
}
appendObject.__type = [
    'origin',
    'extend',
    'prependKeyName',
    ()=>"",
    'appendObject',
    'PP&"LM2!P&"LM2"&2#>$"/%'
];
async function asyncOperation(executor) {
    try {
        return await (Promise.Ω = [
            [
                ()=>executor,
                'value',
                '',
                'resolve',
                'error',
                'reject',
                'Pdi!PPh#!2"$/#2$P"2%$/#2&P$$`J/#qe!!!j'
            ]
        ], new Promise(__assignType(async (resolve, reject)=>{
            try {
                await executor(resolve, reject);
            } catch (e) {
                reject(e);
            }
        }, [
            'resolve',
            'reject',
            '',
            'P"2!"2""/#'
        ])));
    } catch (error) {
        mergeStack(error, createStack());
        throw error;
    }
}
asyncOperation.__type = [
    'value',
    '',
    'resolve',
    'error',
    'reject',
    'executor',
    'asyncOperation',
    'PPP"2!$/"2#P"2$$/"2%P$$`J/"2&"`/\''
];
function fixAsyncOperation(promise) {
    return asyncOperation(__assignType(async (resolve, reject)=>{
        resolve(await promise);
    }, [
        'resolve',
        'reject',
        '',
        'P"2!"2""/#'
    ]));
}
fixAsyncOperation.__type = [
    'promise',
    'fixAsyncOperation',
    'P"`2!"`/"'
];
function mergePromiseStack(promise, stack) {
    stack = stack || createStack();
    promise.then(()=>{}, __assignType((error)=>{
        mergeStack(error, stack || '');
    }, [
        'error',
        '',
        'P"2!"/"'
    ]));
    return promise;
}
mergePromiseStack.__type = [
    'promise',
    'stack',
    'mergePromiseStack',
    'P"`2!&2"8"`/#'
];
function createStack(removeCallee = true) {
    if (Error.stackTraceLimit === 10) Error.stackTraceLimit = 100;
    let stack = new Error().stack || '';
    /*
    at createStack (/file/path)
    at promiseToObservable (/file/path)
    at userLandCode1 (/file/path)
    at userLandCode2 (/file/path)
     */ //remove "at createStack"
    stack = stack.slice(stack.indexOf('   at ') + 6);
    stack = stack.slice(stack.indexOf('   at ') - 1);
    if (removeCallee) {
        //remove callee
        stack = stack.slice(stack.indexOf('   at ') + 6);
        stack = stack.slice(stack.indexOf('   at ') - 1);
    }
    return stack;
}
createStack.__type = [
    'removeCallee',
    ()=>true,
    'createStack',
    'P)2!>"&/#'
];
function mergeStack(error, stack) {
    if (error instanceof Error && error.stack) {
        error.stack += '\n' + stack;
    }
}
mergeStack.__type = [
    ()=>__ΩError,
    'error',
    'stack',
    'mergeStack',
    'Pn!2"&2#"/$'
];
function collectForMicrotask(callback) {
    let items = [];
    let taskScheduled = false;
    return __assignType((arg)=>{
        items.push(arg);
        if (!taskScheduled) {
            taskScheduled = true;
            queueMicrotask(()=>{
                taskScheduled = false;
                callback(items);
                items.length = 0;
            });
        }
    }, [
        ()=>callback,
        'args',
        '',
        'arg',
        'PPdi!Ph"!F2"$/#qe!!!j2$"/#'
    ]);
}
collectForMicrotask.__type = [
    'args',
    '',
    'callback',
    'arg',
    'collectForMicrotask',
    'PP"F2!$/"2#P"2$$/"/%'
];
function time() {
    return Date.now() / 1000;
}
time.__type = [
    'time',
    'P\'/!'
];
function getPathValue(bag, parameterPath, defaultValue) {
    if (parameterPath === '' || parameterPath === undefined) return bag;
    if (isSet(bag[parameterPath])) {
        return bag[parameterPath];
    }
    const result = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].get(bag, parameterPath);
    return isSet(result) ? result : defaultValue;
}
getPathValue.__type = [
    'bag',
    'parameterPath',
    'defaultValue',
    'getPathValue',
    'PP&"LM2!&2""2#8"/$'
];
function setPathValue(bag, parameterPath, value) {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].set(bag, parameterPath, value);
}
setPathValue.__type = [
    'bag',
    'parameterPath',
    'value',
    'setPathValue',
    'P%2!&2""2#"/$'
];
function deletePathValue(bag, parameterPath) {
    __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$dot$2d$prop$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].delete(bag, parameterPath);
}
deletePathValue.__type = [
    'bag',
    'parameterPath',
    'deletePathValue',
    'P%2!&2""/#'
];
function humanBytes(bytes, si = false) {
    const thresh = si ? 1000 : 1024;
    if (Math.abs(bytes) < thresh) {
        return bytes + ' B';
    }
    const units = si ? [
        'kB',
        'MB',
        'GB',
        'TB',
        'PB',
        'EB',
        'ZB',
        'YB'
    ] : [
        'KiB',
        'MiB',
        'GiB',
        'TiB',
        'PiB',
        'EiB',
        'ZiB',
        'YiB'
    ];
    let u = -1;
    do {
        bytes /= thresh;
        ++u;
    }while (Math.abs(bytes) >= thresh && u < units.length - 1)
    return bytes.toFixed(2) + ' ' + units[u];
}
humanBytes.__type = [
    'bytes',
    'si',
    ()=>false,
    'humanBytes',
    'P\'2!)2">#&/$'
];
function getObjectKeysSize(obj) {
    let size = 0;
    for(let i in obj)if (obj.hasOwnProperty(i)) size++;
    return size;
}
getObjectKeysSize.__type = [
    'obj',
    'getObjectKeysSize',
    'P%2!\'/"'
];
function isConstructable(fn) {
    try {
        new new Proxy(fn, {
            construct: ()=>({})
        });
        return true;
    } catch (err) {
        return false;
    }
}
isConstructable.__type = [
    'fn',
    'isConstructable',
    'P"2!)/"'
];
function isPrototypeOfBase(prototype, base) {
    if (!prototype) return false;
    if (prototype === base) return true;
    let currentProto = Object.getPrototypeOf(prototype);
    while(currentProto && currentProto !== Object.prototype){
        if (currentProto === base) return true;
        currentProto = Object.getPrototypeOf(currentProto);
    }
    return false;
}
isPrototypeOfBase.__type = [
    ()=>__ΩAbstractClassType,
    'prototype',
    ()=>__ΩClassType,
    'base',
    'isPrototypeOfBase',
    'PPn!-J2"n#2$)/%'
];
function getParentClass(classType) {
    const parent = Object.getPrototypeOf(classType);
    if (parent === Object.prototype || Object.getPrototypeOf(parent) === Object.prototype) return;
    return parent;
}
getParentClass.__type = [
    ()=>__ΩClassType,
    'classType',
    ()=>__ΩClassType,
    'getParentClass',
    'Pn!2"Pn#-J/$'
];
function getInheritanceChain(classType) {
    const chain = [
        classType
    ];
    let current = classType;
    while(current = getParentClass(current)){
        chain.push(current);
    }
    return chain;
}
getInheritanceChain.__type = [
    ()=>__ΩClassType,
    'classType',
    ()=>__ΩClassType,
    'getInheritanceChain',
    'Pn!2"n#F/$'
];
function inDebugMode() {
    return typeof v8debug === 'object' || /--debug|--inspect/.test(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].execArgv.join(' '));
}
inDebugMode.__type = [
    'inDebugMode',
    'P"/!'
];
function createDynamicClass(name, base) {
    if (base) {
        let baseName = getClassName(base);
        if (baseName === name) baseName += 'Base';
        return new Function(baseName, `return class ${name} extends ${baseName} {}`)(base);
    }
    return new Function(`return class ${name} {}`)();
}
createDynamicClass.__type = [
    'name',
    ()=>__ΩClassType,
    'base',
    ()=>__ΩClassType,
    'createDynamicClass',
    'P&2!n"2#8n$/%'
];
function isIterable(value) {
    return isArray(value) || value instanceof Set || value instanceof Map;
}
isIterable.__type = [
    'value',
    'isIterable',
    'P"2!)/"'
];
function iterableSize(value) {
    return isArray(value) ? value.length : value.size || 0;
}
iterableSize.__type = [
    'value',
    'iterableSize',
    'PP#F#D##EJ2!\'/"'
];
function getCurrentFileName() {
    const e = new Error;
    const initiator = e.stack.split('\n').slice(2, 3)[0];
    let path = /(?<path>[^(\s]+):[0-9]+:[0-9]+/.exec(initiator).groups.path;
    if (path.indexOf('file') >= 0) {
        path = new URL(path).pathname;
    }
    if ("TURBOPACK compile-time falsy", 0) {
        "TURBOPACK unreachable";
    }
    return path;
}
getCurrentFileName.__type = [
    'getCurrentFileName',
    'P&/!'
];
function escapeRegExp(string) {
    return string.replace(/[.*+?^${}()|[\]\\]/g, '\\$&'); // $& means the whole matched string
}
escapeRegExp.__type = [
    'string',
    'escapeRegExp',
    'P&2!&/"'
];
function hasProperty(object, property) {
    return Object.prototype.hasOwnProperty.call(object, property);
}
hasProperty.__type = [
    'object',
    'property',
    'hasProperty',
    'P"2!"2")/#'
];
function* range(startOrLength, stop = 0, step = 1) {
    let i = startOrLength;
    let end = stop;
    if (stop === 0) {
        i = 0;
        end = startOrLength;
    }
    for(; i < end; i += step){
        yield i;
    }
}
range.__type = [
    'startOrLength',
    'stop',
    ()=>0,
    'step',
    ()=>1,
    ()=>__ΩIterableIterator,
    'range',
    'P\'2!\'2">#\'2$>%\'o&"/\''
];
function rangeArray(startOrLength, stop = 0, step = 1) {
    return [
        ...range(startOrLength, stop, step)
    ];
}
rangeArray.__type = [
    'startOrLength',
    'stop',
    ()=>0,
    'step',
    ()=>1,
    'rangeArray',
    'P\'2!\'2">#\'2$>%\'F/&'
];
function zip(...args) {
    const minLength = Math.min(...args.map(__assignType((arr)=>arr.length, [
        'arr',
        '',
        'P"2!"/"'
    ])));
    //@ts-ignore
    return Array.from({
        length: minLength
    }).map(__assignType((_, i)=>args.map(__assignType((arr)=>arr[i], [
            'arr',
            '',
            'P"2!"/"'
        ])), [
        '_',
        'i',
        '',
        'P"2!"2""/#'
    ]));
}
zip.__type = [
    'args',
    'zip',
    'l:e"!R!RPd"e#!fh!!Fqk#\'QRP"@2!Pd"gN)!F/"'
];
function forwardTypeArguments(x, y) {
    y.Ω = x.Ω;
}
forwardTypeArguments.__type = [
    'x',
    'y',
    'forwardTypeArguments',
    'P"2!"2"$/#'
];
function formatError(error, withStack = false) {
    if (error && error.name === 'AggregateError' && 'errors' in error) {
        return `${withStack && error.stack || `AggregateError: ${error.message}`}\nErrors:\n${error.errors.map(__assignType((v)=>formatError(v), [
            'v',
            '',
            'P"2!"/"'
        ])).join('\n')}`;
    }
    if (error instanceof Error) {
        let current = error.cause;
        let errors = [
            withStack && error.stack || error.message || 'Error'
        ];
        while(current){
            errors.push(`cause by ${formatError(current)}`);
            current = current.cause;
        }
        return errors.join('\n');
    }
    if (withStack && error.stack) return error.stack;
    return String(error);
}
formatError.__type = [
    'error',
    'withStack',
    ()=>false,
    'formatError',
    'P"2!)2">#&/$'
];
function assertInstanceOf(object, constructor) {
    if (!(object instanceof constructor)) {
        throw new Error(`Object ${getClassName(object)} is not an instance of the expected class ${getClassName(constructor)}`);
    }
}
assertInstanceOf.__type = [
    'object',
    'args',
    'new',
    'constructor',
    'assertInstanceOf',
    'P"2!PP"@2""1#M2$!/%'
];
function assertDefined(value) {
    if (value === null || value === undefined) {
        throw new Error(`Value is not defined`);
    }
}
assertDefined.__type = [
    'value',
    'assertDefined',
    'P"2!!/"'
]; //# sourceMappingURL=core.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "toFastProperties": (()=>toFastProperties)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$to$2d$fast$2d$properties$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/to-fast-properties/index.js [app-client] (ecmascript)");
;
function toFastProperties(obj) {
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$to$2d$fast$2d$properties$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(obj);
}
toFastProperties.__type = [
    'obj',
    'toFastProperties',
    'P"2!"/"'
]; //# sourceMappingURL=perf.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/decorators.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "log": (()=>log),
    "singleStack": (()=>singleStack),
    "stack": (()=>stack)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-client] (ecmascript)");
const __ΩPropertyDescriptor = [
    'configurable',
    'enumerable',
    'value',
    'writable',
    'get',
    'v',
    'set',
    'PropertyDescriptor',
    'P)4!8)4"8"4#8)4$8P"1%P"2&$1\'Mw(y'
];
const __ΩTypedPropertyDescriptor = [
    'T',
    'enumerable',
    'configurable',
    'writable',
    'value',
    '',
    'get',
    'set',
    'TypedPropertyDescriptor',
    'b!P)4"8)4#8)4$8e"!4%8Pe#!/&4\'8Pe#!2%$/&4(8Mw)y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
function log() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        descriptor.value = __assignType(function(...args) {
            const a = args.map(__assignType((v)=>typeof v, [
                'v',
                '',
                'P"2!"/"'
            ])).join(',');
            console.info((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(target) + '::' + String(propertyKey) + '(' + a + ')');
            return orig.apply(this, args);
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
        return descriptor;
    }, [
        'target',
        'propertyKey',
        ()=>__ΩPropertyDescriptor,
        'descriptor',
        '',
        'P%2!P&+J2"n#2$"/%'
    ]);
}
log.__type = [
    'log',
    'P"/!'
];
function stack() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        // console.log('sync patch', propertyKey, constructor.prototype[propertyKey]);
        descriptor.value = __assignType(async function(...args) {
            const name = '__c_' + propertyKey;
            if (this[name] === undefined) {
                this[name] = null;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFastProperties"])(this);
            }
            while(this[name]){
                await this[name];
            }
            this[name] = orig.apply(this, args);
            try {
                return await this[name];
            } finally{
                this[name] = null;
            }
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
    }, [
        'target',
        'propertyKey',
        ()=>__ΩTypedPropertyDescriptor,
        'args',
        '',
        'descriptor',
        'P%2!&2"P"@2$"`/%o#"2&"/%'
    ]);
}
stack.__type = [
    'stack',
    'P"/!'
];
function singleStack() {
    return __assignType(function(target, propertyKey, descriptor) {
        const orig = descriptor.value;
        descriptor.value = __assignType(async function(...args) {
            const name = '__sc_' + propertyKey;
            if (this[name] === undefined) {
                this[name] = null;
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFastProperties"])(this);
            }
            if (this[name]) {
                return await this[name];
            }
            this[name] = orig.apply(this, args);
            try {
                return await this[name];
            } finally{
                this[name] = null;
            }
        }, [
            'args',
            '',
            'P"@2!"/"'
        ]);
    }, [
        'target',
        'propertyKey',
        ()=>__ΩTypedPropertyDescriptor,
        'args',
        '',
        'descriptor',
        'P%2!&2"P"@2$"`/%o#"2&"/%'
    ]);
}
singleStack.__type = [
    'singleStack',
    'P"/!'
]; //# sourceMappingURL=decorators.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/enum.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "getEnumKeyLabelMap": (()=>getEnumKeyLabelMap),
    "getEnumLabel": (()=>getEnumLabel),
    "getEnumLabels": (()=>getEnumLabels),
    "getEnumValues": (()=>getEnumValues),
    "getValidEnumValue": (()=>getValidEnumValue),
    "isValidEnumValue": (()=>isValidEnumValue)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-client] (ecmascript)");
const __ΩObject = [
    ()=>Function,
    'constructor',
    'toString',
    'toLocaleString',
    0,
    'valueOf',
    ()=>__ΩPropertyKey,
    'v',
    'hasOwnProperty',
    0,
    'isPrototypeOf',
    ()=>__ΩPropertyKey,
    'propertyIsEnumerable',
    'Object',
    'PPu!4"P&1#P&1$Pn%1&Pn\'2()1)Pn*2()1+Pn,2()1-Mw.y'
];
const __ΩPropertyKey = [
    'PropertyKey',
    'P&\'+Jw!y'
];
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
const cacheEnumLabels = (Map.Ω = [
    [
        ()=>__ΩObject,
        'n!'
    ],
    [
        '&F'
    ]
], new Map());
function getEnumLabel(enumType, id) {
    for (const i of (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["eachKey"])(enumType)){
        if (id === enumType[i]) {
            return i;
        }
    }
}
getEnumLabel.__type = [
    'enumType',
    'id',
    'getEnumLabel',
    'PP&"LM2!"2""/#'
];
function getEnumLabels(enumDefinition) {
    let value = cacheEnumLabels.get(enumDefinition);
    if (!value) {
        value = Object.keys(enumDefinition).filter(__assignType((v)=>!Number.isFinite(parseInt(v, 10)), [
            'v',
            '',
            'P"2!"/"'
        ]));
        cacheEnumLabels.set(enumDefinition, value);
    }
    return value;
}
getEnumLabels.__type = [
    'enumDefinition',
    'getEnumLabels',
    'P"2!"/"'
];
const cacheEnumKeys = (Map.Ω = [
    [
        ()=>__ΩObject,
        'n!'
    ],
    [
        '&F'
    ]
], new Map());
function getEnumValues(enumDefinition) {
    let value = cacheEnumKeys.get(enumDefinition);
    if (!value) {
        value = Object.values(enumDefinition).filter(__assignType((v)=>{
            return 'number' !== typeof enumDefinition[v];
        }, [
            'v',
            '',
            'P"2!"/"'
        ]));
        cacheEnumKeys.set(enumDefinition, value);
    }
    return value;
}
getEnumValues.__type = [
    'enumDefinition',
    'getEnumValues',
    'P"2!"F/"'
];
function getEnumKeyLabelMap(enumDefinition) {
    const map = (Map.Ω = [
        [
            '"'
        ],
        [
            '&'
        ]
    ], new Map());
    const keys = getEnumValues(enumDefinition);
    const labels = getEnumLabels(enumDefinition);
    for(let i = 0; i < keys.length; i++){
        map.set(keys[i], labels[i]);
    }
    return map;
}
getEnumKeyLabelMap.__type = [
    'enumDefinition',
    'getEnumKeyLabelMap',
    'P"2!"&E/"'
];
function isValidEnumValue(enumDefinition, value, allowLabelsAsValue = false) {
    if (allowLabelsAsValue) {
        const labels = getEnumLabels(enumDefinition);
        if (-1 !== labels.indexOf(String(value))) {
            return true;
        }
    }
    const values = getEnumValues(enumDefinition);
    return -1 !== values.indexOf(+value) || -1 !== values.indexOf(value) || -1 !== values.indexOf(String(value));
}
isValidEnumValue.__type = [
    'enumDefinition',
    'value',
    'allowLabelsAsValue',
    'isValidEnumValue',
    'P"2!"2""2#"/$'
];
function getValidEnumValue(enumDefinition, value, allowLabelsAsValue = false) {
    if (allowLabelsAsValue) {
        const labels = getEnumLabels(enumDefinition);
        if (-1 !== labels.indexOf(String(value))) {
            return enumDefinition[String(value)];
        }
    }
    const values = getEnumValues(enumDefinition);
    if (-1 !== values.indexOf(value)) {
        return value;
    }
    if (-1 !== values.indexOf(+value)) {
        return +value;
    }
    if (-1 !== values.indexOf(String(value))) {
        return String(value);
    }
}
getValidEnumValue.__type = [
    'enumDefinition',
    'value',
    'allowLabelsAsValue',
    'getValidEnumValue',
    'P"2!"2""2#"/$'
]; //# sourceMappingURL=enum.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/timer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "Timer": (()=>Timer)
});
class Timer {
    constructor(){
        this.timeoutTimers = []; //any necessary to be compatible with NodeJS/Browser env
    }
    setTimeout(cb, timeout) {
        const timer = setTimeout(cb, timeout);
        this.timeoutTimers.push(timer);
        return timer;
    }
    /**
     * Clears all timers at once.
     */ clear() {
        for (const timeout of this.timeoutTimers){
            clearTimeout(timeout);
        }
    }
}
Timer.__type = [
    'timeoutTimers',
    function() {
        return [];
    },
    '',
    'cb',
    'timeout',
    'setTimeout',
    'clear',
    'Timer',
    '"F3!<>"PP$/#2$\'2%"0&P"0\'5w('
]; //# sourceMappingURL=timer.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/**
 * @public
 */ __turbopack_esm__({
    "arrayClear": (()=>arrayClear),
    "arrayHasItem": (()=>arrayHasItem),
    "arrayMoveItem": (()=>arrayMoveItem),
    "arrayRemoveItem": (()=>arrayRemoveItem)
});
function arrayHasItem(array, item) {
    return -1 !== array.indexOf(item);
}
arrayHasItem.__type = [
    'array',
    'item',
    'arrayHasItem',
    'P"F2!"2")/#'
];
function arrayClear(array) {
    const found = array.length;
    array.length = 0;
    return found;
}
arrayClear.__type = [
    'array',
    'arrayClear',
    'P"F2!\'/"'
];
function arrayRemoveItem(array, item) {
    const index = array.indexOf(item);
    if (-1 !== index) {
        array.splice(index, 1);
        return true;
    }
    return false;
}
arrayRemoveItem.__type = [
    'array',
    'item',
    'arrayRemoveItem',
    'P"F2!"2")/#'
];
function arrayMoveItem(array, item, move) {
    if (move === 0) return array;
    const index = array.indexOf(item);
    if (-1 !== index) {
        const newIndex = index + move;
        array.splice(index, 1);
        if (newIndex <= 0) {
            array.unshift(item);
        } else if (newIndex >= array.length) {
            array.push(item);
        } else {
            array.splice(newIndex, 0, item);
        }
    }
    return array;
}
arrayMoveItem.__type = [
    'array',
    'item',
    'move',
    'arrayMoveItem',
    'P"2!"2"\'2#"/$'
]; //# sourceMappingURL=array.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/process-locker.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Mutex": (()=>Mutex),
    "ProcessLock": (()=>ProcessLock),
    "ProcessLocker": (()=>ProcessLocker)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)");
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
const LOCKS = {};
class ProcessLock {
    constructor(id){
        this.id = id;
        this.holding = false;
    }
    async acquire(ttl = 0, timeout = 0) {
        if (this.holding) {
            throw new Error('Lock already acquired');
        }
        return Promise.Ω = [
            [
                '$'
            ]
        ], new Promise(__assignType((resolve, reject)=>{
            if (LOCKS[this.id]) {
                let timeoutId;
                const ourTake = ()=>{
                    LOCKS[this.id].time = Date.now() / 1000;
                    clearTimeout(timeoutId);
                    this.holding = true;
                    resolve();
                    if (ttl) {
                        this.ttlTimeout = setTimeout(()=>{
                            this.unlock();
                        }, ttl * 1000);
                    }
                };
                if (timeout > 0) {
                    timeoutId = setTimeout(()=>{
                        if (LOCKS[this.id]) (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(LOCKS[this.id].queue, ourTake);
                        //reject is never handled when resolve is called first
                        reject('Lock timed out ' + this.id);
                    }, timeout * 1000);
                }
                LOCKS[this.id].queue.push(ourTake);
            } else {
                LOCKS[this.id] = {
                    time: Date.now() / 1000,
                    queue: []
                };
                this.holding = true;
                resolve();
                if (ttl) {
                    this.ttlTimeout = setTimeout(()=>{
                        this.unlock();
                    }, ttl * 1000);
                }
            }
        }, [
            'resolve',
            'reject',
            '',
            'P"2!"2""/#'
        ]));
    }
    isLocked() {
        return this.holding;
    }
    tryLock(ttl = 0) {
        this.holding = false;
        if (!LOCKS[this.id]) {
            LOCKS[this.id] = {
                time: Date.now() / 1000,
                queue: []
            };
            this.holding = true;
            if (ttl) {
                this.ttlTimeout = setTimeout(()=>{
                    this.unlock();
                }, ttl * 1000);
            }
        }
        return this.holding;
    }
    unlock() {
        clearTimeout(this.ttlTimeout);
        if (!this.holding) {
            return;
        }
        this.holding = false;
        if (LOCKS[this.id].queue.length) {
            //there are other locks waiting.
            //so we pick the next, and call it
            const next = LOCKS[this.id].queue.shift();
            next();
        } else {
            //nobody is waiting, so we just delete that lock
            delete LOCKS[this.id];
        }
    }
}
ProcessLock.__type = [
    'ttlTimeout',
    'id',
    'constructor',
    'ttl',
    ()=>0,
    'timeout',
    ()=>0,
    'acquire',
    'isLocked',
    ()=>0,
    'tryLock',
    'unlock',
    'ProcessLock',
    '"3!<P&2":9"0#P\'2$>%\'2&>\'"0(P"0)P\'2$>*"0+P"0,5w-'
];
class ProcessLocker {
    /**
     *
     * @param id
     * @param ttl optional defines when the times automatically unlocks.
     * @param timeout if after `timeout` seconds the lock isn't acquired, it throws an error.
     */ async acquireLock(id, ttl = 0, timeout = 0) {
        const lock = new ProcessLock(id);
        await lock.acquire(ttl, timeout);
        return lock;
    }
    async tryLock(id, ttl = 0) {
        const lock = new ProcessLock(id);
        if (lock.tryLock(ttl)) {
            return lock;
        }
        return;
    }
    isLocked(id) {
        return !!LOCKS[id];
    }
}
ProcessLocker.__type = [
    'id',
    'ttl',
    ()=>0,
    'timeout',
    ()=>0,
    ()=>ProcessLock,
    'acquireLock',
    ()=>0,
    ()=>ProcessLock,
    'tryLock',
    'isLocked',
    'ProcessLocker',
    'P&2!\'2">#\'2$>%P7&`0\'P&2!\'2">(PP7)-J`0*P&2!)0+5w,'
];
class Mutex {
    unlock() {
        if (this.resolver) this.resolver();
        this.promise = undefined;
    }
    async lock() {
        while(this.promise){
            await this.promise;
        }
        this.promise = new Promise(__assignType((resolver)=>{
            this.resolver = resolver;
        }, [
            'resolver',
            '',
            'P"2!"/"'
        ]));
    }
}
Mutex.__type = [
    'promise',
    ()=>Function,
    'resolver',
    'unlock',
    'lock',
    'Mutex',
    '$`3!8<Pu"3#8<P$0$P$`0%5w&'
]; //# sourceMappingURL=process-locker.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/network.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "ParsedHost": (()=>ParsedHost),
    "parseHost": (()=>parseHost)
});
class ParsedHost {
    constructor(){
        this.host = '127.0.0.1';
        this.port = 0;
        this.unixSocket = '';
    }
    get isUnixSocket() {
        return this.unixSocket !== '';
    }
    get isHostname() {
        return this.unixSocket === '';
    }
    get hostWithIp() {
        return this.host + (this.port ? (this.host && ':') + this.port : '');
    }
    toString() {
        return this.isUnixSocket ? this.unixSocket : this.hostWithIp;
    }
    getWebSocketUrl(secure = false) {
        const protocol = secure ? 'wss' : 'ws';
        if (this.isUnixSocket) {
            return `${protocol}+unix://${this.unixSocket}`;
        }
        return `${protocol}://${this.hostWithIp}`;
    }
    getHttpUrl(secure = false) {
        if (this.isUnixSocket) {
            return `file://${this.unixSocket}`;
        }
        const protocol = secure ? 'https' : 'http';
        return `${protocol}://${this.hostWithIp}`;
    }
}
ParsedHost.__type = [
    'host',
    function() {
        return '127.0.0.1';
    },
    'port',
    function() {
        return 0;
    },
    'unixSocket',
    function() {
        return '';
    },
    'toString',
    'secure',
    ()=>false,
    'getWebSocketUrl',
    ()=>false,
    'getHttpUrl',
    'ParsedHost',
    '&3!>"\'3#>$&3%>&!!!P&0\'P)2(>)"0*P)2(>+"0,5w-'
];
function parseHost(hostWithIpOrUnixPath) {
    const parsedHost = new ParsedHost();
    if (hostWithIpOrUnixPath.includes('/') || hostWithIpOrUnixPath.includes('\\') || hostWithIpOrUnixPath.endsWith('.sock')) {
        parsedHost.unixSocket = hostWithIpOrUnixPath;
    } else {
        if (hostWithIpOrUnixPath.includes(':')) {
            const [host, port] = hostWithIpOrUnixPath.split(':');
            if (host) parsedHost.host = host;
            if (port) parsedHost.port = parseInt(port, 10);
        } else {
            if (hostWithIpOrUnixPath) parsedHost.host = hostWithIpOrUnixPath;
        }
    }
    return parsedHost;
}
parseHost.__type = [
    'hostWithIpOrUnixPath',
    ()=>ParsedHost,
    'parseHost',
    'P&2!P7"/#'
]; //# sourceMappingURL=network.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/indent.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "indent": (()=>indent)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const indent = __assignType(function(n) {
    function t(n, t) {
        var e, r = [];
        for(e = 0; e < n.length; e++)r.push(t(n[e], e, n));
        return r;
    }
    t.__type = [
        'n',
        't',
        'P"2!"2""/"'
    ];
    function e(n, t) {
        var e, r;
        for(e = 0; e < n.length; e++)if (r = t(n[e], e, n)) return r;
        return !1;
    }
    e.__type = [
        'n',
        't',
        'e',
        'P"2!"2""/#'
    ];
    function r(n, t, e) {
        if (d[n]) return d[n];
        var r = [];
        d[n] = r, e = e || "";
        for(var a = 0; a < t.length; a++)t[a].a.indexOf(n.toLowerCase()) !== -1 && e.indexOf(t[a].b) === -1 && r.push(t[a]);
        return r;
    }
    r.__type = [
        'n',
        't',
        'e',
        'r',
        'P"2!"2""2#"/$'
    ];
    function a(n, a, o) {
        function h(n) {
            P = n.cursor;
            var t = n.rule, e = E + 1 + (t.c || 0);
            n.line = e, Z.push(n), t.d && z[e]++, t.e && (S = r(t.e, g)), t.f && F.push(null), t.callback && t.callback(n, z, O);
        }
        h.__type = [
            'n',
            'h',
            'P"2!"/"'
        ];
        function d() {
            var n = Z.pop(), t = n.line, e = n.rule;
            if (e.d) {
                var r = "function" == typeof e.g ? e.g(b) : e.g, a = r || 0 !== b.matchIndex ? 1 : 0;
                O[E + a] && O[E + a].push(t);
            }
            e.e && (S = null), e.f && F.pop(), F[F.length - 1] = n;
        }
        d.__type = [
            'd',
            'P"/!'
        ];
        function m(n, r, a) {
            n = n.substring(a, n.length);
            for(var l, s, i, c = null, u = n.length, o = F[F.length - 1], h = o ? o.rule.b : "", d = t(Z, __assignType(function(n) {
                return n.rule.b;
            }, [
                'n',
                '',
                'P"2!"/"'
            ])).join("\n"), m = 0; m < r.length; m++)i = r[m], i.h && e(i.h, __assignType(function(n) {
                return d.indexOf(n) != -1;
            }, [
                'n',
                '',
                'P"2!"/"'
            ])) || (!i.i || h && i.i.indexOf(h) !== -1) && (s = f(n, i.j, i), s.matchIndex != -1 && s.matchIndex < u && (!i.k || 0 === a) && (u = s.matchIndex, l = s, c = i));
            return {
                rule: c,
                relativeIndex: c ? u : -1,
                matchIndex: c ? u + a : -1,
                cursor: c ? a + l.cursor : -1,
                state: l ? l.state : {},
                lastMatch: o
            };
        }
        m.__type = [
            'n',
            'r',
            'a',
            'm',
            'P"2!"2""2#"/$'
        ];
        function j(n, t, e, r) {
            n = n.substr(e, n.length);
            var a = t.rule, l = f(n, a.l, a, t.state, r), s = a.m ? l.cursor : l.matchIndex;
            return {
                endPatternIndex: l.endPatternIndex,
                matchIndex: l.matchIndex === -1 ? -1 : l.matchIndex + e,
                cursor: s === -1 ? -1 : s + e,
                state: l.state
            };
        }
        j.__type = [
            'n',
            't',
            'e',
            'r',
            'j',
            'P"2!"2""2#"2$"/%'
        ];
        n = n || "";
        var b, x, v, p, I, y = o && null != o.tabString ? o.tabString : "\t", k = n.split(/[\r]?\n/gi), w = k.length, A = s(w), z = s(w), O = l(w), Z = [], F = [
            null
        ], E = 0, P = 0, S = null;
        for(o && (o.debug = {
            buffers: {
                ignore: A,
                indent: z,
                dedent: O,
                active: Z
            }
        }); E < w;){
            if (v = k[E].trim(), p = u(v) + "\r\n", I = Z[Z.length - 1], x = m(p, S || a, P), Z.length) {
                if (b = j(p, I, P, x), b.matchIndex === -1) {
                    if (I.rule.n) {
                        A[E] = 1, E++, P = 0;
                        continue;
                    }
                } else if (I.rule.n || x.matchIndex === -1 || b.matchIndex <= x.matchIndex) {
                    d(), P = b.cursor;
                    continue;
                }
            }
            x.matchIndex !== -1 ? h(x) : (E++, P = 0);
        }
        var $, q, R, T, M, C, H = 0, L = i(z), _ = s(w), B = [];
        for(M = 0; M < w; M++){
            for(q = O[M], T = 0, C = 0; C < q.length; C++)R = q[C], R < 0 ? -R !== M && (_[-R]++, T += 1) : L[R] > 0 && (L[R]--, T += R !== M);
            $ = L[M], _[M] = $ > T ? 1 : $ < T ? $ - T : 0, L[M] = $ > 0 ? 1 : 0;
        }
        for(M = 0; M < w; M++)1 === A[M - 1] && 1 === A[M] ? B.push(k[M]) : (H += _[M] || 0, B.push((H > 0 ? c(y, H) : "") + k[M].trim()));
        return B.join("\r\n");
    }
    a.__type = [
        'n',
        'a',
        'o',
        'P"2!"2""2#"/"'
    ];
    function l(n) {
        for(var t = new Array(n), e = 0; e < n; e++)t[e] = [];
        return t;
    }
    l.__type = [
        'n',
        'l',
        'P"2!"/"'
    ];
    function s(t) {
        if (n.Int16Array) return new Int16Array(t);
        for(var e = new Array(t), r = 0; r < t; r++)e[r] = 0;
        return e;
    }
    s.__type = [
        't',
        's',
        'P"2!"/"'
    ];
    function i(n) {
        for(var t = s(n.length), e = 0; e < n.length; e++)t[e] = n[e];
        return t;
    }
    i.__type = [
        'n',
        'i',
        'P"2!"/"'
    ];
    function c(n, t) {
        return new Array(t + 1).join(n);
    }
    c.__type = [
        'n',
        't',
        'c',
        'P"2!"2""/#'
    ];
    function u(n) {
        return n.replace(/\\(u[0-9A-Za-z]{4}|u\{[0-9A-Za-z]{1,6}]\}|x[0-9A-Za-z]{2}|.)/g, "0");
    }
    u.__type = [
        'n',
        'u',
        'P"2!"/"'
    ];
    function o(n, t, e) {
        var r = n.lastMatch;
        r && "=" === r.rule.b && e[n.line].push(-r.line);
    }
    o.__type = [
        'n',
        't',
        'e',
        'o',
        'P"2!"2""2#"/$'
    ];
    function h(n, t, e, r) {
        var a;
        if (e.newline) {
            if (a = n.search(/[;,=]?\r*\n/), a !== -1) return {
                matchIndex: a,
                length: 1
            };
        } else a = n.search(/[^\s\r\n\{\(\[]/), e.newline = a !== -1 && (a <= r.relativeIndex || r.relativeIndex === -1);
        return null;
    }
    h.__type = [
        'n',
        't',
        'e',
        'r',
        'h',
        'P"2!"2""2#"2$"/%'
    ];
    function f(n, t, e, r, a) {
        r = r || {};
        for(var l, s, i = -1, c = 0, u = 0; u < t.length; u++)if (s = t[u], "function" == typeof s) {
            if (l = s(n, e, r, a)) {
                i = l.matchIndex, c = l.length;
                break;
            }
        } else if (l = n.match(s)) {
            i = n.search(s), c = l[0].length;
            break;
        }
        return {
            endPatternIndex: u,
            matchIndex: i,
            cursor: i + c,
            state: r
        };
    }
    f.__type = [
        'n',
        't',
        'e',
        'r',
        'a',
        'f',
        'P"2!"2""2#"2$"2%"/&'
    ];
    var d = {};
    String.prototype.trim || (String.prototype.trim = function() {
        return this.replace(/^[\s\uFEFF\xA0]+|[\s\uFEFF\xA0]+$/g, "");
    });
    var m = /\r*\n/, j = [
        "tag",
        "void-tags",
        "html-tag"
    ], g = [
        {
            a: "js html",
            b: "comment",
            j: [
                /\<\!\-\-/
            ],
            l: [
                /\-\-\>/
            ],
            n: !0,
            m: !0
        },
        {
            a: "html",
            b: "doctype",
            j: [
                /\<\!doctype html>/i
            ],
            l: [
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "void-tags",
            j: [
                /\<(area|base|br|col|command|embed|hr|img|input|keygen|link|menuitem|meta|param|source|track|wbr)/i
            ],
            l: [
                />/
            ],
            d: !0,
            m: !0
        },
        {
            a: "html",
            b: "mode switch js",
            j: [
                __assignType(function(n) {
                    var t = /<script[\s>].*/i, e = /<\/script>/i, r = t.exec(n), a = e.exec(n);
                    return r && (!a || a.index < r.index) ? {
                        matchIndex: r.index,
                        length: r[0].length
                    } : null;
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            l: [
                /<\/script>/i
            ],
            e: "js",
            m: !0,
            d: !0,
            f: !0
        },
        {
            a: "html",
            b: "mode switch css",
            j: [
                __assignType(function(n) {
                    var t = /<style[\s>].*/i, e = /<\/style>/i, r = t.exec(n), a = e.exec(n);
                    return r && (!a || a.index < r.index) ? {
                        matchIndex: r.index,
                        length: r[0].length
                    } : null;
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            l: [
                /<\/style>/i
            ],
            e: "css",
            m: !0,
            d: !0,
            f: !0
        },
        {
            a: "html",
            b: "html-tag",
            j: [
                /<html[^A-Za-z0-9]/i
            ],
            l: [
                /<\/html>/i
            ],
            m: !0
        },
        {
            a: "js html",
            b: "tag",
            j: [
                __assignType(function(n, t, e) {
                    var r = /<([A-Za-z][A-Za-z0-9\-\.]*)/, a = n.match(r);
                    return a ? (e.openingTag = a[1], {
                        matchIndex: a.index,
                        length: a[0].length
                    }) : null;
                }, [
                    'n',
                    't',
                    'e',
                    '',
                    'P"2!"2""2#"/$'
                ])
            ],
            l: [
                __assignType(function(n, t, e) {
                    var r = new RegExp("</" + e.openingTag + ">|\\s/>", "i"), a = n.match(r);
                    return a ? {
                        matchIndex: a.index,
                        length: a[0].length
                    } : null;
                }, [
                    'n',
                    't',
                    'e',
                    '',
                    'P"2!"2""2#"/$'
                ])
            ],
            d: !0,
            m: !0
        },
        {
            a: "js",
            b: "line-comment",
            j: [
                /\/\//
            ],
            l: [
                m
            ],
            n: !0
        },
        {
            a: "js css",
            b: "block-comment",
            j: [
                /\/\*/
            ],
            l: [
                /\*\//
            ],
            n: !0,
            m: !0
        },
        {
            a: "js",
            b: "regex",
            j: [
                __assignType(function(n, t) {
                    var e = /[(,=:[!&|?{};][\s]*\/[^\/]|^[\s]*\/[^\/]/, r = n.search(e);
                    if (r != -1) {
                        r = n.indexOf("/", r);
                        var a = n.substring(r + 1), l = f(a, t.l, t);
                        if (l.matchIndex != -1) {
                            a = a.substring(0, l.matchIndex);
                            try {
                                return new RegExp(a), {
                                    matchIndex: r,
                                    length: 1
                                };
                            } catch (s) {
                                return null;
                            }
                        }
                    }
                    return null;
                }, [
                    'n',
                    't',
                    '',
                    'P"2!"2""/#'
                ])
            ],
            l: [
                __assignType(function(n) {
                    for(var t = 0, e = n.indexOf("/"); e != -1;)try {
                        new RegExp(n.substring(0, e));
                        break;
                    } catch (r) {
                        e = n.indexOf("/", t), t = e + 1;
                    }
                    return e === -1 ? null : {
                        matchIndex: e,
                        length: 1
                    };
                }, [
                    'n',
                    '',
                    'P"2!"/"'
                ])
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "quotes",
            h: j,
            j: [
                /"/
            ],
            l: [
                /"/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js html",
            b: "quotes",
            h: j,
            j: [
                /'/
            ],
            l: [
                /'/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /(''|""|``)/
            ],
            l: [
                /./,
                m
            ]
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\"(?=[^"])/
            ],
            l: [
                /[^\\]\"/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\'(?=[^'])/
            ],
            l: [
                /[^\\]\'/,
                m
            ],
            n: !0,
            m: !0
        },
        {
            a: "js css",
            b: "string",
            j: [
                /\`(?=[^`])/
            ],
            l: [
                /[^\\]\`/
            ],
            n: !0,
            m: !0
        },
        {
            a: "js",
            b: "if",
            j: [
                /^if\s*(?=\()/,
                /[\s]+if\s*(?=\()/
            ],
            l: [
                /else[\s]+/,
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js",
            b: "for|while",
            j: [
                /^(for|while)\s*(?=\()/
            ],
            l: [
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js",
            b: "else",
            j: [
                /else[\s]+/
            ],
            l: [
                /if[^\w$]/,
                h,
                /[{;]/
            ],
            d: !0
        },
        {
            a: "js css",
            b: "bracket",
            j: [
                /\(\s*(var|let|const)?\s*/
            ],
            l: [
                /\)/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js",
            b: "dot-chain",
            j: [
                /^\.[A-Za-z$_]/
            ],
            l: [
                /[\.;]/,
                m
            ],
            d: !0,
            k: !0,
            c: -1
        },
        {
            a: "js",
            b: "dot-chain",
            j: [
                /\.\s*\r*\n/
            ],
            l: [
                /[\.;})\]]/,
                /[^\s]\s*\r*\n/
            ],
            d: !0
        },
        {
            a: "js css",
            b: "array",
            j: [
                /\[/
            ],
            l: [
                /\]/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js css",
            b: "block",
            j: [
                /\{/
            ],
            l: [
                /\}/
            ],
            d: !0,
            m: !0,
            f: !0
        },
        {
            a: "js",
            b: "var/let/const",
            j: [
                /(var|let|const)[\s]*\r*\n/
            ],
            l: [
                h
            ],
            d: !0,
            g: !0
        },
        {
            a: "js",
            b: "var/let/const",
            j: [
                /(var|let|const)\s+(?=[\w$])/
            ],
            l: [
                /[,;=]/,
                h
            ],
            d: !0
        },
        {
            a: "js",
            b: "var/let/const",
            i: [
                "var/let/const",
                "="
            ],
            j: [
                /,[\s]*\r*\n/
            ],
            l: [
                /[,;]/,
                h
            ],
            d: !0,
            callback: o
        },
        {
            a: "js",
            b: "var/let/const",
            i: [
                "var/let/const",
                "="
            ],
            j: [
                /^,/
            ],
            l: [
                /[,;]/,
                h
            ],
            k: !0,
            d: !0,
            c: -1,
            callback: o
        },
        {
            a: "js",
            b: "equality",
            j: [
                /[=<>!]=(=)?/
            ],
            l: [
                /./
            ]
        },
        {
            a: "js",
            b: "=",
            h: j,
            j: [
                /=/
            ],
            l: [
                /[,;\)\]}]/,
                m
            ]
        },
        {
            a: "js",
            b: "?:",
            j: [
                /\?/
            ],
            l: [
                /[:;]/
            ],
            g: !0,
            d: !0
        },
        {
            a: "js",
            b: "case",
            j: [
                /^(case|default)[\s:]/
            ],
            l: [
                /break[\s;\r\n]/,
                /^return[\s;\r\n]/,
                /^case[\s]+/,
                /^default[\s:]/,
                /}/
            ],
            g: __assignType(function(n) {
                return n.endPatternIndex <= 1;
            }, [
                'n',
                '',
                'P"2!"/"'
            ]),
            d: !0,
            f: !0
        },
        {
            a: "js",
            b: "semicolon",
            j: [
                /;/
            ],
            l: [
                /./
            ]
        }
    ];
    return {
        css: __assignType(function(n, t) {
            return a(n, r("css", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        js: __assignType(function(n, t) {
            return a(n, r("js", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        ts: __assignType(function(n, t) {
            return a(n, r("js", g), t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ]),
        html: __assignType(function(n, t) {
            var e = t && t.indentHtmlTag ? r("html", g, "html-tag") : r("html", g);
            return a(n, e, t);
        }, [
            'n',
            't',
            '',
            'P"2!"2""/#'
        ])
    };
}, [
    'n',
    '',
    'P"2!"/"'
])(this); //# sourceMappingURL=indent.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "CompilerContext": (()=>CompilerContext)
});
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ // @ts-ignore
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$indent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/indent.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
;
const indentCode = ('undefined' !== typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"] && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].env?.DEBUG || '').includes('deepkit');
class CompilerContext {
    constructor(config = {}){
        this.context = (Map.Ω = [
            [
                '&'
            ],
            [
                '"'
            ]
        ], new Map());
        this.constVariables = (Map.Ω = [
            [
                '"'
            ],
            [
                '&'
            ]
        ], new Map());
        this.maxReservedVariable = 10_000;
        this.reservedNames = (Set.Ω = [
            [
                '&'
            ]
        ], new Set());
        this.variableContext = {};
        /**
         * Code that is executed in the context, but before the actual function is generated.
         * This helps for example to initialize dynamically some context variables.
         */ this.preCode = '';
        this.initialiseVariables = [];
        this.config = {
            indent: false
        };
        Object.assign(this.config, config);
        this.context.set('_context', this.variableContext);
    }
    reserveName(name) {
        for(let i = 0; i < this.maxReservedVariable; i++){
            const candidate = name + '_' + i;
            if (!this.reservedNames.has(candidate)) {
                this.reservedNames.add(candidate);
                return candidate;
            }
        }
        throw new Error(`Too many context variables (max ${this.maxReservedVariable})`);
    }
    set(values) {
        for(const i in values){
            if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasProperty"])(values, i)) {
                continue;
            }
            this.context.set(i, values[i]);
        }
    }
    /**
     * Returns always the same variable name for the same value.
     * The variable name should not be set afterwards.
     */ reserveConst(value, name = 'constVar') {
        if (value === undefined) throw new Error('Can not reserve const for undefined value');
        let constName = this.constVariables.get(value);
        if (!constName) {
            constName = this.reserveName(name);
            this.constVariables.set(value, constName);
            this.context.set(constName, value);
        }
        return constName;
    }
    reserveVariable(name = 'var', value) {
        const freeName = this.reserveName(name);
        if (value === undefined) {
            //to get monomorphic variables, we return a reference to an unassigned object property (which has no type per se)
            return '_context.' + freeName;
        } else {
            //in case when the variable has a value, we simply store it, since it (hopefully) is monomorphic.
            this.context.set(freeName, value);
            return freeName;
        }
    }
    raw(functionCode) {
        try {
            return new Function(...this.context.keys(), `'use strict';\n` + functionCode)(...this.context.values());
        } catch (error) {
            throw new Error('Could not build function: ' + error + functionCode);
        }
    }
    format(code) {
        if (indentCode || this.config.indent) return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$indent$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["indent"].js(code, {
            tabString: '    '
        });
        return code;
    }
    build(functionCode, ...args) {
        functionCode = this.format(`
            'use strict';
            ${this.preCode}
            return function self(${args.join(', ')}){
                'use strict';
                ${functionCode}
            };
        `);
        try {
            return new Function(...this.context.keys(), functionCode)(...this.context.values());
        } catch (error) {
            throw new Error(`Could not build function(${[
                ...this.context.keys()
            ].join(',')}): ` + error + functionCode);
        }
    }
    buildAsync(functionCode, ...args) {
        functionCode = `
            'use strict';
            ${this.preCode}
            return async function self(${args.join(', ')}){
                'use strict';
                ${functionCode}
            };
        `;
        try {
            return new Function(...this.context.keys(), this.format(functionCode))(...this.context.values());
        } catch (error) {
            throw new Error('Could not build function: ' + error + functionCode);
        }
    }
}
CompilerContext.__type = [
    'maxReservedVariable',
    function() {
        return 10_000;
    },
    'variableContext',
    function() {
        return {};
    },
    'preCode',
    function() {
        return '';
    },
    'initialiseVariables',
    function() {
        return [];
    },
    'indent',
    'config',
    function() {
        return {
            indent: false
        };
    },
    ()=>__ΩPartial,
    ()=>CompilerContext,
    "config",
    ()=>({}),
    'constructor',
    'name',
    'reserveName',
    'values',
    'set',
    'value',
    ()=>"constVar",
    'reserveConst',
    ()=>"var",
    'reserveVariable',
    'functionCode',
    ()=>Function,
    'raw',
    'code',
    'format',
    'args',
    'build',
    ()=>Function,
    'buildAsync',
    'CompilerContext',
    '\'3!>"P&"LM3#<>$&3%>&&F3\'>(P)4)M3*>+PP7-..fo,"2*>/"00P&21&02PP&"LM23"04P"25&21>6&07P&21>8"258&09P&2:Pu;0<P&2=&0><P&2:&@2?"0@P&2:&@2?PuA0B5wC'
]; //# sourceMappingURL=compiler.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "capitalize": (()=>capitalize),
    "indent": (()=>indent)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function indent(indentation, prefix = '') {
    return __assignType((str = '')=>{
        return ' '.repeat(indentation) + str.replace(/\n/g, '\n' + ' '.repeat(indentation) + prefix);
    }, [
        'str',
        ()=>"",
        '',
        'P&2!>""/#'
    ]);
}
indent.__type = [
    'indentation',
    'prefix',
    ()=>"",
    'indent',
    'P\'2!&2">#"/$'
];
function capitalize(string) {
    return string.charAt(0).toUpperCase() + string.slice(1);
}
capitalize.__type = [
    'string',
    'capitalize',
    'P&2!&/"'
]; //# sourceMappingURL=string.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/emitter.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({
    "AsyncEventEmitter": (()=>AsyncEventEmitter),
    "EmitterEvent": (()=>EmitterEvent),
    "EventEmitter": (()=>EventEmitter),
    "__ΩAsyncEventSubscription": (()=>__ΩAsyncEventSubscription),
    "__ΩEventSubscription": (()=>__ΩEventSubscription)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)");
;
const __ΩAsyncSubscriber = [
    'T',
    'event',
    '',
    'AsyncSubscriber',
    'b!Pe"!2"P$`$J/#w$y'
];
const __ΩSubscriber = [
    'T',
    'event',
    '',
    'Subscriber',
    'b!Pe"!2"P$`$J/#w$y'
];
const __ΩAsyncEventSubscription = [
    '',
    'unsubscribe',
    'AsyncEventSubscription',
    'PP$/!4"Mw#y'
];
;
const __ΩEventSubscription = [
    '',
    'unsubscribe',
    'EventSubscription',
    'PP$/!4"Mw#y'
];
;
let asyncId = 0;
class EmitterEvent {
    constructor(){
        this.id = asyncId++;
        this.stopped = false;
        this.propagationStopped = false;
    }
    /**
     * Stop propagating the event to subsequent event listeners.
     */ stopPropagation() {
        this.propagationStopped = true;
    }
    /**
     * Signal the emitter that you want to abort.
     * Subsequent event listeners will still be called.
     */ stop() {
        this.stopped = true;
    }
}
EmitterEvent.__type = [
    'stopPropagation',
    'stop',
    'EmitterEvent',
    'P"0!P"0"5w#'
];
class EventEmitter {
    constructor(parent){
        this.parent = parent;
        this.subscribers = [];
    }
    subscribe(callback) {
        this.subscribers.push(callback);
        return {
            unsubscribe: ()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.subscribers, callback);
            }
        };
    }
    emit(event) {
        if (this.parent) this.parent.emit(event);
        if (event.propagationStopped) return;
        for (const subscriber of this.subscribers){
            subscriber(event);
            if (event.propagationStopped) return;
        }
    }
    hasSubscriptions() {
        return this.subscribers.length > 0;
    }
}
EventEmitter.__type = [
    'T',
    ()=>__ΩSubscriber,
    'subscribers',
    function() {
        return [];
    },
    ()=>EventEmitter,
    'parent',
    'constructor',
    ()=>__ΩSubscriber,
    'callback',
    ()=>__ΩEventSubscription,
    'subscribe',
    'event',
    'emit',
    'hasSubscriptions',
    'EventEmitter',
    'b!e!!o""F3#<>$PP"7%2&8<"0\'Pe"!o("2)n*0+Pe"!2,$0-P)0.5w/'
];
class AsyncEventEmitter {
    constructor(parent){
        this.parent = parent;
        this.subscribers = [];
    }
    subscribe(callback) {
        this.subscribers.push(callback);
        return {
            unsubscribe: ()=>{
                (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.subscribers, callback);
            }
        };
    }
    async emit(event) {
        if (this.parent) await this.parent.emit(event);
        if (event.propagationStopped) return;
        for (const subscriber of this.subscribers){
            await subscriber(event);
            if (event.propagationStopped) return;
        }
    }
    hasSubscriptions() {
        return this.subscribers.length > 0;
    }
}
AsyncEventEmitter.__type = [
    'T',
    ()=>__ΩAsyncSubscriber,
    'subscribers',
    function() {
        return [];
    },
    ()=>AsyncEventEmitter,
    'parent',
    'constructor',
    ()=>__ΩAsyncSubscriber,
    'callback',
    ()=>__ΩAsyncEventSubscription,
    'subscribe',
    'event',
    'emit',
    'hasSubscriptions',
    'AsyncEventEmitter',
    'b!e!!o""F3#<>$PP"7%2&8<"0\'Pe"!o("2)n*0+Pe"!2,$`0-P)0.5w/'
]; //# sourceMappingURL=emitter.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/reactive.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "bufferedGate": (()=>bufferedGate),
    "clearTick": (()=>clearTick),
    "nextTick": (()=>nextTick),
    "throttleTime": (()=>throttleTime)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const nextTick = typeof requestAnimationFrame !== 'undefined' ? __assignType((cb)=>requestAnimationFrame(cb), [
    '',
    'cb',
    'PP$/!2""/!'
]) : __assignType((cb)=>setTimeout(cb), [
    '',
    'cb',
    'PP$/!2""/!'
]);
const clearTick = typeof requestAnimationFrame !== 'undefined' ? __assignType((id)=>cancelAnimationFrame(id), [
    'id',
    '',
    'P"2!"/"'
]) : __assignType((id)=>clearTick(id), [
    'id',
    '',
    'P"2!"/"'
]);
function throttleTime(call, cps = 5) {
    let last = Date.now();
    let dirty = false;
    let lastArgs = [];
    let execution = false;
    function tick() {
        const now = Date.now();
        if (!execution && now - last > 1000 / cps) {
            execution = true;
            call(...lastArgs);
            dirty = false;
            last = Date.now();
            execution = false;
        }
        if (dirty) {
            nextTick(tick);
        }
    }
    tick.__type = [
        'tick',
        'P"/!'
    ];
    return __assignType((...args)=>{
        dirty = true;
        lastArgs = args;
        tick();
    }, [
        'args',
        '',
        'P"@2!"/"'
    ]);
}
throttleTime.__type = [
    ()=>Function,
    'call',
    'cps',
    'args',
    '',
    'throttleTime',
    'PPu!2""2#P"@2$$/%/&'
];
function bufferedGate(callback) {
    const q = [];
    let activated = false;
    const throttled = throttleTime(async ()=>{
        if (q.length === 0) return;
        for (const t of q){
            const result = callback(t);
            if (result instanceof Promise) {
                await result;
            }
        }
        //empty the queue
        q.splice(0, q.length);
    });
    return {
        activate: ()=>{
            activated = true;
            throttled();
        },
        call: __assignType((i)=>{
            q.push(i);
            if (activated) {
                throttled();
            }
        }, [
            ()=>callback,
            'arg',
            '',
            'i',
            'PPdi!Ph"!2""/#qe!!!j2$"/#'
        ])
    };
}
bufferedGate.__type = [
    'arg',
    '',
    'callback',
    'bufferedGate',
    'PP"2!"/"2#"/$'
]; //# sourceMappingURL=reactive.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/reflection.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "extractMethodBody": (()=>extractMethodBody),
    "extractParameters": (()=>extractParameters),
    "removeStrings": (()=>removeStrings)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
;
const COMMENTS = /((\/\/.*$)|(\/\*[\s\S]*?\*\/))/mg;
const DEFAULT_PARAMS = /=[^,]+/mg;
const FAT_ARROWS = /=>.*$/mg;
function extractParameters(fn) {
    fn = typeof fn === 'string' ? fn : fn.toString();
    fn = removeStrings(fn);
    if (fn.startsWith('class')) {
        const start = fn.match(new RegExp('[\t\ \n{]constructor\\('));
        if (!start) return [];
        fn = fn.substr((start.index || 0) + start[0].length);
        fn = fn.replace(COMMENTS, '').replace(FAT_ARROWS, '').replace(DEFAULT_PARAMS, '');
        return fn.slice(0, fn.indexOf('{')).match(/([^\(\){\s,]+)/g) || [];
    } else {
        fn = fn.replace(COMMENTS, '').replace(FAT_ARROWS, '').replace(DEFAULT_PARAMS, '');
        return fn.slice(fn.indexOf('(') + 1, fn.indexOf('{')).match(/([^\(\)\{\}\s,]+)/g) || [];
    }
}
extractParameters.__type = [
    ()=>Function,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'fn',
    'extractParameters',
    'PP&Pu!n"J2#&F/$'
];
function extractMethodBody(classCode, name) {
    let methodCode = '';
    classCode = removeStrings(classCode);
    const start = classCode.match(new RegExp('[\t\ \n]' + name + '\\('));
    if (!start) return '';
    classCode = classCode.substr((start.index || 0) + start[0].length);
    let blockDepth = 1;
    classCode = classCode.substr(classCode.indexOf('{') + 1);
    for(let i = 0; i < classCode.length; i++){
        const char = classCode[i];
        if (char === '{') blockDepth++;
        if (char === '}') blockDepth--;
        if (blockDepth === 0) {
            return methodCode;
        }
        if (char === '\n' || char === '\t' || char === ' ') continue;
        methodCode += char;
    }
    return methodCode;
}
extractMethodBody.__type = [
    'classCode',
    'name',
    'extractMethodBody',
    'P&2!&2"&/#'
];
function removeStrings(code) {
    let result = '';
    let inString = false;
    for(let i = 0; i < code.length; i++){
        const char = code[i];
        if (inString && char === '\\') {
            i++;
            continue;
        }
        if (char === '"') {
            if (inString === '"') {
                //end string
                inString = false;
                continue;
            }
            if (!inString) {
                inString = '"';
                continue;
            }
        }
        if (char === '\'') {
            if (inString === '\'') {
                //end string
                inString = false;
                continue;
            }
            if (!inString) {
                inString = '\'';
                continue;
            }
        }
        if (!inString) {
            result += char;
        }
    }
    return result;
}
removeStrings.__type = [
    'code',
    'removeStrings',
    'P&2!"/"'
]; //# sourceMappingURL=reflection.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/url.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "urlJoin": (()=>urlJoin)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function removeSlash(v) {
    return v.replace(/(^\/+)|(\/+$)/g, '');
}
removeSlash.__type = [
    'v',
    'removeSlash',
    'P&2!&/"'
];
function urlJoin(...path) {
    const leadingSlash = path[0] && path[0] !== '/' && path[0][0] === '/';
    const last = path[path.length - 1];
    const trailingSlash = last && last !== '/' && last[last.length - 1] === '/';
    return (leadingSlash ? '/' : '') + path.filter(__assignType((v)=>!!v, [
        'v',
        '',
        'P"2!"/"'
    ])).map(__assignType((v)=>v === '/' ? '' : removeSlash(v.trim()), [
        'v',
        '',
        'P"2!"/"'
    ])).join('/') + (trailingSlash ? '/' : '');
}
urlJoin.__type = [
    'path',
    'urlJoin',
    'P&@2!&/"'
]; //# sourceMappingURL=url.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "__ΩInject": (()=>__ΩInject),
    "__ΩInjectMeta": (()=>__ΩInjectMeta)
});
const __ΩInjectMeta = [
    'T',
    "inject",
    '__meta',
    'InjectMeta',
    '!c!PP!P."e$!GK4#8Mw$y'
];
;
const __ΩInject = [
    'Type',
    'Token',
    ()=>__ΩInjectMeta,
    'Inject',
    'b!!c"Pe"!e""o#"Kw$y'
];
;
 //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/buffer.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "base64ToUint8Array": (()=>base64ToUint8Array),
    "bufferConcat": (()=>bufferConcat),
    "bufferToString": (()=>bufferToString),
    "createBuffer": (()=>createBuffer),
    "nativeBase64ToUint8Array": (()=>nativeBase64ToUint8Array),
    "uint8ArrayToUtf8": (()=>uint8ArrayToUtf8)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
const createBuffer = 'undefined' !== typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] && 'function' === typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].allocUnsafe ? __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].allocUnsafe : __assignType((size)=>new Uint8Array(size), [
    'size',
    '',
    'P"2!"/"'
]);
function bufferConcat(chunks, length) {
    if (undefined === length) {
        length = 0;
        for (const chunk of chunks)length += chunk.length;
    }
    const result = createBuffer(length);
    let offset = 0;
    for (const chunk of chunks){
        result.set(chunk, offset);
        offset += chunk.length;
    }
    return result;
}
bufferConcat.__type = [
    'chunks',
    'length',
    'bufferConcat',
    'PWF2!\'2"8W/#'
];
const textEncoder = new TextDecoder();
const uint8ArrayToUtf8 = 'undefined' !== typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] ? __assignType((buffer)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(buffer).toString('utf8'), [
    'buffer',
    '',
    'PW2!"/"'
]) : __assignType((buffer)=>textEncoder.decode(buffer), [
    'buffer',
    '',
    'PW2!"/"'
]);
function bufferToString(buffer) {
    if ('string' === typeof buffer) return buffer;
    return uint8ArrayToUtf8(buffer);
}
bufferToString.__type = [
    'buffer',
    'bufferToString',
    'PP&WJ2!&/"'
];
function nativeBase64ToUint8Array(base64) {
    const raw = atob(base64);
    const rawLength = raw.length;
    const array = createBuffer(rawLength);
    for(let i = 0; i < rawLength; i++){
        array[i] = raw.charCodeAt(i);
    }
    return array;
}
nativeBase64ToUint8Array.__type = [
    'base64',
    'nativeBase64ToUint8Array',
    'P&2!W/"'
];
const base64ToUint8Array = 'undefined' === typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"] ? nativeBase64ToUint8Array : __assignType((base64)=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].from(base64, 'base64'), [
    'base64',
    '',
    'P&2!"/"'
]); //# sourceMappingURL=buffer.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/src/path.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "pathBasename": (()=>pathBasename),
    "pathDirectory": (()=>pathDirectory),
    "pathExtension": (()=>pathExtension),
    "pathJoin": (()=>pathJoin),
    "pathNormalize": (()=>pathNormalize)
});
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
function pathNormalize(path) {
    path = path[0] !== '/' ? '/' + path : path;
    path = path.length > 1 && path[path.length - 1] === '/' ? path.slice(0, -1) : path;
    return path.replace(/\/+/g, '/');
}
pathNormalize.__type = [
    'path',
    'pathNormalize',
    'P&2!&/"'
];
function pathDirectory(path) {
    if (path === '/') return '/';
    const lastSlash = path.lastIndexOf('/');
    return lastSlash <= 0 ? '/' : path.slice(0, lastSlash);
}
pathDirectory.__type = [
    'path',
    'pathDirectory',
    'P&2!&/"'
];
function pathBasename(path) {
    const lastSlash = path.lastIndexOf('/');
    return lastSlash === -1 ? path : path.slice(lastSlash + 1);
}
pathBasename.__type = [
    'path',
    'pathBasename',
    'P&2!&/"'
];
function pathExtension(path) {
    const basename = pathBasename(path);
    const lastDot = basename.lastIndexOf('.');
    return lastDot === -1 ? '' : basename.slice(lastDot + 1);
}
pathExtension.__type = [
    'path',
    'pathExtension',
    'P&2!&/"'
];
function pathJoin(...paths) {
    return '/' + paths.map(__assignType((v)=>pathNormalize(v).slice(1), [
        'v',
        '',
        'P"2!"/"'
    ])).filter(__assignType((v)=>!!v, [
        'v',
        '',
        'P"2!"/"'
    ])).join('/');
}
pathJoin.__type = [
    'paths',
    'pathJoin',
    'P&@2!&/"'
]; //# sourceMappingURL=path.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({});
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$decorators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/decorators.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$enum$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/enum.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$iterators$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/iterators.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$timer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/timer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$process$2d$locker$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/process-locker.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$network$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/network.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$emitter$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/emitter.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$reactive$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/reactive.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$url$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/url.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$buffer$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/buffer.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$path$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/path.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/to-fast-properties/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
let fastProto = null;
// Creates an object with permanently fast properties in V8. See Toon Verwaest's
// post https://medium.com/@tverwaes/setting-up-prototypes-in-v8-ec9c9491dfe2#5f62
// for more details. Use %HasFastProperties(object) and the Node.js flag
// --allow-natives-syntax to check whether an object has fast properties.
function FastObject(o) {
    // A prototype object will have "fast properties" enabled once it is checked
    // against the inline property cache of a function, e.g. fastProto.property:
    // https://github.com/v8/v8/blob/6.0.122/test/mjsunit/fast-prototype.js#L48-L63
    if (fastProto !== null && typeof fastProto.property) {
        const result = fastProto;
        fastProto = FastObject.prototype = null;
        return result;
    }
    fastProto = FastObject.prototype = o == null ? Object.create(null) : o;
    return new FastObject;
}
const inlineCacheCutoff = 10;
// Initialize the inline property cache of FastObject.
for(let i = 0; i <= inlineCacheCutoff; i++){
    FastObject();
}
module.exports = function toFastproperties(o) {
    return FastObject(o);
};
}}),
"[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(function() {
    var e = {
        675: function(e, r) {
            "use strict";
            r.byteLength = byteLength;
            r.toByteArray = toByteArray;
            r.fromByteArray = fromByteArray;
            var t = [];
            var f = [];
            var n = typeof Uint8Array !== "undefined" ? Uint8Array : Array;
            var i = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
            for(var o = 0, u = i.length; o < u; ++o){
                t[o] = i[o];
                f[i.charCodeAt(o)] = o;
            }
            f["-".charCodeAt(0)] = 62;
            f["_".charCodeAt(0)] = 63;
            function getLens(e) {
                var r = e.length;
                if (r % 4 > 0) {
                    throw new Error("Invalid string. Length must be a multiple of 4");
                }
                var t = e.indexOf("=");
                if (t === -1) t = r;
                var f = t === r ? 0 : 4 - t % 4;
                return [
                    t,
                    f
                ];
            }
            function byteLength(e) {
                var r = getLens(e);
                var t = r[0];
                var f = r[1];
                return (t + f) * 3 / 4 - f;
            }
            function _byteLength(e, r, t) {
                return (r + t) * 3 / 4 - t;
            }
            function toByteArray(e) {
                var r;
                var t = getLens(e);
                var i = t[0];
                var o = t[1];
                var u = new n(_byteLength(e, i, o));
                var a = 0;
                var s = o > 0 ? i - 4 : i;
                var h;
                for(h = 0; h < s; h += 4){
                    r = f[e.charCodeAt(h)] << 18 | f[e.charCodeAt(h + 1)] << 12 | f[e.charCodeAt(h + 2)] << 6 | f[e.charCodeAt(h + 3)];
                    u[a++] = r >> 16 & 255;
                    u[a++] = r >> 8 & 255;
                    u[a++] = r & 255;
                }
                if (o === 2) {
                    r = f[e.charCodeAt(h)] << 2 | f[e.charCodeAt(h + 1)] >> 4;
                    u[a++] = r & 255;
                }
                if (o === 1) {
                    r = f[e.charCodeAt(h)] << 10 | f[e.charCodeAt(h + 1)] << 4 | f[e.charCodeAt(h + 2)] >> 2;
                    u[a++] = r >> 8 & 255;
                    u[a++] = r & 255;
                }
                return u;
            }
            function tripletToBase64(e) {
                return t[e >> 18 & 63] + t[e >> 12 & 63] + t[e >> 6 & 63] + t[e & 63];
            }
            function encodeChunk(e, r, t) {
                var f;
                var n = [];
                for(var i = r; i < t; i += 3){
                    f = (e[i] << 16 & 16711680) + (e[i + 1] << 8 & 65280) + (e[i + 2] & 255);
                    n.push(tripletToBase64(f));
                }
                return n.join("");
            }
            function fromByteArray(e) {
                var r;
                var f = e.length;
                var n = f % 3;
                var i = [];
                var o = 16383;
                for(var u = 0, a = f - n; u < a; u += o){
                    i.push(encodeChunk(e, u, u + o > a ? a : u + o));
                }
                if (n === 1) {
                    r = e[f - 1];
                    i.push(t[r >> 2] + t[r << 4 & 63] + "==");
                } else if (n === 2) {
                    r = (e[f - 2] << 8) + e[f - 1];
                    i.push(t[r >> 10] + t[r >> 4 & 63] + t[r << 2 & 63] + "=");
                }
                return i.join("");
            }
        },
        72: function(e, r, t) {
            "use strict";
            /*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ var f = t(675);
            var n = t(783);
            var i = typeof Symbol === "function" && typeof Symbol.for === "function" ? Symbol.for("nodejs.util.inspect.custom") : null;
            r.Buffer = Buffer;
            r.SlowBuffer = SlowBuffer;
            r.INSPECT_MAX_BYTES = 50;
            var o = 2147483647;
            r.kMaxLength = o;
            Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
            if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== "undefined" && typeof console.error === "function") {
                console.error("This browser lacks typed array (Uint8Array) support which is required by " + "`buffer` v5.x. Use `buffer` v4.x if you require old browser support.");
            }
            function typedArraySupport() {
                try {
                    var e = new Uint8Array(1);
                    var r = {
                        foo: function() {
                            return 42;
                        }
                    };
                    Object.setPrototypeOf(r, Uint8Array.prototype);
                    Object.setPrototypeOf(e, r);
                    return e.foo() === 42;
                } catch (e) {
                    return false;
                }
            }
            Object.defineProperty(Buffer.prototype, "parent", {
                enumerable: true,
                get: function() {
                    if (!Buffer.isBuffer(this)) return undefined;
                    return this.buffer;
                }
            });
            Object.defineProperty(Buffer.prototype, "offset", {
                enumerable: true,
                get: function() {
                    if (!Buffer.isBuffer(this)) return undefined;
                    return this.byteOffset;
                }
            });
            function createBuffer(e) {
                if (e > o) {
                    throw new RangeError('The value "' + e + '" is invalid for option "size"');
                }
                var r = new Uint8Array(e);
                Object.setPrototypeOf(r, Buffer.prototype);
                return r;
            }
            function Buffer(e, r, t) {
                if (typeof e === "number") {
                    if (typeof r === "string") {
                        throw new TypeError('The "string" argument must be of type string. Received type number');
                    }
                    return allocUnsafe(e);
                }
                return from(e, r, t);
            }
            Buffer.poolSize = 8192;
            function from(e, r, t) {
                if (typeof e === "string") {
                    return fromString(e, r);
                }
                if (ArrayBuffer.isView(e)) {
                    return fromArrayLike(e);
                }
                if (e == null) {
                    throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, " + "or Array-like Object. Received type " + typeof e);
                }
                if (isInstance(e, ArrayBuffer) || e && isInstance(e.buffer, ArrayBuffer)) {
                    return fromArrayBuffer(e, r, t);
                }
                if (typeof SharedArrayBuffer !== "undefined" && (isInstance(e, SharedArrayBuffer) || e && isInstance(e.buffer, SharedArrayBuffer))) {
                    return fromArrayBuffer(e, r, t);
                }
                if (typeof e === "number") {
                    throw new TypeError('The "value" argument must not be of type number. Received type number');
                }
                var f = e.valueOf && e.valueOf();
                if (f != null && f !== e) {
                    return Buffer.from(f, r, t);
                }
                var n = fromObject(e);
                if (n) return n;
                if (typeof Symbol !== "undefined" && Symbol.toPrimitive != null && typeof e[Symbol.toPrimitive] === "function") {
                    return Buffer.from(e[Symbol.toPrimitive]("string"), r, t);
                }
                throw new TypeError("The first argument must be one of type string, Buffer, ArrayBuffer, Array, " + "or Array-like Object. Received type " + typeof e);
            }
            Buffer.from = function(e, r, t) {
                return from(e, r, t);
            };
            Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
            Object.setPrototypeOf(Buffer, Uint8Array);
            function assertSize(e) {
                if (typeof e !== "number") {
                    throw new TypeError('"size" argument must be of type number');
                } else if (e < 0) {
                    throw new RangeError('The value "' + e + '" is invalid for option "size"');
                }
            }
            function alloc(e, r, t) {
                assertSize(e);
                if (e <= 0) {
                    return createBuffer(e);
                }
                if (r !== undefined) {
                    return typeof t === "string" ? createBuffer(e).fill(r, t) : createBuffer(e).fill(r);
                }
                return createBuffer(e);
            }
            Buffer.alloc = function(e, r, t) {
                return alloc(e, r, t);
            };
            function allocUnsafe(e) {
                assertSize(e);
                return createBuffer(e < 0 ? 0 : checked(e) | 0);
            }
            Buffer.allocUnsafe = function(e) {
                return allocUnsafe(e);
            };
            Buffer.allocUnsafeSlow = function(e) {
                return allocUnsafe(e);
            };
            function fromString(e, r) {
                if (typeof r !== "string" || r === "") {
                    r = "utf8";
                }
                if (!Buffer.isEncoding(r)) {
                    throw new TypeError("Unknown encoding: " + r);
                }
                var t = byteLength(e, r) | 0;
                var f = createBuffer(t);
                var n = f.write(e, r);
                if (n !== t) {
                    f = f.slice(0, n);
                }
                return f;
            }
            function fromArrayLike(e) {
                var r = e.length < 0 ? 0 : checked(e.length) | 0;
                var t = createBuffer(r);
                for(var f = 0; f < r; f += 1){
                    t[f] = e[f] & 255;
                }
                return t;
            }
            function fromArrayBuffer(e, r, t) {
                if (r < 0 || e.byteLength < r) {
                    throw new RangeError('"offset" is outside of buffer bounds');
                }
                if (e.byteLength < r + (t || 0)) {
                    throw new RangeError('"length" is outside of buffer bounds');
                }
                var f;
                if (r === undefined && t === undefined) {
                    f = new Uint8Array(e);
                } else if (t === undefined) {
                    f = new Uint8Array(e, r);
                } else {
                    f = new Uint8Array(e, r, t);
                }
                Object.setPrototypeOf(f, Buffer.prototype);
                return f;
            }
            function fromObject(e) {
                if (Buffer.isBuffer(e)) {
                    var r = checked(e.length) | 0;
                    var t = createBuffer(r);
                    if (t.length === 0) {
                        return t;
                    }
                    e.copy(t, 0, 0, r);
                    return t;
                }
                if (e.length !== undefined) {
                    if (typeof e.length !== "number" || numberIsNaN(e.length)) {
                        return createBuffer(0);
                    }
                    return fromArrayLike(e);
                }
                if (e.type === "Buffer" && Array.isArray(e.data)) {
                    return fromArrayLike(e.data);
                }
            }
            function checked(e) {
                if (e >= o) {
                    throw new RangeError("Attempt to allocate Buffer larger than maximum " + "size: 0x" + o.toString(16) + " bytes");
                }
                return e | 0;
            }
            function SlowBuffer(e) {
                if (+e != e) {
                    e = 0;
                }
                return Buffer.alloc(+e);
            }
            Buffer.isBuffer = function isBuffer(e) {
                return e != null && e._isBuffer === true && e !== Buffer.prototype;
            };
            Buffer.compare = function compare(e, r) {
                if (isInstance(e, Uint8Array)) e = Buffer.from(e, e.offset, e.byteLength);
                if (isInstance(r, Uint8Array)) r = Buffer.from(r, r.offset, r.byteLength);
                if (!Buffer.isBuffer(e) || !Buffer.isBuffer(r)) {
                    throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
                }
                if (e === r) return 0;
                var t = e.length;
                var f = r.length;
                for(var n = 0, i = Math.min(t, f); n < i; ++n){
                    if (e[n] !== r[n]) {
                        t = e[n];
                        f = r[n];
                        break;
                    }
                }
                if (t < f) return -1;
                if (f < t) return 1;
                return 0;
            };
            Buffer.isEncoding = function isEncoding(e) {
                switch(String(e).toLowerCase()){
                    case "hex":
                    case "utf8":
                    case "utf-8":
                    case "ascii":
                    case "latin1":
                    case "binary":
                    case "base64":
                    case "ucs2":
                    case "ucs-2":
                    case "utf16le":
                    case "utf-16le":
                        return true;
                    default:
                        return false;
                }
            };
            Buffer.concat = function concat(e, r) {
                if (!Array.isArray(e)) {
                    throw new TypeError('"list" argument must be an Array of Buffers');
                }
                if (e.length === 0) {
                    return Buffer.alloc(0);
                }
                var t;
                if (r === undefined) {
                    r = 0;
                    for(t = 0; t < e.length; ++t){
                        r += e[t].length;
                    }
                }
                var f = Buffer.allocUnsafe(r);
                var n = 0;
                for(t = 0; t < e.length; ++t){
                    var i = e[t];
                    if (isInstance(i, Uint8Array)) {
                        i = Buffer.from(i);
                    }
                    if (!Buffer.isBuffer(i)) {
                        throw new TypeError('"list" argument must be an Array of Buffers');
                    }
                    i.copy(f, n);
                    n += i.length;
                }
                return f;
            };
            function byteLength(e, r) {
                if (Buffer.isBuffer(e)) {
                    return e.length;
                }
                if (ArrayBuffer.isView(e) || isInstance(e, ArrayBuffer)) {
                    return e.byteLength;
                }
                if (typeof e !== "string") {
                    throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + "Received type " + typeof e);
                }
                var t = e.length;
                var f = arguments.length > 2 && arguments[2] === true;
                if (!f && t === 0) return 0;
                var n = false;
                for(;;){
                    switch(r){
                        case "ascii":
                        case "latin1":
                        case "binary":
                            return t;
                        case "utf8":
                        case "utf-8":
                            return utf8ToBytes(e).length;
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return t * 2;
                        case "hex":
                            return t >>> 1;
                        case "base64":
                            return base64ToBytes(e).length;
                        default:
                            if (n) {
                                return f ? -1 : utf8ToBytes(e).length;
                            }
                            r = ("" + r).toLowerCase();
                            n = true;
                    }
                }
            }
            Buffer.byteLength = byteLength;
            function slowToString(e, r, t) {
                var f = false;
                if (r === undefined || r < 0) {
                    r = 0;
                }
                if (r > this.length) {
                    return "";
                }
                if (t === undefined || t > this.length) {
                    t = this.length;
                }
                if (t <= 0) {
                    return "";
                }
                t >>>= 0;
                r >>>= 0;
                if (t <= r) {
                    return "";
                }
                if (!e) e = "utf8";
                while(true){
                    switch(e){
                        case "hex":
                            return hexSlice(this, r, t);
                        case "utf8":
                        case "utf-8":
                            return utf8Slice(this, r, t);
                        case "ascii":
                            return asciiSlice(this, r, t);
                        case "latin1":
                        case "binary":
                            return latin1Slice(this, r, t);
                        case "base64":
                            return base64Slice(this, r, t);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return utf16leSlice(this, r, t);
                        default:
                            if (f) throw new TypeError("Unknown encoding: " + e);
                            e = (e + "").toLowerCase();
                            f = true;
                    }
                }
            }
            Buffer.prototype._isBuffer = true;
            function swap(e, r, t) {
                var f = e[r];
                e[r] = e[t];
                e[t] = f;
            }
            Buffer.prototype.swap16 = function swap16() {
                var e = this.length;
                if (e % 2 !== 0) {
                    throw new RangeError("Buffer size must be a multiple of 16-bits");
                }
                for(var r = 0; r < e; r += 2){
                    swap(this, r, r + 1);
                }
                return this;
            };
            Buffer.prototype.swap32 = function swap32() {
                var e = this.length;
                if (e % 4 !== 0) {
                    throw new RangeError("Buffer size must be a multiple of 32-bits");
                }
                for(var r = 0; r < e; r += 4){
                    swap(this, r, r + 3);
                    swap(this, r + 1, r + 2);
                }
                return this;
            };
            Buffer.prototype.swap64 = function swap64() {
                var e = this.length;
                if (e % 8 !== 0) {
                    throw new RangeError("Buffer size must be a multiple of 64-bits");
                }
                for(var r = 0; r < e; r += 8){
                    swap(this, r, r + 7);
                    swap(this, r + 1, r + 6);
                    swap(this, r + 2, r + 5);
                    swap(this, r + 3, r + 4);
                }
                return this;
            };
            Buffer.prototype.toString = function toString() {
                var e = this.length;
                if (e === 0) return "";
                if (arguments.length === 0) return utf8Slice(this, 0, e);
                return slowToString.apply(this, arguments);
            };
            Buffer.prototype.toLocaleString = Buffer.prototype.toString;
            Buffer.prototype.equals = function equals(e) {
                if (!Buffer.isBuffer(e)) throw new TypeError("Argument must be a Buffer");
                if (this === e) return true;
                return Buffer.compare(this, e) === 0;
            };
            Buffer.prototype.inspect = function inspect() {
                var e = "";
                var t = r.INSPECT_MAX_BYTES;
                e = this.toString("hex", 0, t).replace(/(.{2})/g, "$1 ").trim();
                if (this.length > t) e += " ... ";
                return "<Buffer " + e + ">";
            };
            if (i) {
                Buffer.prototype[i] = Buffer.prototype.inspect;
            }
            Buffer.prototype.compare = function compare(e, r, t, f, n) {
                if (isInstance(e, Uint8Array)) {
                    e = Buffer.from(e, e.offset, e.byteLength);
                }
                if (!Buffer.isBuffer(e)) {
                    throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + "Received type " + typeof e);
                }
                if (r === undefined) {
                    r = 0;
                }
                if (t === undefined) {
                    t = e ? e.length : 0;
                }
                if (f === undefined) {
                    f = 0;
                }
                if (n === undefined) {
                    n = this.length;
                }
                if (r < 0 || t > e.length || f < 0 || n > this.length) {
                    throw new RangeError("out of range index");
                }
                if (f >= n && r >= t) {
                    return 0;
                }
                if (f >= n) {
                    return -1;
                }
                if (r >= t) {
                    return 1;
                }
                r >>>= 0;
                t >>>= 0;
                f >>>= 0;
                n >>>= 0;
                if (this === e) return 0;
                var i = n - f;
                var o = t - r;
                var u = Math.min(i, o);
                var a = this.slice(f, n);
                var s = e.slice(r, t);
                for(var h = 0; h < u; ++h){
                    if (a[h] !== s[h]) {
                        i = a[h];
                        o = s[h];
                        break;
                    }
                }
                if (i < o) return -1;
                if (o < i) return 1;
                return 0;
            };
            function bidirectionalIndexOf(e, r, t, f, n) {
                if (e.length === 0) return -1;
                if (typeof t === "string") {
                    f = t;
                    t = 0;
                } else if (t > 2147483647) {
                    t = 2147483647;
                } else if (t < -2147483648) {
                    t = -2147483648;
                }
                t = +t;
                if (numberIsNaN(t)) {
                    t = n ? 0 : e.length - 1;
                }
                if (t < 0) t = e.length + t;
                if (t >= e.length) {
                    if (n) return -1;
                    else t = e.length - 1;
                } else if (t < 0) {
                    if (n) t = 0;
                    else return -1;
                }
                if (typeof r === "string") {
                    r = Buffer.from(r, f);
                }
                if (Buffer.isBuffer(r)) {
                    if (r.length === 0) {
                        return -1;
                    }
                    return arrayIndexOf(e, r, t, f, n);
                } else if (typeof r === "number") {
                    r = r & 255;
                    if (typeof Uint8Array.prototype.indexOf === "function") {
                        if (n) {
                            return Uint8Array.prototype.indexOf.call(e, r, t);
                        } else {
                            return Uint8Array.prototype.lastIndexOf.call(e, r, t);
                        }
                    }
                    return arrayIndexOf(e, [
                        r
                    ], t, f, n);
                }
                throw new TypeError("val must be string, number or Buffer");
            }
            function arrayIndexOf(e, r, t, f, n) {
                var i = 1;
                var o = e.length;
                var u = r.length;
                if (f !== undefined) {
                    f = String(f).toLowerCase();
                    if (f === "ucs2" || f === "ucs-2" || f === "utf16le" || f === "utf-16le") {
                        if (e.length < 2 || r.length < 2) {
                            return -1;
                        }
                        i = 2;
                        o /= 2;
                        u /= 2;
                        t /= 2;
                    }
                }
                function read(e, r) {
                    if (i === 1) {
                        return e[r];
                    } else {
                        return e.readUInt16BE(r * i);
                    }
                }
                var a;
                if (n) {
                    var s = -1;
                    for(a = t; a < o; a++){
                        if (read(e, a) === read(r, s === -1 ? 0 : a - s)) {
                            if (s === -1) s = a;
                            if (a - s + 1 === u) return s * i;
                        } else {
                            if (s !== -1) a -= a - s;
                            s = -1;
                        }
                    }
                } else {
                    if (t + u > o) t = o - u;
                    for(a = t; a >= 0; a--){
                        var h = true;
                        for(var c = 0; c < u; c++){
                            if (read(e, a + c) !== read(r, c)) {
                                h = false;
                                break;
                            }
                        }
                        if (h) return a;
                    }
                }
                return -1;
            }
            Buffer.prototype.includes = function includes(e, r, t) {
                return this.indexOf(e, r, t) !== -1;
            };
            Buffer.prototype.indexOf = function indexOf(e, r, t) {
                return bidirectionalIndexOf(this, e, r, t, true);
            };
            Buffer.prototype.lastIndexOf = function lastIndexOf(e, r, t) {
                return bidirectionalIndexOf(this, e, r, t, false);
            };
            function hexWrite(e, r, t, f) {
                t = Number(t) || 0;
                var n = e.length - t;
                if (!f) {
                    f = n;
                } else {
                    f = Number(f);
                    if (f > n) {
                        f = n;
                    }
                }
                var i = r.length;
                if (f > i / 2) {
                    f = i / 2;
                }
                for(var o = 0; o < f; ++o){
                    var u = parseInt(r.substr(o * 2, 2), 16);
                    if (numberIsNaN(u)) return o;
                    e[t + o] = u;
                }
                return o;
            }
            function utf8Write(e, r, t, f) {
                return blitBuffer(utf8ToBytes(r, e.length - t), e, t, f);
            }
            function asciiWrite(e, r, t, f) {
                return blitBuffer(asciiToBytes(r), e, t, f);
            }
            function latin1Write(e, r, t, f) {
                return asciiWrite(e, r, t, f);
            }
            function base64Write(e, r, t, f) {
                return blitBuffer(base64ToBytes(r), e, t, f);
            }
            function ucs2Write(e, r, t, f) {
                return blitBuffer(utf16leToBytes(r, e.length - t), e, t, f);
            }
            Buffer.prototype.write = function write(e, r, t, f) {
                if (r === undefined) {
                    f = "utf8";
                    t = this.length;
                    r = 0;
                } else if (t === undefined && typeof r === "string") {
                    f = r;
                    t = this.length;
                    r = 0;
                } else if (isFinite(r)) {
                    r = r >>> 0;
                    if (isFinite(t)) {
                        t = t >>> 0;
                        if (f === undefined) f = "utf8";
                    } else {
                        f = t;
                        t = undefined;
                    }
                } else {
                    throw new Error("Buffer.write(string, encoding, offset[, length]) is no longer supported");
                }
                var n = this.length - r;
                if (t === undefined || t > n) t = n;
                if (e.length > 0 && (t < 0 || r < 0) || r > this.length) {
                    throw new RangeError("Attempt to write outside buffer bounds");
                }
                if (!f) f = "utf8";
                var i = false;
                for(;;){
                    switch(f){
                        case "hex":
                            return hexWrite(this, e, r, t);
                        case "utf8":
                        case "utf-8":
                            return utf8Write(this, e, r, t);
                        case "ascii":
                            return asciiWrite(this, e, r, t);
                        case "latin1":
                        case "binary":
                            return latin1Write(this, e, r, t);
                        case "base64":
                            return base64Write(this, e, r, t);
                        case "ucs2":
                        case "ucs-2":
                        case "utf16le":
                        case "utf-16le":
                            return ucs2Write(this, e, r, t);
                        default:
                            if (i) throw new TypeError("Unknown encoding: " + f);
                            f = ("" + f).toLowerCase();
                            i = true;
                    }
                }
            };
            Buffer.prototype.toJSON = function toJSON() {
                return {
                    type: "Buffer",
                    data: Array.prototype.slice.call(this._arr || this, 0)
                };
            };
            function base64Slice(e, r, t) {
                if (r === 0 && t === e.length) {
                    return f.fromByteArray(e);
                } else {
                    return f.fromByteArray(e.slice(r, t));
                }
            }
            function utf8Slice(e, r, t) {
                t = Math.min(e.length, t);
                var f = [];
                var n = r;
                while(n < t){
                    var i = e[n];
                    var o = null;
                    var u = i > 239 ? 4 : i > 223 ? 3 : i > 191 ? 2 : 1;
                    if (n + u <= t) {
                        var a, s, h, c;
                        switch(u){
                            case 1:
                                if (i < 128) {
                                    o = i;
                                }
                                break;
                            case 2:
                                a = e[n + 1];
                                if ((a & 192) === 128) {
                                    c = (i & 31) << 6 | a & 63;
                                    if (c > 127) {
                                        o = c;
                                    }
                                }
                                break;
                            case 3:
                                a = e[n + 1];
                                s = e[n + 2];
                                if ((a & 192) === 128 && (s & 192) === 128) {
                                    c = (i & 15) << 12 | (a & 63) << 6 | s & 63;
                                    if (c > 2047 && (c < 55296 || c > 57343)) {
                                        o = c;
                                    }
                                }
                                break;
                            case 4:
                                a = e[n + 1];
                                s = e[n + 2];
                                h = e[n + 3];
                                if ((a & 192) === 128 && (s & 192) === 128 && (h & 192) === 128) {
                                    c = (i & 15) << 18 | (a & 63) << 12 | (s & 63) << 6 | h & 63;
                                    if (c > 65535 && c < 1114112) {
                                        o = c;
                                    }
                                }
                        }
                    }
                    if (o === null) {
                        o = 65533;
                        u = 1;
                    } else if (o > 65535) {
                        o -= 65536;
                        f.push(o >>> 10 & 1023 | 55296);
                        o = 56320 | o & 1023;
                    }
                    f.push(o);
                    n += u;
                }
                return decodeCodePointsArray(f);
            }
            var u = 4096;
            function decodeCodePointsArray(e) {
                var r = e.length;
                if (r <= u) {
                    return String.fromCharCode.apply(String, e);
                }
                var t = "";
                var f = 0;
                while(f < r){
                    t += String.fromCharCode.apply(String, e.slice(f, f += u));
                }
                return t;
            }
            function asciiSlice(e, r, t) {
                var f = "";
                t = Math.min(e.length, t);
                for(var n = r; n < t; ++n){
                    f += String.fromCharCode(e[n] & 127);
                }
                return f;
            }
            function latin1Slice(e, r, t) {
                var f = "";
                t = Math.min(e.length, t);
                for(var n = r; n < t; ++n){
                    f += String.fromCharCode(e[n]);
                }
                return f;
            }
            function hexSlice(e, r, t) {
                var f = e.length;
                if (!r || r < 0) r = 0;
                if (!t || t < 0 || t > f) t = f;
                var n = "";
                for(var i = r; i < t; ++i){
                    n += s[e[i]];
                }
                return n;
            }
            function utf16leSlice(e, r, t) {
                var f = e.slice(r, t);
                var n = "";
                for(var i = 0; i < f.length; i += 2){
                    n += String.fromCharCode(f[i] + f[i + 1] * 256);
                }
                return n;
            }
            Buffer.prototype.slice = function slice(e, r) {
                var t = this.length;
                e = ~~e;
                r = r === undefined ? t : ~~r;
                if (e < 0) {
                    e += t;
                    if (e < 0) e = 0;
                } else if (e > t) {
                    e = t;
                }
                if (r < 0) {
                    r += t;
                    if (r < 0) r = 0;
                } else if (r > t) {
                    r = t;
                }
                if (r < e) r = e;
                var f = this.subarray(e, r);
                Object.setPrototypeOf(f, Buffer.prototype);
                return f;
            };
            function checkOffset(e, r, t) {
                if (e % 1 !== 0 || e < 0) throw new RangeError("offset is not uint");
                if (e + r > t) throw new RangeError("Trying to access beyond buffer length");
            }
            Buffer.prototype.readUIntLE = function readUIntLE(e, r, t) {
                e = e >>> 0;
                r = r >>> 0;
                if (!t) checkOffset(e, r, this.length);
                var f = this[e];
                var n = 1;
                var i = 0;
                while(++i < r && (n *= 256)){
                    f += this[e + i] * n;
                }
                return f;
            };
            Buffer.prototype.readUIntBE = function readUIntBE(e, r, t) {
                e = e >>> 0;
                r = r >>> 0;
                if (!t) {
                    checkOffset(e, r, this.length);
                }
                var f = this[e + --r];
                var n = 1;
                while(r > 0 && (n *= 256)){
                    f += this[e + --r] * n;
                }
                return f;
            };
            Buffer.prototype.readUInt8 = function readUInt8(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 1, this.length);
                return this[e];
            };
            Buffer.prototype.readUInt16LE = function readUInt16LE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 2, this.length);
                return this[e] | this[e + 1] << 8;
            };
            Buffer.prototype.readUInt16BE = function readUInt16BE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 2, this.length);
                return this[e] << 8 | this[e + 1];
            };
            Buffer.prototype.readUInt32LE = function readUInt32LE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return (this[e] | this[e + 1] << 8 | this[e + 2] << 16) + this[e + 3] * 16777216;
            };
            Buffer.prototype.readUInt32BE = function readUInt32BE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return this[e] * 16777216 + (this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3]);
            };
            Buffer.prototype.readIntLE = function readIntLE(e, r, t) {
                e = e >>> 0;
                r = r >>> 0;
                if (!t) checkOffset(e, r, this.length);
                var f = this[e];
                var n = 1;
                var i = 0;
                while(++i < r && (n *= 256)){
                    f += this[e + i] * n;
                }
                n *= 128;
                if (f >= n) f -= Math.pow(2, 8 * r);
                return f;
            };
            Buffer.prototype.readIntBE = function readIntBE(e, r, t) {
                e = e >>> 0;
                r = r >>> 0;
                if (!t) checkOffset(e, r, this.length);
                var f = r;
                var n = 1;
                var i = this[e + --f];
                while(f > 0 && (n *= 256)){
                    i += this[e + --f] * n;
                }
                n *= 128;
                if (i >= n) i -= Math.pow(2, 8 * r);
                return i;
            };
            Buffer.prototype.readInt8 = function readInt8(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 1, this.length);
                if (!(this[e] & 128)) return this[e];
                return (255 - this[e] + 1) * -1;
            };
            Buffer.prototype.readInt16LE = function readInt16LE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 2, this.length);
                var t = this[e] | this[e + 1] << 8;
                return t & 32768 ? t | 4294901760 : t;
            };
            Buffer.prototype.readInt16BE = function readInt16BE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 2, this.length);
                var t = this[e + 1] | this[e] << 8;
                return t & 32768 ? t | 4294901760 : t;
            };
            Buffer.prototype.readInt32LE = function readInt32LE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return this[e] | this[e + 1] << 8 | this[e + 2] << 16 | this[e + 3] << 24;
            };
            Buffer.prototype.readInt32BE = function readInt32BE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return this[e] << 24 | this[e + 1] << 16 | this[e + 2] << 8 | this[e + 3];
            };
            Buffer.prototype.readFloatLE = function readFloatLE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return n.read(this, e, true, 23, 4);
            };
            Buffer.prototype.readFloatBE = function readFloatBE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 4, this.length);
                return n.read(this, e, false, 23, 4);
            };
            Buffer.prototype.readDoubleLE = function readDoubleLE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 8, this.length);
                return n.read(this, e, true, 52, 8);
            };
            Buffer.prototype.readDoubleBE = function readDoubleBE(e, r) {
                e = e >>> 0;
                if (!r) checkOffset(e, 8, this.length);
                return n.read(this, e, false, 52, 8);
            };
            function checkInt(e, r, t, f, n, i) {
                if (!Buffer.isBuffer(e)) throw new TypeError('"buffer" argument must be a Buffer instance');
                if (r > n || r < i) throw new RangeError('"value" argument is out of bounds');
                if (t + f > e.length) throw new RangeError("Index out of range");
            }
            Buffer.prototype.writeUIntLE = function writeUIntLE(e, r, t, f) {
                e = +e;
                r = r >>> 0;
                t = t >>> 0;
                if (!f) {
                    var n = Math.pow(2, 8 * t) - 1;
                    checkInt(this, e, r, t, n, 0);
                }
                var i = 1;
                var o = 0;
                this[r] = e & 255;
                while(++o < t && (i *= 256)){
                    this[r + o] = e / i & 255;
                }
                return r + t;
            };
            Buffer.prototype.writeUIntBE = function writeUIntBE(e, r, t, f) {
                e = +e;
                r = r >>> 0;
                t = t >>> 0;
                if (!f) {
                    var n = Math.pow(2, 8 * t) - 1;
                    checkInt(this, e, r, t, n, 0);
                }
                var i = t - 1;
                var o = 1;
                this[r + i] = e & 255;
                while(--i >= 0 && (o *= 256)){
                    this[r + i] = e / o & 255;
                }
                return r + t;
            };
            Buffer.prototype.writeUInt8 = function writeUInt8(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 1, 255, 0);
                this[r] = e & 255;
                return r + 1;
            };
            Buffer.prototype.writeUInt16LE = function writeUInt16LE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 2, 65535, 0);
                this[r] = e & 255;
                this[r + 1] = e >>> 8;
                return r + 2;
            };
            Buffer.prototype.writeUInt16BE = function writeUInt16BE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 2, 65535, 0);
                this[r] = e >>> 8;
                this[r + 1] = e & 255;
                return r + 2;
            };
            Buffer.prototype.writeUInt32LE = function writeUInt32LE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 4, 4294967295, 0);
                this[r + 3] = e >>> 24;
                this[r + 2] = e >>> 16;
                this[r + 1] = e >>> 8;
                this[r] = e & 255;
                return r + 4;
            };
            Buffer.prototype.writeUInt32BE = function writeUInt32BE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 4, 4294967295, 0);
                this[r] = e >>> 24;
                this[r + 1] = e >>> 16;
                this[r + 2] = e >>> 8;
                this[r + 3] = e & 255;
                return r + 4;
            };
            Buffer.prototype.writeIntLE = function writeIntLE(e, r, t, f) {
                e = +e;
                r = r >>> 0;
                if (!f) {
                    var n = Math.pow(2, 8 * t - 1);
                    checkInt(this, e, r, t, n - 1, -n);
                }
                var i = 0;
                var o = 1;
                var u = 0;
                this[r] = e & 255;
                while(++i < t && (o *= 256)){
                    if (e < 0 && u === 0 && this[r + i - 1] !== 0) {
                        u = 1;
                    }
                    this[r + i] = (e / o >> 0) - u & 255;
                }
                return r + t;
            };
            Buffer.prototype.writeIntBE = function writeIntBE(e, r, t, f) {
                e = +e;
                r = r >>> 0;
                if (!f) {
                    var n = Math.pow(2, 8 * t - 1);
                    checkInt(this, e, r, t, n - 1, -n);
                }
                var i = t - 1;
                var o = 1;
                var u = 0;
                this[r + i] = e & 255;
                while(--i >= 0 && (o *= 256)){
                    if (e < 0 && u === 0 && this[r + i + 1] !== 0) {
                        u = 1;
                    }
                    this[r + i] = (e / o >> 0) - u & 255;
                }
                return r + t;
            };
            Buffer.prototype.writeInt8 = function writeInt8(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 1, 127, -128);
                if (e < 0) e = 255 + e + 1;
                this[r] = e & 255;
                return r + 1;
            };
            Buffer.prototype.writeInt16LE = function writeInt16LE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 2, 32767, -32768);
                this[r] = e & 255;
                this[r + 1] = e >>> 8;
                return r + 2;
            };
            Buffer.prototype.writeInt16BE = function writeInt16BE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 2, 32767, -32768);
                this[r] = e >>> 8;
                this[r + 1] = e & 255;
                return r + 2;
            };
            Buffer.prototype.writeInt32LE = function writeInt32LE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);
                this[r] = e & 255;
                this[r + 1] = e >>> 8;
                this[r + 2] = e >>> 16;
                this[r + 3] = e >>> 24;
                return r + 4;
            };
            Buffer.prototype.writeInt32BE = function writeInt32BE(e, r, t) {
                e = +e;
                r = r >>> 0;
                if (!t) checkInt(this, e, r, 4, 2147483647, -2147483648);
                if (e < 0) e = 4294967295 + e + 1;
                this[r] = e >>> 24;
                this[r + 1] = e >>> 16;
                this[r + 2] = e >>> 8;
                this[r + 3] = e & 255;
                return r + 4;
            };
            function checkIEEE754(e, r, t, f, n, i) {
                if (t + f > e.length) throw new RangeError("Index out of range");
                if (t < 0) throw new RangeError("Index out of range");
            }
            function writeFloat(e, r, t, f, i) {
                r = +r;
                t = t >>> 0;
                if (!i) {
                    checkIEEE754(e, r, t, 4, 34028234663852886e22, -34028234663852886e22);
                }
                n.write(e, r, t, f, 23, 4);
                return t + 4;
            }
            Buffer.prototype.writeFloatLE = function writeFloatLE(e, r, t) {
                return writeFloat(this, e, r, true, t);
            };
            Buffer.prototype.writeFloatBE = function writeFloatBE(e, r, t) {
                return writeFloat(this, e, r, false, t);
            };
            function writeDouble(e, r, t, f, i) {
                r = +r;
                t = t >>> 0;
                if (!i) {
                    checkIEEE754(e, r, t, 8, 17976931348623157e292, -17976931348623157e292);
                }
                n.write(e, r, t, f, 52, 8);
                return t + 8;
            }
            Buffer.prototype.writeDoubleLE = function writeDoubleLE(e, r, t) {
                return writeDouble(this, e, r, true, t);
            };
            Buffer.prototype.writeDoubleBE = function writeDoubleBE(e, r, t) {
                return writeDouble(this, e, r, false, t);
            };
            Buffer.prototype.copy = function copy(e, r, t, f) {
                if (!Buffer.isBuffer(e)) throw new TypeError("argument should be a Buffer");
                if (!t) t = 0;
                if (!f && f !== 0) f = this.length;
                if (r >= e.length) r = e.length;
                if (!r) r = 0;
                if (f > 0 && f < t) f = t;
                if (f === t) return 0;
                if (e.length === 0 || this.length === 0) return 0;
                if (r < 0) {
                    throw new RangeError("targetStart out of bounds");
                }
                if (t < 0 || t >= this.length) throw new RangeError("Index out of range");
                if (f < 0) throw new RangeError("sourceEnd out of bounds");
                if (f > this.length) f = this.length;
                if (e.length - r < f - t) {
                    f = e.length - r + t;
                }
                var n = f - t;
                if (this === e && typeof Uint8Array.prototype.copyWithin === "function") {
                    this.copyWithin(r, t, f);
                } else if (this === e && t < r && r < f) {
                    for(var i = n - 1; i >= 0; --i){
                        e[i + r] = this[i + t];
                    }
                } else {
                    Uint8Array.prototype.set.call(e, this.subarray(t, f), r);
                }
                return n;
            };
            Buffer.prototype.fill = function fill(e, r, t, f) {
                if (typeof e === "string") {
                    if (typeof r === "string") {
                        f = r;
                        r = 0;
                        t = this.length;
                    } else if (typeof t === "string") {
                        f = t;
                        t = this.length;
                    }
                    if (f !== undefined && typeof f !== "string") {
                        throw new TypeError("encoding must be a string");
                    }
                    if (typeof f === "string" && !Buffer.isEncoding(f)) {
                        throw new TypeError("Unknown encoding: " + f);
                    }
                    if (e.length === 1) {
                        var n = e.charCodeAt(0);
                        if (f === "utf8" && n < 128 || f === "latin1") {
                            e = n;
                        }
                    }
                } else if (typeof e === "number") {
                    e = e & 255;
                } else if (typeof e === "boolean") {
                    e = Number(e);
                }
                if (r < 0 || this.length < r || this.length < t) {
                    throw new RangeError("Out of range index");
                }
                if (t <= r) {
                    return this;
                }
                r = r >>> 0;
                t = t === undefined ? this.length : t >>> 0;
                if (!e) e = 0;
                var i;
                if (typeof e === "number") {
                    for(i = r; i < t; ++i){
                        this[i] = e;
                    }
                } else {
                    var o = Buffer.isBuffer(e) ? e : Buffer.from(e, f);
                    var u = o.length;
                    if (u === 0) {
                        throw new TypeError('The value "' + e + '" is invalid for argument "value"');
                    }
                    for(i = 0; i < t - r; ++i){
                        this[i + r] = o[i % u];
                    }
                }
                return this;
            };
            var a = /[^+/0-9A-Za-z-_]/g;
            function base64clean(e) {
                e = e.split("=")[0];
                e = e.trim().replace(a, "");
                if (e.length < 2) return "";
                while(e.length % 4 !== 0){
                    e = e + "=";
                }
                return e;
            }
            function utf8ToBytes(e, r) {
                r = r || Infinity;
                var t;
                var f = e.length;
                var n = null;
                var i = [];
                for(var o = 0; o < f; ++o){
                    t = e.charCodeAt(o);
                    if (t > 55295 && t < 57344) {
                        if (!n) {
                            if (t > 56319) {
                                if ((r -= 3) > -1) i.push(239, 191, 189);
                                continue;
                            } else if (o + 1 === f) {
                                if ((r -= 3) > -1) i.push(239, 191, 189);
                                continue;
                            }
                            n = t;
                            continue;
                        }
                        if (t < 56320) {
                            if ((r -= 3) > -1) i.push(239, 191, 189);
                            n = t;
                            continue;
                        }
                        t = (n - 55296 << 10 | t - 56320) + 65536;
                    } else if (n) {
                        if ((r -= 3) > -1) i.push(239, 191, 189);
                    }
                    n = null;
                    if (t < 128) {
                        if ((r -= 1) < 0) break;
                        i.push(t);
                    } else if (t < 2048) {
                        if ((r -= 2) < 0) break;
                        i.push(t >> 6 | 192, t & 63 | 128);
                    } else if (t < 65536) {
                        if ((r -= 3) < 0) break;
                        i.push(t >> 12 | 224, t >> 6 & 63 | 128, t & 63 | 128);
                    } else if (t < 1114112) {
                        if ((r -= 4) < 0) break;
                        i.push(t >> 18 | 240, t >> 12 & 63 | 128, t >> 6 & 63 | 128, t & 63 | 128);
                    } else {
                        throw new Error("Invalid code point");
                    }
                }
                return i;
            }
            function asciiToBytes(e) {
                var r = [];
                for(var t = 0; t < e.length; ++t){
                    r.push(e.charCodeAt(t) & 255);
                }
                return r;
            }
            function utf16leToBytes(e, r) {
                var t, f, n;
                var i = [];
                for(var o = 0; o < e.length; ++o){
                    if ((r -= 2) < 0) break;
                    t = e.charCodeAt(o);
                    f = t >> 8;
                    n = t % 256;
                    i.push(n);
                    i.push(f);
                }
                return i;
            }
            function base64ToBytes(e) {
                return f.toByteArray(base64clean(e));
            }
            function blitBuffer(e, r, t, f) {
                for(var n = 0; n < f; ++n){
                    if (n + t >= r.length || n >= e.length) break;
                    r[n + t] = e[n];
                }
                return n;
            }
            function isInstance(e, r) {
                return e instanceof r || e != null && e.constructor != null && e.constructor.name != null && e.constructor.name === r.name;
            }
            function numberIsNaN(e) {
                return e !== e;
            }
            var s = function() {
                var e = "0123456789abcdef";
                var r = new Array(256);
                for(var t = 0; t < 16; ++t){
                    var f = t * 16;
                    for(var n = 0; n < 16; ++n){
                        r[f + n] = e[t] + e[n];
                    }
                }
                return r;
            }();
        },
        783: function(e, r) {
            /*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ r.read = function(e, r, t, f, n) {
                var i, o;
                var u = n * 8 - f - 1;
                var a = (1 << u) - 1;
                var s = a >> 1;
                var h = -7;
                var c = t ? n - 1 : 0;
                var l = t ? -1 : 1;
                var p = e[r + c];
                c += l;
                i = p & (1 << -h) - 1;
                p >>= -h;
                h += u;
                for(; h > 0; i = i * 256 + e[r + c], c += l, h -= 8){}
                o = i & (1 << -h) - 1;
                i >>= -h;
                h += f;
                for(; h > 0; o = o * 256 + e[r + c], c += l, h -= 8){}
                if (i === 0) {
                    i = 1 - s;
                } else if (i === a) {
                    return o ? NaN : (p ? -1 : 1) * Infinity;
                } else {
                    o = o + Math.pow(2, f);
                    i = i - s;
                }
                return (p ? -1 : 1) * o * Math.pow(2, i - f);
            };
            r.write = function(e, r, t, f, n, i) {
                var o, u, a;
                var s = i * 8 - n - 1;
                var h = (1 << s) - 1;
                var c = h >> 1;
                var l = n === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
                var p = f ? 0 : i - 1;
                var y = f ? 1 : -1;
                var g = r < 0 || r === 0 && 1 / r < 0 ? 1 : 0;
                r = Math.abs(r);
                if (isNaN(r) || r === Infinity) {
                    u = isNaN(r) ? 1 : 0;
                    o = h;
                } else {
                    o = Math.floor(Math.log(r) / Math.LN2);
                    if (r * (a = Math.pow(2, -o)) < 1) {
                        o--;
                        a *= 2;
                    }
                    if (o + c >= 1) {
                        r += l / a;
                    } else {
                        r += l * Math.pow(2, 1 - c);
                    }
                    if (r * a >= 2) {
                        o++;
                        a /= 2;
                    }
                    if (o + c >= h) {
                        u = 0;
                        o = h;
                    } else if (o + c >= 1) {
                        u = (r * a - 1) * Math.pow(2, n);
                        o = o + c;
                    } else {
                        u = r * Math.pow(2, c - 1) * Math.pow(2, n);
                        o = 0;
                    }
                }
                for(; n >= 8; e[t + p] = u & 255, p += y, u /= 256, n -= 8){}
                o = o << n | u;
                s += n;
                for(; s > 0; e[t + p] = o & 255, p += y, o /= 256, s -= 8){}
                e[t + p - y] |= g * 128;
            };
        }
    };
    var r = {};
    function __nccwpck_require__(t) {
        var f = r[t];
        if (f !== undefined) {
            return f.exports;
        }
        var n = r[t] = {
            exports: {}
        };
        var i = true;
        try {
            e[t](n, n.exports, __nccwpck_require__);
            i = false;
        } finally{
            if (i) delete r[t];
        }
        return n.exports;
    }
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var t = __nccwpck_require__(72);
    module.exports = t;
})();
}}),
"[project]/node_modules/next/dist/compiled/path-browserify/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
(function() {
    "use strict";
    var e = {
        114: function(e) {
            function assertPath(e) {
                if (typeof e !== "string") {
                    throw new TypeError("Path must be a string. Received " + JSON.stringify(e));
                }
            }
            function normalizeStringPosix(e, r) {
                var t = "";
                var i = 0;
                var n = -1;
                var a = 0;
                var f;
                for(var l = 0; l <= e.length; ++l){
                    if (l < e.length) f = e.charCodeAt(l);
                    else if (f === 47) break;
                    else f = 47;
                    if (f === 47) {
                        if (n === l - 1 || a === 1) {} else if (n !== l - 1 && a === 2) {
                            if (t.length < 2 || i !== 2 || t.charCodeAt(t.length - 1) !== 46 || t.charCodeAt(t.length - 2) !== 46) {
                                if (t.length > 2) {
                                    var s = t.lastIndexOf("/");
                                    if (s !== t.length - 1) {
                                        if (s === -1) {
                                            t = "";
                                            i = 0;
                                        } else {
                                            t = t.slice(0, s);
                                            i = t.length - 1 - t.lastIndexOf("/");
                                        }
                                        n = l;
                                        a = 0;
                                        continue;
                                    }
                                } else if (t.length === 2 || t.length === 1) {
                                    t = "";
                                    i = 0;
                                    n = l;
                                    a = 0;
                                    continue;
                                }
                            }
                            if (r) {
                                if (t.length > 0) t += "/..";
                                else t = "..";
                                i = 2;
                            }
                        } else {
                            if (t.length > 0) t += "/" + e.slice(n + 1, l);
                            else t = e.slice(n + 1, l);
                            i = l - n - 1;
                        }
                        n = l;
                        a = 0;
                    } else if (f === 46 && a !== -1) {
                        ++a;
                    } else {
                        a = -1;
                    }
                }
                return t;
            }
            function _format(e, r) {
                var t = r.dir || r.root;
                var i = r.base || (r.name || "") + (r.ext || "");
                if (!t) {
                    return i;
                }
                if (t === r.root) {
                    return t + i;
                }
                return t + e + i;
            }
            var r = {
                resolve: function resolve() {
                    var e = "";
                    var r = false;
                    var t;
                    for(var i = arguments.length - 1; i >= -1 && !r; i--){
                        var n;
                        if (i >= 0) n = arguments[i];
                        else {
                            if (t === undefined) t = "";
                            n = t;
                        }
                        assertPath(n);
                        if (n.length === 0) {
                            continue;
                        }
                        e = n + "/" + e;
                        r = n.charCodeAt(0) === 47;
                    }
                    e = normalizeStringPosix(e, !r);
                    if (r) {
                        if (e.length > 0) return "/" + e;
                        else return "/";
                    } else if (e.length > 0) {
                        return e;
                    } else {
                        return ".";
                    }
                },
                normalize: function normalize(e) {
                    assertPath(e);
                    if (e.length === 0) return ".";
                    var r = e.charCodeAt(0) === 47;
                    var t = e.charCodeAt(e.length - 1) === 47;
                    e = normalizeStringPosix(e, !r);
                    if (e.length === 0 && !r) e = ".";
                    if (e.length > 0 && t) e += "/";
                    if (r) return "/" + e;
                    return e;
                },
                isAbsolute: function isAbsolute(e) {
                    assertPath(e);
                    return e.length > 0 && e.charCodeAt(0) === 47;
                },
                join: function join() {
                    if (arguments.length === 0) return ".";
                    var e;
                    for(var t = 0; t < arguments.length; ++t){
                        var i = arguments[t];
                        assertPath(i);
                        if (i.length > 0) {
                            if (e === undefined) e = i;
                            else e += "/" + i;
                        }
                    }
                    if (e === undefined) return ".";
                    return r.normalize(e);
                },
                relative: function relative(e, t) {
                    assertPath(e);
                    assertPath(t);
                    if (e === t) return "";
                    e = r.resolve(e);
                    t = r.resolve(t);
                    if (e === t) return "";
                    var i = 1;
                    for(; i < e.length; ++i){
                        if (e.charCodeAt(i) !== 47) break;
                    }
                    var n = e.length;
                    var a = n - i;
                    var f = 1;
                    for(; f < t.length; ++f){
                        if (t.charCodeAt(f) !== 47) break;
                    }
                    var l = t.length;
                    var s = l - f;
                    var o = a < s ? a : s;
                    var u = -1;
                    var h = 0;
                    for(; h <= o; ++h){
                        if (h === o) {
                            if (s > o) {
                                if (t.charCodeAt(f + h) === 47) {
                                    return t.slice(f + h + 1);
                                } else if (h === 0) {
                                    return t.slice(f + h);
                                }
                            } else if (a > o) {
                                if (e.charCodeAt(i + h) === 47) {
                                    u = h;
                                } else if (h === 0) {
                                    u = 0;
                                }
                            }
                            break;
                        }
                        var c = e.charCodeAt(i + h);
                        var v = t.charCodeAt(f + h);
                        if (c !== v) break;
                        else if (c === 47) u = h;
                    }
                    var g = "";
                    for(h = i + u + 1; h <= n; ++h){
                        if (h === n || e.charCodeAt(h) === 47) {
                            if (g.length === 0) g += "..";
                            else g += "/..";
                        }
                    }
                    if (g.length > 0) return g + t.slice(f + u);
                    else {
                        f += u;
                        if (t.charCodeAt(f) === 47) ++f;
                        return t.slice(f);
                    }
                },
                _makeLong: function _makeLong(e) {
                    return e;
                },
                dirname: function dirname(e) {
                    assertPath(e);
                    if (e.length === 0) return ".";
                    var r = e.charCodeAt(0);
                    var t = r === 47;
                    var i = -1;
                    var n = true;
                    for(var a = e.length - 1; a >= 1; --a){
                        r = e.charCodeAt(a);
                        if (r === 47) {
                            if (!n) {
                                i = a;
                                break;
                            }
                        } else {
                            n = false;
                        }
                    }
                    if (i === -1) return t ? "/" : ".";
                    if (t && i === 1) return "//";
                    return e.slice(0, i);
                },
                basename: function basename(e, r) {
                    if (r !== undefined && typeof r !== "string") throw new TypeError('"ext" argument must be a string');
                    assertPath(e);
                    var t = 0;
                    var i = -1;
                    var n = true;
                    var a;
                    if (r !== undefined && r.length > 0 && r.length <= e.length) {
                        if (r.length === e.length && r === e) return "";
                        var f = r.length - 1;
                        var l = -1;
                        for(a = e.length - 1; a >= 0; --a){
                            var s = e.charCodeAt(a);
                            if (s === 47) {
                                if (!n) {
                                    t = a + 1;
                                    break;
                                }
                            } else {
                                if (l === -1) {
                                    n = false;
                                    l = a + 1;
                                }
                                if (f >= 0) {
                                    if (s === r.charCodeAt(f)) {
                                        if (--f === -1) {
                                            i = a;
                                        }
                                    } else {
                                        f = -1;
                                        i = l;
                                    }
                                }
                            }
                        }
                        if (t === i) i = l;
                        else if (i === -1) i = e.length;
                        return e.slice(t, i);
                    } else {
                        for(a = e.length - 1; a >= 0; --a){
                            if (e.charCodeAt(a) === 47) {
                                if (!n) {
                                    t = a + 1;
                                    break;
                                }
                            } else if (i === -1) {
                                n = false;
                                i = a + 1;
                            }
                        }
                        if (i === -1) return "";
                        return e.slice(t, i);
                    }
                },
                extname: function extname(e) {
                    assertPath(e);
                    var r = -1;
                    var t = 0;
                    var i = -1;
                    var n = true;
                    var a = 0;
                    for(var f = e.length - 1; f >= 0; --f){
                        var l = e.charCodeAt(f);
                        if (l === 47) {
                            if (!n) {
                                t = f + 1;
                                break;
                            }
                            continue;
                        }
                        if (i === -1) {
                            n = false;
                            i = f + 1;
                        }
                        if (l === 46) {
                            if (r === -1) r = f;
                            else if (a !== 1) a = 1;
                        } else if (r !== -1) {
                            a = -1;
                        }
                    }
                    if (r === -1 || i === -1 || a === 0 || a === 1 && r === i - 1 && r === t + 1) {
                        return "";
                    }
                    return e.slice(r, i);
                },
                format: function format(e) {
                    if (e === null || typeof e !== "object") {
                        throw new TypeError('The "pathObject" argument must be of type Object. Received type ' + typeof e);
                    }
                    return _format("/", e);
                },
                parse: function parse(e) {
                    assertPath(e);
                    var r = {
                        root: "",
                        dir: "",
                        base: "",
                        ext: "",
                        name: ""
                    };
                    if (e.length === 0) return r;
                    var t = e.charCodeAt(0);
                    var i = t === 47;
                    var n;
                    if (i) {
                        r.root = "/";
                        n = 1;
                    } else {
                        n = 0;
                    }
                    var a = -1;
                    var f = 0;
                    var l = -1;
                    var s = true;
                    var o = e.length - 1;
                    var u = 0;
                    for(; o >= n; --o){
                        t = e.charCodeAt(o);
                        if (t === 47) {
                            if (!s) {
                                f = o + 1;
                                break;
                            }
                            continue;
                        }
                        if (l === -1) {
                            s = false;
                            l = o + 1;
                        }
                        if (t === 46) {
                            if (a === -1) a = o;
                            else if (u !== 1) u = 1;
                        } else if (a !== -1) {
                            u = -1;
                        }
                    }
                    if (a === -1 || l === -1 || u === 0 || u === 1 && a === l - 1 && a === f + 1) {
                        if (l !== -1) {
                            if (f === 0 && i) r.base = r.name = e.slice(1, l);
                            else r.base = r.name = e.slice(f, l);
                        }
                    } else {
                        if (f === 0 && i) {
                            r.name = e.slice(1, a);
                            r.base = e.slice(1, l);
                        } else {
                            r.name = e.slice(f, a);
                            r.base = e.slice(f, l);
                        }
                        r.ext = e.slice(a, l);
                    }
                    if (f > 0) r.dir = e.slice(0, f - 1);
                    else if (i) r.dir = "/";
                    return r;
                },
                sep: "/",
                delimiter: ":",
                win32: null,
                posix: null
            };
            r.posix = r;
            e.exports = r;
        }
    };
    var r = {};
    function __nccwpck_require__(t) {
        var i = r[t];
        if (i !== undefined) {
            return i.exports;
        }
        var n = r[t] = {
            exports: {}
        };
        var a = true;
        try {
            e[t](n, n.exports, __nccwpck_require__);
            a = false;
        } finally{
            if (a) delete r[t];
        }
        return n.exports;
    }
    if (typeof __nccwpck_require__ !== "undefined") __nccwpck_require__.ab = __dirname + "/";
    var t = __nccwpck_require__(114);
    module.exports = t;
})();
}}),
"[project]/node_modules/base64-js/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
exports.byteLength = byteLength;
exports.toByteArray = toByteArray;
exports.fromByteArray = fromByteArray;
var lookup = [];
var revLookup = [];
var Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array;
var code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
for(var i = 0, len = code.length; i < len; ++i){
    lookup[i] = code[i];
    revLookup[code.charCodeAt(i)] = i;
}
// Support decoding URL-safe base64 strings, as Node.js does.
// See: https://en.wikipedia.org/wiki/Base64#URL_applications
revLookup['-'.charCodeAt(0)] = 62;
revLookup['_'.charCodeAt(0)] = 63;
function getLens(b64) {
    var len = b64.length;
    if (len % 4 > 0) {
        throw new Error('Invalid string. Length must be a multiple of 4');
    }
    // Trim off extra bytes after placeholder bytes are found
    // See: https://github.com/beatgammit/base64-js/issues/42
    var validLen = b64.indexOf('=');
    if (validLen === -1) validLen = len;
    var placeHoldersLen = validLen === len ? 0 : 4 - validLen % 4;
    return [
        validLen,
        placeHoldersLen
    ];
}
// base64 is 4/3 + up to two characters of the original data
function byteLength(b64) {
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function _byteLength(b64, validLen, placeHoldersLen) {
    return (validLen + placeHoldersLen) * 3 / 4 - placeHoldersLen;
}
function toByteArray(b64) {
    var tmp;
    var lens = getLens(b64);
    var validLen = lens[0];
    var placeHoldersLen = lens[1];
    var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen));
    var curByte = 0;
    // if there are placeholders, only get up to the last complete 4 chars
    var len = placeHoldersLen > 0 ? validLen - 4 : validLen;
    var i;
    for(i = 0; i < len; i += 4){
        tmp = revLookup[b64.charCodeAt(i)] << 18 | revLookup[b64.charCodeAt(i + 1)] << 12 | revLookup[b64.charCodeAt(i + 2)] << 6 | revLookup[b64.charCodeAt(i + 3)];
        arr[curByte++] = tmp >> 16 & 0xFF;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 2) {
        tmp = revLookup[b64.charCodeAt(i)] << 2 | revLookup[b64.charCodeAt(i + 1)] >> 4;
        arr[curByte++] = tmp & 0xFF;
    }
    if (placeHoldersLen === 1) {
        tmp = revLookup[b64.charCodeAt(i)] << 10 | revLookup[b64.charCodeAt(i + 1)] << 4 | revLookup[b64.charCodeAt(i + 2)] >> 2;
        arr[curByte++] = tmp >> 8 & 0xFF;
        arr[curByte++] = tmp & 0xFF;
    }
    return arr;
}
function tripletToBase64(num) {
    return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F];
}
function encodeChunk(uint8, start, end) {
    var tmp;
    var output = [];
    for(var i = start; i < end; i += 3){
        tmp = (uint8[i] << 16 & 0xFF0000) + (uint8[i + 1] << 8 & 0xFF00) + (uint8[i + 2] & 0xFF);
        output.push(tripletToBase64(tmp));
    }
    return output.join('');
}
function fromByteArray(uint8) {
    var tmp;
    var len = uint8.length;
    var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes
    ;
    var parts = [];
    var maxChunkLength = 16383 // must be multiple of 3
    ;
    // go through the array every three bytes, we'll deal with trailing stuff later
    for(var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength){
        parts.push(encodeChunk(uint8, i, i + maxChunkLength > len2 ? len2 : i + maxChunkLength));
    }
    // pad the end with zeros, but make sure to not forget the extra bytes
    if (extraBytes === 1) {
        tmp = uint8[len - 1];
        parts.push(lookup[tmp >> 2] + lookup[tmp << 4 & 0x3F] + '==');
    } else if (extraBytes === 2) {
        tmp = (uint8[len - 2] << 8) + uint8[len - 1];
        parts.push(lookup[tmp >> 10] + lookup[tmp >> 4 & 0x3F] + lookup[tmp << 2 & 0x3F] + '=');
    }
    return parts.join('');
}
}}),
"[project]/node_modules/ieee754/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */ exports.read = function(buffer, offset, isLE, mLen, nBytes) {
    var e, m;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var nBits = -7;
    var i = isLE ? nBytes - 1 : 0;
    var d = isLE ? -1 : 1;
    var s = buffer[offset + i];
    i += d;
    e = s & (1 << -nBits) - 1;
    s >>= -nBits;
    nBits += eLen;
    for(; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8){}
    m = e & (1 << -nBits) - 1;
    e >>= -nBits;
    nBits += mLen;
    for(; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8){}
    if (e === 0) {
        e = 1 - eBias;
    } else if (e === eMax) {
        return m ? NaN : (s ? -1 : 1) * Infinity;
    } else {
        m = m + Math.pow(2, mLen);
        e = e - eBias;
    }
    return (s ? -1 : 1) * m * Math.pow(2, e - mLen);
};
exports.write = function(buffer, value, offset, isLE, mLen, nBytes) {
    var e, m, c;
    var eLen = nBytes * 8 - mLen - 1;
    var eMax = (1 << eLen) - 1;
    var eBias = eMax >> 1;
    var rt = mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0;
    var i = isLE ? 0 : nBytes - 1;
    var d = isLE ? 1 : -1;
    var s = value < 0 || value === 0 && 1 / value < 0 ? 1 : 0;
    value = Math.abs(value);
    if (isNaN(value) || value === Infinity) {
        m = isNaN(value) ? 1 : 0;
        e = eMax;
    } else {
        e = Math.floor(Math.log(value) / Math.LN2);
        if (value * (c = Math.pow(2, -e)) < 1) {
            e--;
            c *= 2;
        }
        if (e + eBias >= 1) {
            value += rt / c;
        } else {
            value += rt * Math.pow(2, 1 - eBias);
        }
        if (value * c >= 2) {
            e++;
            c /= 2;
        }
        if (e + eBias >= eMax) {
            m = 0;
            e = eMax;
        } else if (e + eBias >= 1) {
            m = (value * c - 1) * Math.pow(2, mLen);
            e = e + eBias;
        } else {
            m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen);
            e = 0;
        }
    }
    for(; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8){}
    e = e << mLen | m;
    eLen += mLen;
    for(; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8){}
    buffer[offset + i - d] |= s * 128;
};
}}),
"[project]/node_modules/buffer/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/*!
 * The buffer module from node.js, for the browser.
 *
 * @author   Feross Aboukhadijeh <https://feross.org>
 * @license  MIT
 */ /* eslint-disable no-proto */ 'use strict';
var base64 = __turbopack_require__("[project]/node_modules/base64-js/index.js [app-client] (ecmascript)");
var ieee754 = __turbopack_require__("[project]/node_modules/ieee754/index.js [app-client] (ecmascript)");
var customInspectSymbol = typeof Symbol === 'function' && typeof Symbol['for'] === 'function' ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation
 : null;
exports.Buffer = Buffer;
exports.SlowBuffer = SlowBuffer;
exports.INSPECT_MAX_BYTES = 50;
var K_MAX_LENGTH = 0x7fffffff;
exports.kMaxLength = K_MAX_LENGTH;
/**
 * If `Buffer.TYPED_ARRAY_SUPPORT`:
 *   === true    Use Uint8Array implementation (fastest)
 *   === false   Print warning and recommend using `buffer` v4.x which has an Object
 *               implementation (most compatible, even IE6)
 *
 * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,
 * Opera 11.6+, iOS 4.2+.
 *
 * We report that the browser does not support typed arrays if the are not subclassable
 * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`
 * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support
 * for __proto__ and has a buggy typed array implementation.
 */ Buffer.TYPED_ARRAY_SUPPORT = typedArraySupport();
if (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' && typeof console.error === 'function') {
    console.error('This browser lacks typed array (Uint8Array) support which is required by ' + '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.');
}
function typedArraySupport() {
    // Can typed array instances can be augmented?
    try {
        var arr = new Uint8Array(1);
        var proto = {
            foo: function() {
                return 42;
            }
        };
        Object.setPrototypeOf(proto, Uint8Array.prototype);
        Object.setPrototypeOf(arr, proto);
        return arr.foo() === 42;
    } catch (e) {
        return false;
    }
}
Object.defineProperty(Buffer.prototype, 'parent', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.buffer;
    }
});
Object.defineProperty(Buffer.prototype, 'offset', {
    enumerable: true,
    get: function() {
        if (!Buffer.isBuffer(this)) return undefined;
        return this.byteOffset;
    }
});
function createBuffer(length) {
    if (length > K_MAX_LENGTH) {
        throw new RangeError('The value "' + length + '" is invalid for option "size"');
    }
    // Return an augmented `Uint8Array` instance
    var buf = new Uint8Array(length);
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
/**
 * The Buffer constructor returns instances of `Uint8Array` that have their
 * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of
 * `Uint8Array`, so the returned instances will have all the node `Buffer` methods
 * and the `Uint8Array` methods. Square bracket notation works as expected -- it
 * returns a single octet.
 *
 * The `Uint8Array` prototype remains unmodified.
 */ function Buffer(arg, encodingOrOffset, length) {
    // Common case.
    if (typeof arg === 'number') {
        if (typeof encodingOrOffset === 'string') {
            throw new TypeError('The "string" argument must be of type string. Received type number');
        }
        return allocUnsafe(arg);
    }
    return from(arg, encodingOrOffset, length);
}
Buffer.poolSize = 8192 // not used by this implementation
;
function from(value, encodingOrOffset, length) {
    if (typeof value === 'string') {
        return fromString(value, encodingOrOffset);
    }
    if (ArrayBuffer.isView(value)) {
        return fromArrayView(value);
    }
    if (value == null) {
        throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
    }
    if (isInstance(value, ArrayBuffer) || value && isInstance(value.buffer, ArrayBuffer)) {
        return fromArrayBuffer(value, encodingOrOffset, length);
    }
    if (typeof SharedArrayBuffer !== 'undefined' && (isInstance(value, SharedArrayBuffer) || value && isInstance(value.buffer, SharedArrayBuffer))) {
        return fromArrayBuffer(value, encodingOrOffset, length);
    }
    if (typeof value === 'number') {
        throw new TypeError('The "value" argument must not be of type number. Received type number');
    }
    var valueOf = value.valueOf && value.valueOf();
    if (valueOf != null && valueOf !== value) {
        return Buffer.from(valueOf, encodingOrOffset, length);
    }
    var b = fromObject(value);
    if (b) return b;
    if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null && typeof value[Symbol.toPrimitive] === 'function') {
        return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length);
    }
    throw new TypeError('The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' + 'or Array-like Object. Received type ' + typeof value);
}
/**
 * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError
 * if value is a number.
 * Buffer.from(str[, encoding])
 * Buffer.from(array)
 * Buffer.from(buffer)
 * Buffer.from(arrayBuffer[, byteOffset[, length]])
 **/ Buffer.from = function(value, encodingOrOffset, length) {
    return from(value, encodingOrOffset, length);
};
// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:
// https://github.com/feross/buffer/pull/148
Object.setPrototypeOf(Buffer.prototype, Uint8Array.prototype);
Object.setPrototypeOf(Buffer, Uint8Array);
function assertSize(size) {
    if (typeof size !== 'number') {
        throw new TypeError('"size" argument must be of type number');
    } else if (size < 0) {
        throw new RangeError('The value "' + size + '" is invalid for option "size"');
    }
}
function alloc(size, fill, encoding) {
    assertSize(size);
    if (size <= 0) {
        return createBuffer(size);
    }
    if (fill !== undefined) {
        // Only pay attention to encoding if it's a string. This
        // prevents accidentally sending in a number that would
        // be interpreted as a start offset.
        return typeof encoding === 'string' ? createBuffer(size).fill(fill, encoding) : createBuffer(size).fill(fill);
    }
    return createBuffer(size);
}
/**
 * Creates a new filled Buffer instance.
 * alloc(size[, fill[, encoding]])
 **/ Buffer.alloc = function(size, fill, encoding) {
    return alloc(size, fill, encoding);
};
function allocUnsafe(size) {
    assertSize(size);
    return createBuffer(size < 0 ? 0 : checked(size) | 0);
}
/**
 * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.
 * */ Buffer.allocUnsafe = function(size) {
    return allocUnsafe(size);
};
/**
 * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.
 */ Buffer.allocUnsafeSlow = function(size) {
    return allocUnsafe(size);
};
function fromString(string, encoding) {
    if (typeof encoding !== 'string' || encoding === '') {
        encoding = 'utf8';
    }
    if (!Buffer.isEncoding(encoding)) {
        throw new TypeError('Unknown encoding: ' + encoding);
    }
    var length = byteLength(string, encoding) | 0;
    var buf = createBuffer(length);
    var actual = buf.write(string, encoding);
    if (actual !== length) {
        // Writing a hex string, for example, that contains invalid characters will
        // cause everything after the first invalid character to be ignored. (e.g.
        // 'abxxcd' will be treated as 'ab')
        buf = buf.slice(0, actual);
    }
    return buf;
}
function fromArrayLike(array) {
    var length = array.length < 0 ? 0 : checked(array.length) | 0;
    var buf = createBuffer(length);
    for(var i = 0; i < length; i += 1){
        buf[i] = array[i] & 255;
    }
    return buf;
}
function fromArrayView(arrayView) {
    if (isInstance(arrayView, Uint8Array)) {
        var copy = new Uint8Array(arrayView);
        return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength);
    }
    return fromArrayLike(arrayView);
}
function fromArrayBuffer(array, byteOffset, length) {
    if (byteOffset < 0 || array.byteLength < byteOffset) {
        throw new RangeError('"offset" is outside of buffer bounds');
    }
    if (array.byteLength < byteOffset + (length || 0)) {
        throw new RangeError('"length" is outside of buffer bounds');
    }
    var buf;
    if (byteOffset === undefined && length === undefined) {
        buf = new Uint8Array(array);
    } else if (length === undefined) {
        buf = new Uint8Array(array, byteOffset);
    } else {
        buf = new Uint8Array(array, byteOffset, length);
    }
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(buf, Buffer.prototype);
    return buf;
}
function fromObject(obj) {
    if (Buffer.isBuffer(obj)) {
        var len = checked(obj.length) | 0;
        var buf = createBuffer(len);
        if (buf.length === 0) {
            return buf;
        }
        obj.copy(buf, 0, 0, len);
        return buf;
    }
    if (obj.length !== undefined) {
        if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {
            return createBuffer(0);
        }
        return fromArrayLike(obj);
    }
    if (obj.type === 'Buffer' && Array.isArray(obj.data)) {
        return fromArrayLike(obj.data);
    }
}
function checked(length) {
    // Note: cannot use `length < K_MAX_LENGTH` here because that fails when
    // length is NaN (which is otherwise coerced to zero.)
    if (length >= K_MAX_LENGTH) {
        throw new RangeError('Attempt to allocate Buffer larger than maximum ' + 'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes');
    }
    return length | 0;
}
function SlowBuffer(length) {
    if (+length != length) {
        length = 0;
    }
    return Buffer.alloc(+length);
}
Buffer.isBuffer = function isBuffer(b) {
    return b != null && b._isBuffer === true && b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false
    ;
};
Buffer.compare = function compare(a, b) {
    if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength);
    if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength);
    if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {
        throw new TypeError('The "buf1", "buf2" arguments must be one of type Buffer or Uint8Array');
    }
    if (a === b) return 0;
    var x = a.length;
    var y = b.length;
    for(var i = 0, len = Math.min(x, y); i < len; ++i){
        if (a[i] !== b[i]) {
            x = a[i];
            y = b[i];
            break;
        }
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
Buffer.isEncoding = function isEncoding(encoding) {
    switch(String(encoding).toLowerCase()){
        case 'hex':
        case 'utf8':
        case 'utf-8':
        case 'ascii':
        case 'latin1':
        case 'binary':
        case 'base64':
        case 'ucs2':
        case 'ucs-2':
        case 'utf16le':
        case 'utf-16le':
            return true;
        default:
            return false;
    }
};
Buffer.concat = function concat(list, length) {
    if (!Array.isArray(list)) {
        throw new TypeError('"list" argument must be an Array of Buffers');
    }
    if (list.length === 0) {
        return Buffer.alloc(0);
    }
    var i;
    if (length === undefined) {
        length = 0;
        for(i = 0; i < list.length; ++i){
            length += list[i].length;
        }
    }
    var buffer = Buffer.allocUnsafe(length);
    var pos = 0;
    for(i = 0; i < list.length; ++i){
        var buf = list[i];
        if (isInstance(buf, Uint8Array)) {
            if (pos + buf.length > buffer.length) {
                Buffer.from(buf).copy(buffer, pos);
            } else {
                Uint8Array.prototype.set.call(buffer, buf, pos);
            }
        } else if (!Buffer.isBuffer(buf)) {
            throw new TypeError('"list" argument must be an Array of Buffers');
        } else {
            buf.copy(buffer, pos);
        }
        pos += buf.length;
    }
    return buffer;
};
function byteLength(string, encoding) {
    if (Buffer.isBuffer(string)) {
        return string.length;
    }
    if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {
        return string.byteLength;
    }
    if (typeof string !== 'string') {
        throw new TypeError('The "string" argument must be one of type string, Buffer, or ArrayBuffer. ' + 'Received type ' + typeof string);
    }
    var len = string.length;
    var mustMatch = arguments.length > 2 && arguments[2] === true;
    if (!mustMatch && len === 0) return 0;
    // Use a for loop to avoid recursion
    var loweredCase = false;
    for(;;){
        switch(encoding){
            case 'ascii':
            case 'latin1':
            case 'binary':
                return len;
            case 'utf8':
            case 'utf-8':
                return utf8ToBytes(string).length;
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return len * 2;
            case 'hex':
                return len >>> 1;
            case 'base64':
                return base64ToBytes(string).length;
            default:
                if (loweredCase) {
                    return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8
                    ;
                }
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
        }
    }
}
Buffer.byteLength = byteLength;
function slowToString(encoding, start, end) {
    var loweredCase = false;
    // No need to verify that "this.length <= MAX_UINT32" since it's a read-only
    // property of a typed array.
    // This behaves neither like String nor Uint8Array in that we set start/end
    // to their upper/lower bounds if the value passed is out of range.
    // undefined is handled specially as per ECMA-262 6th Edition,
    // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.
    if (start === undefined || start < 0) {
        start = 0;
    }
    // Return early if start > this.length. Done here to prevent potential uint32
    // coercion fail below.
    if (start > this.length) {
        return '';
    }
    if (end === undefined || end > this.length) {
        end = this.length;
    }
    if (end <= 0) {
        return '';
    }
    // Force coercion to uint32. This will also coerce falsey/NaN values to 0.
    end >>>= 0;
    start >>>= 0;
    if (end <= start) {
        return '';
    }
    if (!encoding) encoding = 'utf8';
    while(true){
        switch(encoding){
            case 'hex':
                return hexSlice(this, start, end);
            case 'utf8':
            case 'utf-8':
                return utf8Slice(this, start, end);
            case 'ascii':
                return asciiSlice(this, start, end);
            case 'latin1':
            case 'binary':
                return latin1Slice(this, start, end);
            case 'base64':
                return base64Slice(this, start, end);
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return utf16leSlice(this, start, end);
            default:
                if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                encoding = (encoding + '').toLowerCase();
                loweredCase = true;
        }
    }
}
// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)
// to detect a Buffer instance. It's not possible to use `instanceof Buffer`
// reliably in a browserify context because there could be multiple different
// copies of the 'buffer' package in use. This method works even for Buffer
// instances that were created from another copy of the `buffer` package.
// See: https://github.com/feross/buffer/issues/154
Buffer.prototype._isBuffer = true;
function swap(b, n, m) {
    var i = b[n];
    b[n] = b[m];
    b[m] = i;
}
Buffer.prototype.swap16 = function swap16() {
    var len = this.length;
    if (len % 2 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 16-bits');
    }
    for(var i = 0; i < len; i += 2){
        swap(this, i, i + 1);
    }
    return this;
};
Buffer.prototype.swap32 = function swap32() {
    var len = this.length;
    if (len % 4 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 32-bits');
    }
    for(var i = 0; i < len; i += 4){
        swap(this, i, i + 3);
        swap(this, i + 1, i + 2);
    }
    return this;
};
Buffer.prototype.swap64 = function swap64() {
    var len = this.length;
    if (len % 8 !== 0) {
        throw new RangeError('Buffer size must be a multiple of 64-bits');
    }
    for(var i = 0; i < len; i += 8){
        swap(this, i, i + 7);
        swap(this, i + 1, i + 6);
        swap(this, i + 2, i + 5);
        swap(this, i + 3, i + 4);
    }
    return this;
};
Buffer.prototype.toString = function toString() {
    var length = this.length;
    if (length === 0) return '';
    if (arguments.length === 0) return utf8Slice(this, 0, length);
    return slowToString.apply(this, arguments);
};
Buffer.prototype.toLocaleString = Buffer.prototype.toString;
Buffer.prototype.equals = function equals(b) {
    if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer');
    if (this === b) return true;
    return Buffer.compare(this, b) === 0;
};
Buffer.prototype.inspect = function inspect() {
    var str = '';
    var max = exports.INSPECT_MAX_BYTES;
    str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim();
    if (this.length > max) str += ' ... ';
    return '<Buffer ' + str + '>';
};
if (customInspectSymbol) {
    Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect;
}
Buffer.prototype.compare = function compare(target, start, end, thisStart, thisEnd) {
    if (isInstance(target, Uint8Array)) {
        target = Buffer.from(target, target.offset, target.byteLength);
    }
    if (!Buffer.isBuffer(target)) {
        throw new TypeError('The "target" argument must be one of type Buffer or Uint8Array. ' + 'Received type ' + typeof target);
    }
    if (start === undefined) {
        start = 0;
    }
    if (end === undefined) {
        end = target ? target.length : 0;
    }
    if (thisStart === undefined) {
        thisStart = 0;
    }
    if (thisEnd === undefined) {
        thisEnd = this.length;
    }
    if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {
        throw new RangeError('out of range index');
    }
    if (thisStart >= thisEnd && start >= end) {
        return 0;
    }
    if (thisStart >= thisEnd) {
        return -1;
    }
    if (start >= end) {
        return 1;
    }
    start >>>= 0;
    end >>>= 0;
    thisStart >>>= 0;
    thisEnd >>>= 0;
    if (this === target) return 0;
    var x = thisEnd - thisStart;
    var y = end - start;
    var len = Math.min(x, y);
    var thisCopy = this.slice(thisStart, thisEnd);
    var targetCopy = target.slice(start, end);
    for(var i = 0; i < len; ++i){
        if (thisCopy[i] !== targetCopy[i]) {
            x = thisCopy[i];
            y = targetCopy[i];
            break;
        }
    }
    if (x < y) return -1;
    if (y < x) return 1;
    return 0;
};
// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,
// OR the last index of `val` in `buffer` at offset <= `byteOffset`.
//
// Arguments:
// - buffer - a Buffer to search
// - val - a string, Buffer, or number
// - byteOffset - an index into `buffer`; will be clamped to an int32
// - encoding - an optional encoding, relevant is val is a string
// - dir - true for indexOf, false for lastIndexOf
function bidirectionalIndexOf(buffer, val, byteOffset, encoding, dir) {
    // Empty buffer means no match
    if (buffer.length === 0) return -1;
    // Normalize byteOffset
    if (typeof byteOffset === 'string') {
        encoding = byteOffset;
        byteOffset = 0;
    } else if (byteOffset > 0x7fffffff) {
        byteOffset = 0x7fffffff;
    } else if (byteOffset < -0x80000000) {
        byteOffset = -0x80000000;
    }
    byteOffset = +byteOffset // Coerce to Number.
    ;
    if (numberIsNaN(byteOffset)) {
        // byteOffset: it it's undefined, null, NaN, "foo", etc, search whole buffer
        byteOffset = dir ? 0 : buffer.length - 1;
    }
    // Normalize byteOffset: negative offsets start from the end of the buffer
    if (byteOffset < 0) byteOffset = buffer.length + byteOffset;
    if (byteOffset >= buffer.length) {
        if (dir) return -1;
        else byteOffset = buffer.length - 1;
    } else if (byteOffset < 0) {
        if (dir) byteOffset = 0;
        else return -1;
    }
    // Normalize val
    if (typeof val === 'string') {
        val = Buffer.from(val, encoding);
    }
    // Finally, search either indexOf (if dir is true) or lastIndexOf
    if (Buffer.isBuffer(val)) {
        // Special case: looking for empty string/buffer always fails
        if (val.length === 0) {
            return -1;
        }
        return arrayIndexOf(buffer, val, byteOffset, encoding, dir);
    } else if (typeof val === 'number') {
        val = val & 0xFF // Search for a byte value [0-255]
        ;
        if (typeof Uint8Array.prototype.indexOf === 'function') {
            if (dir) {
                return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset);
            } else {
                return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset);
            }
        }
        return arrayIndexOf(buffer, [
            val
        ], byteOffset, encoding, dir);
    }
    throw new TypeError('val must be string, number or Buffer');
}
function arrayIndexOf(arr, val, byteOffset, encoding, dir) {
    var indexSize = 1;
    var arrLength = arr.length;
    var valLength = val.length;
    if (encoding !== undefined) {
        encoding = String(encoding).toLowerCase();
        if (encoding === 'ucs2' || encoding === 'ucs-2' || encoding === 'utf16le' || encoding === 'utf-16le') {
            if (arr.length < 2 || val.length < 2) {
                return -1;
            }
            indexSize = 2;
            arrLength /= 2;
            valLength /= 2;
            byteOffset /= 2;
        }
    }
    function read(buf, i) {
        if (indexSize === 1) {
            return buf[i];
        } else {
            return buf.readUInt16BE(i * indexSize);
        }
    }
    var i;
    if (dir) {
        var foundIndex = -1;
        for(i = byteOffset; i < arrLength; i++){
            if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {
                if (foundIndex === -1) foundIndex = i;
                if (i - foundIndex + 1 === valLength) return foundIndex * indexSize;
            } else {
                if (foundIndex !== -1) i -= i - foundIndex;
                foundIndex = -1;
            }
        }
    } else {
        if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength;
        for(i = byteOffset; i >= 0; i--){
            var found = true;
            for(var j = 0; j < valLength; j++){
                if (read(arr, i + j) !== read(val, j)) {
                    found = false;
                    break;
                }
            }
            if (found) return i;
        }
    }
    return -1;
}
Buffer.prototype.includes = function includes(val, byteOffset, encoding) {
    return this.indexOf(val, byteOffset, encoding) !== -1;
};
Buffer.prototype.indexOf = function indexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, true);
};
Buffer.prototype.lastIndexOf = function lastIndexOf(val, byteOffset, encoding) {
    return bidirectionalIndexOf(this, val, byteOffset, encoding, false);
};
function hexWrite(buf, string, offset, length) {
    offset = Number(offset) || 0;
    var remaining = buf.length - offset;
    if (!length) {
        length = remaining;
    } else {
        length = Number(length);
        if (length > remaining) {
            length = remaining;
        }
    }
    var strLen = string.length;
    if (length > strLen / 2) {
        length = strLen / 2;
    }
    for(var i = 0; i < length; ++i){
        var parsed = parseInt(string.substr(i * 2, 2), 16);
        if (numberIsNaN(parsed)) return i;
        buf[offset + i] = parsed;
    }
    return i;
}
function utf8Write(buf, string, offset, length) {
    return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length);
}
function asciiWrite(buf, string, offset, length) {
    return blitBuffer(asciiToBytes(string), buf, offset, length);
}
function base64Write(buf, string, offset, length) {
    return blitBuffer(base64ToBytes(string), buf, offset, length);
}
function ucs2Write(buf, string, offset, length) {
    return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length);
}
Buffer.prototype.write = function write(string, offset, length, encoding) {
    // Buffer#write(string)
    if (offset === undefined) {
        encoding = 'utf8';
        length = this.length;
        offset = 0;
    // Buffer#write(string, encoding)
    } else if (length === undefined && typeof offset === 'string') {
        encoding = offset;
        length = this.length;
        offset = 0;
    // Buffer#write(string, offset[, length][, encoding])
    } else if (isFinite(offset)) {
        offset = offset >>> 0;
        if (isFinite(length)) {
            length = length >>> 0;
            if (encoding === undefined) encoding = 'utf8';
        } else {
            encoding = length;
            length = undefined;
        }
    } else {
        throw new Error('Buffer.write(string, encoding, offset[, length]) is no longer supported');
    }
    var remaining = this.length - offset;
    if (length === undefined || length > remaining) length = remaining;
    if (string.length > 0 && (length < 0 || offset < 0) || offset > this.length) {
        throw new RangeError('Attempt to write outside buffer bounds');
    }
    if (!encoding) encoding = 'utf8';
    var loweredCase = false;
    for(;;){
        switch(encoding){
            case 'hex':
                return hexWrite(this, string, offset, length);
            case 'utf8':
            case 'utf-8':
                return utf8Write(this, string, offset, length);
            case 'ascii':
            case 'latin1':
            case 'binary':
                return asciiWrite(this, string, offset, length);
            case 'base64':
                // Warning: maxLength not taken into account in base64Write
                return base64Write(this, string, offset, length);
            case 'ucs2':
            case 'ucs-2':
            case 'utf16le':
            case 'utf-16le':
                return ucs2Write(this, string, offset, length);
            default:
                if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding);
                encoding = ('' + encoding).toLowerCase();
                loweredCase = true;
        }
    }
};
Buffer.prototype.toJSON = function toJSON() {
    return {
        type: 'Buffer',
        data: Array.prototype.slice.call(this._arr || this, 0)
    };
};
function base64Slice(buf, start, end) {
    if (start === 0 && end === buf.length) {
        return base64.fromByteArray(buf);
    } else {
        return base64.fromByteArray(buf.slice(start, end));
    }
}
function utf8Slice(buf, start, end) {
    end = Math.min(buf.length, end);
    var res = [];
    var i = start;
    while(i < end){
        var firstByte = buf[i];
        var codePoint = null;
        var bytesPerSequence = firstByte > 0xEF ? 4 : firstByte > 0xDF ? 3 : firstByte > 0xBF ? 2 : 1;
        if (i + bytesPerSequence <= end) {
            var secondByte, thirdByte, fourthByte, tempCodePoint;
            switch(bytesPerSequence){
                case 1:
                    if (firstByte < 0x80) {
                        codePoint = firstByte;
                    }
                    break;
                case 2:
                    secondByte = buf[i + 1];
                    if ((secondByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0x1F) << 0x6 | secondByte & 0x3F;
                        if (tempCodePoint > 0x7F) {
                            codePoint = tempCodePoint;
                        }
                    }
                    break;
                case 3:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | thirdByte & 0x3F;
                        if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {
                            codePoint = tempCodePoint;
                        }
                    }
                    break;
                case 4:
                    secondByte = buf[i + 1];
                    thirdByte = buf[i + 2];
                    fourthByte = buf[i + 3];
                    if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {
                        tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | fourthByte & 0x3F;
                        if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {
                            codePoint = tempCodePoint;
                        }
                    }
            }
        }
        if (codePoint === null) {
            // we did not generate a valid codePoint so insert a
            // replacement char (U+FFFD) and advance only 1 byte
            codePoint = 0xFFFD;
            bytesPerSequence = 1;
        } else if (codePoint > 0xFFFF) {
            // encode to utf16 (surrogate pair dance)
            codePoint -= 0x10000;
            res.push(codePoint >>> 10 & 0x3FF | 0xD800);
            codePoint = 0xDC00 | codePoint & 0x3FF;
        }
        res.push(codePoint);
        i += bytesPerSequence;
    }
    return decodeCodePointsArray(res);
}
// Based on http://stackoverflow.com/a/22747272/680742, the browser with
// the lowest limit is Chrome, with 0x10000 args.
// We go 1 magnitude less, for safety
var MAX_ARGUMENTS_LENGTH = 0x1000;
function decodeCodePointsArray(codePoints) {
    var len = codePoints.length;
    if (len <= MAX_ARGUMENTS_LENGTH) {
        return String.fromCharCode.apply(String, codePoints) // avoid extra slice()
        ;
    }
    // Decode in chunks to avoid "call stack size exceeded".
    var res = '';
    var i = 0;
    while(i < len){
        res += String.fromCharCode.apply(String, codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH));
    }
    return res;
}
function asciiSlice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i){
        ret += String.fromCharCode(buf[i] & 0x7F);
    }
    return ret;
}
function latin1Slice(buf, start, end) {
    var ret = '';
    end = Math.min(buf.length, end);
    for(var i = start; i < end; ++i){
        ret += String.fromCharCode(buf[i]);
    }
    return ret;
}
function hexSlice(buf, start, end) {
    var len = buf.length;
    if (!start || start < 0) start = 0;
    if (!end || end < 0 || end > len) end = len;
    var out = '';
    for(var i = start; i < end; ++i){
        out += hexSliceLookupTable[buf[i]];
    }
    return out;
}
function utf16leSlice(buf, start, end) {
    var bytes = buf.slice(start, end);
    var res = '';
    // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)
    for(var i = 0; i < bytes.length - 1; i += 2){
        res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256);
    }
    return res;
}
Buffer.prototype.slice = function slice(start, end) {
    var len = this.length;
    start = ~~start;
    end = end === undefined ? len : ~~end;
    if (start < 0) {
        start += len;
        if (start < 0) start = 0;
    } else if (start > len) {
        start = len;
    }
    if (end < 0) {
        end += len;
        if (end < 0) end = 0;
    } else if (end > len) {
        end = len;
    }
    if (end < start) end = start;
    var newBuf = this.subarray(start, end);
    // Return an augmented `Uint8Array` instance
    Object.setPrototypeOf(newBuf, Buffer.prototype);
    return newBuf;
};
/*
 * Need to make sure that buffer isn't trying to write out of bounds.
 */ function checkOffset(offset, ext, length) {
    if (offset % 1 !== 0 || offset < 0) throw new RangeError('offset is not uint');
    if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length');
}
Buffer.prototype.readUintLE = Buffer.prototype.readUIntLE = function readUIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while(++i < byteLength && (mul *= 0x100)){
        val += this[offset + i] * mul;
    }
    return val;
};
Buffer.prototype.readUintBE = Buffer.prototype.readUIntBE = function readUIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        checkOffset(offset, byteLength, this.length);
    }
    var val = this[offset + --byteLength];
    var mul = 1;
    while(byteLength > 0 && (mul *= 0x100)){
        val += this[offset + --byteLength] * mul;
    }
    return val;
};
Buffer.prototype.readUint8 = Buffer.prototype.readUInt8 = function readUInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    return this[offset];
};
Buffer.prototype.readUint16LE = Buffer.prototype.readUInt16LE = function readUInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] | this[offset + 1] << 8;
};
Buffer.prototype.readUint16BE = Buffer.prototype.readUInt16BE = function readUInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    return this[offset] << 8 | this[offset + 1];
};
Buffer.prototype.readUint32LE = Buffer.prototype.readUInt32LE = function readUInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return (this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16) + this[offset + 3] * 0x1000000;
};
Buffer.prototype.readUint32BE = Buffer.prototype.readUInt32BE = function readUInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] * 0x1000000 + (this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3]);
};
Buffer.prototype.readIntLE = function readIntLE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var val = this[offset];
    var mul = 1;
    var i = 0;
    while(++i < byteLength && (mul *= 0x100)){
        val += this[offset + i] * mul;
    }
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
Buffer.prototype.readIntBE = function readIntBE(offset, byteLength, noAssert) {
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) checkOffset(offset, byteLength, this.length);
    var i = byteLength;
    var mul = 1;
    var val = this[offset + --i];
    while(i > 0 && (mul *= 0x100)){
        val += this[offset + --i] * mul;
    }
    mul *= 0x80;
    if (val >= mul) val -= Math.pow(2, 8 * byteLength);
    return val;
};
Buffer.prototype.readInt8 = function readInt8(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 1, this.length);
    if (!(this[offset] & 0x80)) return this[offset];
    return (0xff - this[offset] + 1) * -1;
};
Buffer.prototype.readInt16LE = function readInt16LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset] | this[offset + 1] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt16BE = function readInt16BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 2, this.length);
    var val = this[offset + 1] | this[offset] << 8;
    return val & 0x8000 ? val | 0xFFFF0000 : val;
};
Buffer.prototype.readInt32LE = function readInt32LE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] | this[offset + 1] << 8 | this[offset + 2] << 16 | this[offset + 3] << 24;
};
Buffer.prototype.readInt32BE = function readInt32BE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return this[offset] << 24 | this[offset + 1] << 16 | this[offset + 2] << 8 | this[offset + 3];
};
Buffer.prototype.readFloatLE = function readFloatLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, true, 23, 4);
};
Buffer.prototype.readFloatBE = function readFloatBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 4, this.length);
    return ieee754.read(this, offset, false, 23, 4);
};
Buffer.prototype.readDoubleLE = function readDoubleLE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, true, 52, 8);
};
Buffer.prototype.readDoubleBE = function readDoubleBE(offset, noAssert) {
    offset = offset >>> 0;
    if (!noAssert) checkOffset(offset, 8, this.length);
    return ieee754.read(this, offset, false, 52, 8);
};
function checkInt(buf, value, offset, ext, max, min) {
    if (!Buffer.isBuffer(buf)) throw new TypeError('"buffer" argument must be a Buffer instance');
    if (value > max || value < min) throw new RangeError('"value" argument is out of bounds');
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
}
Buffer.prototype.writeUintLE = Buffer.prototype.writeUIntLE = function writeUIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var mul = 1;
    var i = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100)){
        this[offset + i] = value / mul & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeUintBE = Buffer.prototype.writeUIntBE = function writeUIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    byteLength = byteLength >>> 0;
    if (!noAssert) {
        var maxBytes = Math.pow(2, 8 * byteLength) - 1;
        checkInt(this, value, offset, byteLength, maxBytes, 0);
    }
    var i = byteLength - 1;
    var mul = 1;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100)){
        this[offset + i] = value / mul & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeUint8 = Buffer.prototype.writeUInt8 = function writeUInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0);
    this[offset] = value & 0xff;
    return offset + 1;
};
Buffer.prototype.writeUint16LE = Buffer.prototype.writeUInt16LE = function writeUInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeUint16BE = Buffer.prototype.writeUInt16BE = function writeUInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
Buffer.prototype.writeUint32LE = Buffer.prototype.writeUInt32LE = function writeUInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset + 3] = value >>> 24;
    this[offset + 2] = value >>> 16;
    this[offset + 1] = value >>> 8;
    this[offset] = value & 0xff;
    return offset + 4;
};
Buffer.prototype.writeUint32BE = Buffer.prototype.writeUInt32BE = function writeUInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0);
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
Buffer.prototype.writeIntLE = function writeIntLE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = 0;
    var mul = 1;
    var sub = 0;
    this[offset] = value & 0xFF;
    while(++i < byteLength && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {
            sub = 1;
        }
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeIntBE = function writeIntBE(value, offset, byteLength, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        var limit = Math.pow(2, 8 * byteLength - 1);
        checkInt(this, value, offset, byteLength, limit - 1, -limit);
    }
    var i = byteLength - 1;
    var mul = 1;
    var sub = 0;
    this[offset + i] = value & 0xFF;
    while(--i >= 0 && (mul *= 0x100)){
        if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {
            sub = 1;
        }
        this[offset + i] = (value / mul >> 0) - sub & 0xFF;
    }
    return offset + byteLength;
};
Buffer.prototype.writeInt8 = function writeInt8(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80);
    if (value < 0) value = 0xff + value + 1;
    this[offset] = value & 0xff;
    return offset + 1;
};
Buffer.prototype.writeInt16LE = function writeInt16LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    return offset + 2;
};
Buffer.prototype.writeInt16BE = function writeInt16BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000);
    this[offset] = value >>> 8;
    this[offset + 1] = value & 0xff;
    return offset + 2;
};
Buffer.prototype.writeInt32LE = function writeInt32LE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    this[offset] = value & 0xff;
    this[offset + 1] = value >>> 8;
    this[offset + 2] = value >>> 16;
    this[offset + 3] = value >>> 24;
    return offset + 4;
};
Buffer.prototype.writeInt32BE = function writeInt32BE(value, offset, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000);
    if (value < 0) value = 0xffffffff + value + 1;
    this[offset] = value >>> 24;
    this[offset + 1] = value >>> 16;
    this[offset + 2] = value >>> 8;
    this[offset + 3] = value & 0xff;
    return offset + 4;
};
function checkIEEE754(buf, value, offset, ext, max, min) {
    if (offset + ext > buf.length) throw new RangeError('Index out of range');
    if (offset < 0) throw new RangeError('Index out of range');
}
function writeFloat(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38);
    }
    ieee754.write(buf, value, offset, littleEndian, 23, 4);
    return offset + 4;
}
Buffer.prototype.writeFloatLE = function writeFloatLE(value, offset, noAssert) {
    return writeFloat(this, value, offset, true, noAssert);
};
Buffer.prototype.writeFloatBE = function writeFloatBE(value, offset, noAssert) {
    return writeFloat(this, value, offset, false, noAssert);
};
function writeDouble(buf, value, offset, littleEndian, noAssert) {
    value = +value;
    offset = offset >>> 0;
    if (!noAssert) {
        checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308);
    }
    ieee754.write(buf, value, offset, littleEndian, 52, 8);
    return offset + 8;
}
Buffer.prototype.writeDoubleLE = function writeDoubleLE(value, offset, noAssert) {
    return writeDouble(this, value, offset, true, noAssert);
};
Buffer.prototype.writeDoubleBE = function writeDoubleBE(value, offset, noAssert) {
    return writeDouble(this, value, offset, false, noAssert);
};
// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)
Buffer.prototype.copy = function copy(target, targetStart, start, end) {
    if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer');
    if (!start) start = 0;
    if (!end && end !== 0) end = this.length;
    if (targetStart >= target.length) targetStart = target.length;
    if (!targetStart) targetStart = 0;
    if (end > 0 && end < start) end = start;
    // Copy 0 bytes; we're done
    if (end === start) return 0;
    if (target.length === 0 || this.length === 0) return 0;
    // Fatal error conditions
    if (targetStart < 0) {
        throw new RangeError('targetStart out of bounds');
    }
    if (start < 0 || start >= this.length) throw new RangeError('Index out of range');
    if (end < 0) throw new RangeError('sourceEnd out of bounds');
    // Are we oob?
    if (end > this.length) end = this.length;
    if (target.length - targetStart < end - start) {
        end = target.length - targetStart + start;
    }
    var len = end - start;
    if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {
        // Use built-in when available, missing from IE11
        this.copyWithin(targetStart, start, end);
    } else {
        Uint8Array.prototype.set.call(target, this.subarray(start, end), targetStart);
    }
    return len;
};
// Usage:
//    buffer.fill(number[, offset[, end]])
//    buffer.fill(buffer[, offset[, end]])
//    buffer.fill(string[, offset[, end]][, encoding])
Buffer.prototype.fill = function fill(val, start, end, encoding) {
    // Handle string cases:
    if (typeof val === 'string') {
        if (typeof start === 'string') {
            encoding = start;
            start = 0;
            end = this.length;
        } else if (typeof end === 'string') {
            encoding = end;
            end = this.length;
        }
        if (encoding !== undefined && typeof encoding !== 'string') {
            throw new TypeError('encoding must be a string');
        }
        if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {
            throw new TypeError('Unknown encoding: ' + encoding);
        }
        if (val.length === 1) {
            var code = val.charCodeAt(0);
            if (encoding === 'utf8' && code < 128 || encoding === 'latin1') {
                // Fast path: If `val` fits into a single byte, use that numeric value.
                val = code;
            }
        }
    } else if (typeof val === 'number') {
        val = val & 255;
    } else if (typeof val === 'boolean') {
        val = Number(val);
    }
    // Invalid ranges are not set to a default, so can range check early.
    if (start < 0 || this.length < start || this.length < end) {
        throw new RangeError('Out of range index');
    }
    if (end <= start) {
        return this;
    }
    start = start >>> 0;
    end = end === undefined ? this.length : end >>> 0;
    if (!val) val = 0;
    var i;
    if (typeof val === 'number') {
        for(i = start; i < end; ++i){
            this[i] = val;
        }
    } else {
        var bytes = Buffer.isBuffer(val) ? val : Buffer.from(val, encoding);
        var len = bytes.length;
        if (len === 0) {
            throw new TypeError('The value "' + val + '" is invalid for argument "value"');
        }
        for(i = 0; i < end - start; ++i){
            this[i + start] = bytes[i % len];
        }
    }
    return this;
};
// HELPER FUNCTIONS
// ================
var INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g;
function base64clean(str) {
    // Node takes equal signs as end of the Base64 encoding
    str = str.split('=')[0];
    // Node strips out invalid characters like \n and \t from the string, base64-js does not
    str = str.trim().replace(INVALID_BASE64_RE, '');
    // Node converts strings with length < 2 to ''
    if (str.length < 2) return '';
    // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not
    while(str.length % 4 !== 0){
        str = str + '=';
    }
    return str;
}
function utf8ToBytes(string, units) {
    units = units || Infinity;
    var codePoint;
    var length = string.length;
    var leadSurrogate = null;
    var bytes = [];
    for(var i = 0; i < length; ++i){
        codePoint = string.charCodeAt(i);
        // is surrogate component
        if (codePoint > 0xD7FF && codePoint < 0xE000) {
            // last char was a lead
            if (!leadSurrogate) {
                // no lead yet
                if (codePoint > 0xDBFF) {
                    // unexpected trail
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                } else if (i + 1 === length) {
                    // unpaired lead
                    if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                    continue;
                }
                // valid lead
                leadSurrogate = codePoint;
                continue;
            }
            // 2 leads in a row
            if (codePoint < 0xDC00) {
                if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
                leadSurrogate = codePoint;
                continue;
            }
            // valid surrogate pair
            codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000;
        } else if (leadSurrogate) {
            // valid bmp char, but last char was a lead
            if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD);
        }
        leadSurrogate = null;
        // encode utf8
        if (codePoint < 0x80) {
            if ((units -= 1) < 0) break;
            bytes.push(codePoint);
        } else if (codePoint < 0x800) {
            if ((units -= 2) < 0) break;
            bytes.push(codePoint >> 0x6 | 0xC0, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x10000) {
            if ((units -= 3) < 0) break;
            bytes.push(codePoint >> 0xC | 0xE0, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else if (codePoint < 0x110000) {
            if ((units -= 4) < 0) break;
            bytes.push(codePoint >> 0x12 | 0xF0, codePoint >> 0xC & 0x3F | 0x80, codePoint >> 0x6 & 0x3F | 0x80, codePoint & 0x3F | 0x80);
        } else {
            throw new Error('Invalid code point');
        }
    }
    return bytes;
}
function asciiToBytes(str) {
    var byteArray = [];
    for(var i = 0; i < str.length; ++i){
        // Node's code seems to be doing this and not & 0x7F..
        byteArray.push(str.charCodeAt(i) & 0xFF);
    }
    return byteArray;
}
function utf16leToBytes(str, units) {
    var c, hi, lo;
    var byteArray = [];
    for(var i = 0; i < str.length; ++i){
        if ((units -= 2) < 0) break;
        c = str.charCodeAt(i);
        hi = c >> 8;
        lo = c % 256;
        byteArray.push(lo);
        byteArray.push(hi);
    }
    return byteArray;
}
function base64ToBytes(str) {
    return base64.toByteArray(base64clean(str));
}
function blitBuffer(src, dst, offset, length) {
    for(var i = 0; i < length; ++i){
        if (i + offset >= dst.length || i >= src.length) break;
        dst[i + offset] = src[i];
    }
    return i;
}
// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass
// the `instanceof` check but they should be treated as of that type.
// See: https://github.com/feross/buffer/issues/166
function isInstance(obj, type) {
    return obj instanceof type || obj != null && obj.constructor != null && obj.constructor.name != null && obj.constructor.name === type.name;
}
function numberIsNaN(obj) {
    // For IE11 support
    return obj !== obj // eslint-disable-line no-self-compare
    ;
}
// Create lookup table for `toString('hex')`
// See: https://github.com/feross/buffer/issues/219
var hexSliceLookupTable = function() {
    var alphabet = '0123456789abcdef';
    var table = new Array(256);
    for(var i = 0; i < 16; ++i){
        var i16 = i * 16;
        for(var j = 0; j < 16; ++j){
            table[i16 + j] = alphabet[i] + alphabet[j];
        }
    }
    return table;
}();
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/src/type.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (c) Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ /**
 * note: Checks are based on range checks (>, <, etc), so when adding
 * new types a check is required for all code using `TypeNumberBrand`.
 */ __turbopack_esm__({
    "ReflectionOp": (()=>ReflectionOp),
    "TypeNumberBrand": (()=>TypeNumberBrand)
});
var TypeNumberBrand;
(function(TypeNumberBrand) {
    TypeNumberBrand[TypeNumberBrand["integer"] = 0] = "integer";
    TypeNumberBrand[TypeNumberBrand["int8"] = 1] = "int8";
    TypeNumberBrand[TypeNumberBrand["int16"] = 2] = "int16";
    TypeNumberBrand[TypeNumberBrand["int32"] = 3] = "int32";
    TypeNumberBrand[TypeNumberBrand["uint8"] = 4] = "uint8";
    TypeNumberBrand[TypeNumberBrand["uint16"] = 5] = "uint16";
    TypeNumberBrand[TypeNumberBrand["uint32"] = 6] = "uint32";
    TypeNumberBrand[TypeNumberBrand["float"] = 7] = "float";
    TypeNumberBrand[TypeNumberBrand["float32"] = 8] = "float32";
    TypeNumberBrand[TypeNumberBrand["float64"] = 9] = "float64";
})(TypeNumberBrand || (TypeNumberBrand = {}));
var ReflectionOp;
(function(ReflectionOp) {
    ReflectionOp[ReflectionOp["never"] = 0] = "never";
    ReflectionOp[ReflectionOp["any"] = 1] = "any";
    ReflectionOp[ReflectionOp["unknown"] = 2] = "unknown";
    ReflectionOp[ReflectionOp["void"] = 3] = "void";
    ReflectionOp[ReflectionOp["object"] = 4] = "object";
    ReflectionOp[ReflectionOp["string"] = 5] = "string";
    ReflectionOp[ReflectionOp["number"] = 6] = "number";
    ReflectionOp[ReflectionOp["numberBrand"] = 7] = "numberBrand";
    ReflectionOp[ReflectionOp["boolean"] = 8] = "boolean";
    ReflectionOp[ReflectionOp["bigint"] = 9] = "bigint";
    ReflectionOp[ReflectionOp["symbol"] = 10] = "symbol";
    ReflectionOp[ReflectionOp["null"] = 11] = "null";
    ReflectionOp[ReflectionOp["undefined"] = 12] = "undefined";
    /**
     * The literal type of string, number, or boolean.
     *
     * This OP has 1 parameter. The next byte is the absolute address of the literal on the stack, which is the actual literal value.
     *
     * Pushes a function type.
     */ ReflectionOp[ReflectionOp["literal"] = 13] = "literal";
    /**
     * This OP pops all types on the current stack frame.
     *
     * This OP has 1 parameter. The next byte is the absolute address of a string|number|symbol entry on the stack.
     *
     * Pushes a function type.
     */ ReflectionOp[ReflectionOp["function"] = 14] = "function";
    /**
     * This OP pops all types on the current stack frame.
     *
     * Pushes a method type.
     */ ReflectionOp[ReflectionOp["method"] = 15] = "method";
    ReflectionOp[ReflectionOp["methodSignature"] = 16] = "methodSignature";
    ReflectionOp[ReflectionOp["parameter"] = 17] = "parameter";
    /**
     * This OP pops the latest type entry on the stack.
     *
     * Pushes a property type.
     */ ReflectionOp[ReflectionOp["property"] = 18] = "property";
    ReflectionOp[ReflectionOp["propertySignature"] = 19] = "propertySignature";
    /**
     * This OP pops all types on the current stack frame. Those types should be method|property.
     *
     * Pushes a TypeClass onto the stack.
     */ ReflectionOp[ReflectionOp["class"] = 20] = "class";
    /**
     * If a class extends another class with generics, this OP represents the generic type arguments of the super class.
     *
     * e.g. `class A extends B<string, boolean>`, string and boolean are on the stack and classExtends pops() them, and then assigns to A.extendsTypeArguments = [string, boolean].
     *
     * This is only emitted when the class that is currently being described actually extends another class and uses generics.
     *
     * This OP has 1 argument and pops x types from the stack. X is the first argument.
     * Expects a TypeClass on the stack.
     */ ReflectionOp[ReflectionOp["classExtends"] = 21] = "classExtends";
    /**
     * This OP has 1 parameter, the stack entry to the actual class symbol.
     */ ReflectionOp[ReflectionOp["classReference"] = 22] = "classReference";
    /**
     * Marks the last entry in the stack as optional. Used for method|property. Equal to the QuestionMark operator in a property assignment.
     */ ReflectionOp[ReflectionOp["optional"] = 23] = "optional";
    ReflectionOp[ReflectionOp["readonly"] = 24] = "readonly";
    //modifiers for property|method
    ReflectionOp[ReflectionOp["public"] = 25] = "public";
    ReflectionOp[ReflectionOp["private"] = 26] = "private";
    ReflectionOp[ReflectionOp["protected"] = 27] = "protected";
    ReflectionOp[ReflectionOp["abstract"] = 28] = "abstract";
    ReflectionOp[ReflectionOp["defaultValue"] = 29] = "defaultValue";
    ReflectionOp[ReflectionOp["description"] = 30] = "description";
    ReflectionOp[ReflectionOp["rest"] = 31] = "rest";
    ReflectionOp[ReflectionOp["regexp"] = 32] = "regexp";
    ReflectionOp[ReflectionOp["enum"] = 33] = "enum";
    ReflectionOp[ReflectionOp["enumMember"] = 34] = "enumMember";
    ReflectionOp[ReflectionOp["set"] = 35] = "set";
    ReflectionOp[ReflectionOp["map"] = 36] = "map";
    /**
     * Pops the latest stack entry and uses it as T for an array type.
     *
     * Pushes an array type.
     */ ReflectionOp[ReflectionOp["array"] = 37] = "array";
    ReflectionOp[ReflectionOp["tuple"] = 38] = "tuple";
    ReflectionOp[ReflectionOp["tupleMember"] = 39] = "tupleMember";
    ReflectionOp[ReflectionOp["namedTupleMember"] = 40] = "namedTupleMember";
    ReflectionOp[ReflectionOp["union"] = 41] = "union";
    ReflectionOp[ReflectionOp["intersection"] = 42] = "intersection";
    ReflectionOp[ReflectionOp["indexSignature"] = 43] = "indexSignature";
    ReflectionOp[ReflectionOp["objectLiteral"] = 44] = "objectLiteral";
    ReflectionOp[ReflectionOp["mappedType"] = 45] = "mappedType";
    ReflectionOp[ReflectionOp["in"] = 46] = "in";
    ReflectionOp[ReflectionOp["frame"] = 47] = "frame";
    ReflectionOp[ReflectionOp["moveFrame"] = 48] = "moveFrame";
    ReflectionOp[ReflectionOp["return"] = 49] = "return";
    ReflectionOp[ReflectionOp["templateLiteral"] = 50] = "templateLiteral";
    //special instructions that exist to emit less output
    ReflectionOp[ReflectionOp["date"] = 51] = "date";
    //those typed array OPs are here only to reduce runtime code overhead when used in types.
    ReflectionOp[ReflectionOp["int8Array"] = 52] = "int8Array";
    ReflectionOp[ReflectionOp["uint8ClampedArray"] = 53] = "uint8ClampedArray";
    ReflectionOp[ReflectionOp["uint8Array"] = 54] = "uint8Array";
    ReflectionOp[ReflectionOp["int16Array"] = 55] = "int16Array";
    ReflectionOp[ReflectionOp["uint16Array"] = 56] = "uint16Array";
    ReflectionOp[ReflectionOp["int32Array"] = 57] = "int32Array";
    ReflectionOp[ReflectionOp["uint32Array"] = 58] = "uint32Array";
    ReflectionOp[ReflectionOp["float32Array"] = 59] = "float32Array";
    ReflectionOp[ReflectionOp["float64Array"] = 60] = "float64Array";
    ReflectionOp[ReflectionOp["bigInt64Array"] = 61] = "bigInt64Array";
    ReflectionOp[ReflectionOp["arrayBuffer"] = 62] = "arrayBuffer";
    ReflectionOp[ReflectionOp["promise"] = 63] = "promise";
    // pointer, //parameter is a number referencing an entry in the stack, relative to the very beginning (0). pushes that entry onto the stack.
    ReflectionOp[ReflectionOp["arg"] = 64] = "arg";
    ReflectionOp[ReflectionOp["typeParameter"] = 65] = "typeParameter";
    ReflectionOp[ReflectionOp["typeParameterDefault"] = 66] = "typeParameterDefault";
    ReflectionOp[ReflectionOp["var"] = 67] = "var";
    ReflectionOp[ReflectionOp["loads"] = 68] = "loads";
    ReflectionOp[ReflectionOp["indexAccess"] = 69] = "indexAccess";
    ReflectionOp[ReflectionOp["keyof"] = 70] = "keyof";
    ReflectionOp[ReflectionOp["infer"] = 71] = "infer";
    ReflectionOp[ReflectionOp["typeof"] = 72] = "typeof";
    ReflectionOp[ReflectionOp["condition"] = 73] = "condition";
    ReflectionOp[ReflectionOp["jumpCondition"] = 74] = "jumpCondition";
    ReflectionOp[ReflectionOp["jump"] = 75] = "jump";
    ReflectionOp[ReflectionOp["call"] = 76] = "call";
    ReflectionOp[ReflectionOp["inline"] = 77] = "inline";
    ReflectionOp[ReflectionOp["inlineCall"] = 78] = "inlineCall";
    ReflectionOp[ReflectionOp["distribute"] = 79] = "distribute";
    ReflectionOp[ReflectionOp["extends"] = 80] = "extends";
    ReflectionOp[ReflectionOp["widen"] = 81] = "widen";
    ReflectionOp[ReflectionOp["static"] = 82] = "static";
    ReflectionOp[ReflectionOp["mappedType2"] = 83] = "mappedType2";
    ReflectionOp[ReflectionOp["functionReference"] = 84] = "functionReference";
    ReflectionOp[ReflectionOp["callSignature"] = 85] = "callSignature";
    /**
     * Assign for Enum, Interface, Class, and TypeAlias declaration at the very end
     * of the program the typeName. This is so that we have type names available even
     * if the JS code is minified.
     *
     * his operator also assigns originTypes to the type, as it acts as the finalization
     * step of a type.
     */ ReflectionOp[ReflectionOp["typeName"] = 86] = "typeName";
    /**
     * If a class implement an interface or type,
     *
     * e.g. `class A implements B`, then B is on the stack and implements pops() it, and then assigns to A.implements = [B].
     *
     * This is only emitted when the class that is currently being described actually implements something.
     *
     * This OP has 1 argument and pops x types from the stack. X is the first argument.
     * Expects a TypeClass on the stack.
     */ ReflectionOp[ReflectionOp["implements"] = 87] = "implements";
    ReflectionOp[ReflectionOp["nominal"] = 88] = "nominal";
})(ReflectionOp || (ReflectionOp = {})); //# sourceMappingURL=type.js.map
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ __turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2d$spec$2f$dist$2f$esm$2f$src$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type-spec/dist/esm/src/type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2d$spec$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type-spec/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/uuid/dist/esm-browser/rng.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
// Unique ID creation requires a high quality random # generator. In the browser we therefore
// require the crypto API and do not support built-in fallback to lower quality random number
// generators (like Math.random()).
__turbopack_esm__({
    "default": (()=>rng)
});
var getRandomValues;
var rnds8 = new Uint8Array(16);
function rng() {
    // lazy load so that environments that need to polyfill have a chance to do so
    if (!getRandomValues) {
        // getRandomValues needs to be invoked in a context where "this" is a Crypto implementation. Also,
        // find the complete implementation of crypto (msCrypto) on IE11.
        getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);
        if (!getRandomValues) {
            throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');
        }
    }
    return getRandomValues(rnds8);
}
}}),
"[project]/node_modules/uuid/dist/esm-browser/regex.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
const __TURBOPACK__default__export__ = /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;
}}),
"[project]/node_modules/uuid/dist/esm-browser/validate.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/regex.js [app-client] (ecmascript)");
;
function validate(uuid) {
    return typeof uuid === 'string' && __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$regex$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].test(uuid);
}
const __TURBOPACK__default__export__ = validate;
}}),
"[project]/node_modules/uuid/dist/esm-browser/stringify.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$validate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/validate.js [app-client] (ecmascript)");
;
/**
 * Convert array of 16 byte values to UUID string format of the form:
 * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX
 */ var byteToHex = [];
for(var i = 0; i < 256; ++i){
    byteToHex.push((i + 0x100).toString(16).substr(1));
}
function stringify(arr) {
    var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;
    // Note: Be careful editing this code!  It's been tuned for performance
    // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434
    var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one
    // of the following:
    // - One or more input array values don't map to a hex octet (leading to
    // "undefined" in the uuid)
    // - Invalid input values for the RFC `version` or `variant` fields
    if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$validate$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(uuid)) {
        throw TypeError('Stringified UUID is invalid');
    }
    return uuid;
}
const __TURBOPACK__default__export__ = stringify;
}}),
"[project]/node_modules/uuid/dist/esm-browser/v4.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "default": (()=>__TURBOPACK__default__export__)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$rng$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/rng.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/stringify.js [app-client] (ecmascript)");
;
;
function v4(options, buf, offset) {
    options = options || {};
    var rnds = options.random || (options.rng || __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$rng$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`
    rnds[6] = rnds[6] & 0x0f | 0x40;
    rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided
    if (buf) {
        offset = offset || 0;
        for(var i = 0; i < 16; ++i){
            buf[offset + i] = rnds[i];
        }
        return buf;
    }
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(rnds);
}
const __TURBOPACK__default__export__ = v4;
}}),
"[project]/node_modules/uuid/dist/esm-browser/v4.js [app-client] (ecmascript) <export default as v4>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "v4": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$v4$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$v4$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/v4.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/uuid/dist/esm-browser/stringify.js [app-client] (ecmascript) <export default as stringify>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({
    "stringify": (()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$uuid$2f$dist$2f$esm$2d$browser$2f$stringify$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/uuid/dist/esm-browser/stringify.js [app-client] (ecmascript)");
}}),
"[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "BaseEvent": (()=>BaseEvent),
    "DataEvent": (()=>DataEvent),
    "DataEventToken": (()=>DataEventToken),
    "EventDispatcher": (()=>EventDispatcher),
    "EventError": (()=>EventError),
    "EventToken": (()=>EventToken),
    "ForkedEventDispatcher": (()=>ForkedEventDispatcher),
    "__ΩEventDispatcherInterface": (()=>__ΩEventDispatcherInterface),
    "__ΩEventDispatcherUnsubscribe": (()=>__ΩEventDispatcherUnsubscribe),
    "__ΩEventListener": (()=>__ΩEventListener),
    "__ΩEventListenerCallback": (()=>__ΩEventListenerCallback),
    "__ΩEventListenerContainerEntry": (()=>__ΩEventListenerContainerEntry),
    "__ΩEventListenerContainerEntryCallback": (()=>__ΩEventListenerContainerEntryCallback),
    "__ΩEventListenerContainerEntryService": (()=>__ΩEventListenerContainerEntryService),
    "__ΩEventListenerRegistered": (()=>__ΩEventListenerRegistered),
    "__ΩEventOfEventToken": (()=>__ΩEventOfEventToken),
    "eventClass": (()=>eventClass),
    "eventDispatcher": (()=>eventDispatcher),
    "isEventListenerContainerEntryCallback": (()=>isEventListenerContainerEntryCallback),
    "isEventListenerContainerEntryService": (()=>isEventListenerContainerEntryService)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/decorator-builder.js [app-client] (ecmascript)");
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
const __ΩEventListenerCallback = [
    'T',
    'event',
    'args',
    '',
    'EventListenerCallback',
    'b!Pe"!2""@2#P""`J/$w%y'
];
;
class EventError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"] {
}
EventError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"],
    'EventError',
    'P7!5w"'
];
const __ΩEventListener = [
    'T',
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventListenerCallback,
    'callback',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'order',
    'EventListener',
    'b!PP"7"4#e"!o$"4%P7&4\'8\'4(Mw)y'
];
;
const __ΩEventOfEventToken = [
    'T',
    ()=>EventToken,
    ()=>DataEvent,
    ()=>BaseEvent,
    'EventOfEventToken',
    'l^Pe#!e%!JRe$!RPde#!Ph"!7#qk#,QRPde#!p0RP7$RPde#!Ph"!7"qkAIQRb!Pde"!pMw%y'
];
;
const __ΩSimpleDataEvent = [
    'T',
    ()=>BaseEvent,
    'data',
    'SimpleDataEvent',
    'b!PP7"e"!4#Mw$y'
];
class EventToken {
    constructor(id, event){
        this.id = id;
    }
    listen(callback, order = 0, module) {
        return {
            eventToken: this,
            callback,
            order: order,
            module
        };
    }
}
EventToken.__type = [
    ()=>BaseEvent,
    'T',
    'event',
    'id',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'constructor',
    'args',
    '',
    'callback',
    'order',
    ()=>0,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__ΩEventListener,
    'listen',
    'EventToken',
    'P7!c"e!!3#9P&2$:9e"!o%"2#8"0&PPe#!2#"@2\'$/(2)\'2*>+P7,2-8e"!o."0/5w0'
];
class DataEventToken extends EventToken {
}
DataEventToken.__type = [
    'T',
    ()=>__ΩSimpleDataEvent,
    ()=>EventToken,
    ()=>__ΩSimpleDataEvent,
    'DataEventToken',
    'b!Pe"!o""7#5e!!o$"6"w%'
];
class BaseEvent {
    constructor(){
        this.propagationStopped = false;
    }
    stopPropagation() {
        this.propagationStopped = true;
    }
    isPropagationStopped() {
        return this.propagationStopped;
    }
}
BaseEvent.__type = [
    'stopPropagation',
    'isPropagationStopped',
    'BaseEvent',
    'P"0!P"0"5w#'
];
class DataEvent extends BaseEvent {
    constructor(data){
        super();
        this.data = data;
    }
}
DataEvent.__type = [
    'T',
    ()=>BaseEvent,
    'data',
    'constructor',
    'DataEvent',
    'b!P7"Pe"!2#:"0$5w%'
];
class EventStore {
    constructor(){
        this.order = 0;
    }
}
EventStore.__type = [
    ()=>EventToken,
    'token',
    'order',
    function() {
        return 0;
    },
    'EventStore',
    'P"7!3"8\'3#>$5w%'
];
class EventClassStore {
    constructor(){
        this.listeners = [];
    }
}
EventClassStore.__type = [
    ()=>EventToken,
    'eventToken',
    'methodName',
    'order',
    'listeners',
    function() {
        return [];
    },
    'EventClassStore',
    'PP"7!4"&4#\'4$MF3%>&5w\''
];
class EventClassApi {
    constructor(){
        this.t = new EventClassStore;
    }
    addListener(eventToken, methodName, order) {
        this.t.listeners.push({
            eventToken,
            methodName,
            order: order
        });
    }
}
EventClassApi.__type = [
    ()=>EventToken,
    'eventToken',
    'methodName',
    'order',
    'addListener',
    'EventClassApi',
    'PP"7!2"&2#\'2$"0%5w&'
];
const eventClass = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createClassDecoratorContext"])(EventClassApi);
class EventDispatcherApi {
    constructor(){
        this.t = new EventStore;
    }
    onDecorator(target, property) {
        if (!this.t.token) throw new Error('@eventDispatcher.listen(eventToken) is the correct syntax.');
        if (!property) throw new Error('@eventDispatcher.listen(eventToken) works only on class properties.');
        eventClass.addListener(this.t.token, property, this.t.order)(target);
    }
    /**
     * Register a new event listener for given token.
     *
     * order: The lower the order, the sooner the listener is called.
     */ listen(eventToken, order = 0) {
        if (!eventToken) new Error('@eventDispatcher.listen() No event token given');
        this.t.token = eventToken;
        this.t.order = order;
    }
}
EventDispatcherApi.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'target',
    'property',
    'onDecorator',
    ()=>EventToken,
    'eventToken',
    'order',
    ()=>0,
    'listen',
    'EventDispatcherApi',
    'Pn!2"&2#8"0$PP"7%2&\'2\'>("0)5w*'
];
const eventDispatcher = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$decorator$2d$builder$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createPropertyDecoratorContext"])(EventDispatcherApi);
const __ΩEventListenerContainerEntryCallback = [
    'order',
    ()=>__ΩEventListenerCallback,
    'fn',
    ()=>Function,
    'builtFn',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'EventListenerContainerEntryCallback',
    'P\'4!"o""4#Pu$4%8P7&4\'8Mw(y'
];
;
const __ΩEventListenerContainerEntryService = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    'order',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'classType',
    'methodName',
    'EventListenerContainerEntryService',
    'PP7!4"\'4#n$4%&4&Mw\'y'
];
;
const __ΩEventListenerContainerEntry = [
    ()=>__ΩEventListenerContainerEntryCallback,
    ()=>__ΩEventListenerContainerEntryService,
    'EventListenerContainerEntry',
    'Pn!n"Jw#y'
];
;
function isEventListenerContainerEntryCallback(obj) {
    return obj && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(obj.fn);
}
isEventListenerContainerEntryCallback.__type = [
    'obj',
    'isEventListenerContainerEntryCallback',
    'P"2!!/"'
];
function isEventListenerContainerEntryService(obj) {
    return obj && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(obj.classType);
}
isEventListenerContainerEntryService.__type = [
    'obj',
    'isEventListenerContainerEntryService',
    'P"2!!/"'
];
function compareListenerEntry(a, b) {
    if (isEventListenerContainerEntryCallback(a)) {
        if (!isEventListenerContainerEntryCallback(b)) return false;
        return a.fn == b.fn;
    } else if (isEventListenerContainerEntryService(a)) {
        if (!isEventListenerContainerEntryService(b)) return false;
        return a.module == b.module && a.classType == b.classType && a.methodName == b.methodName;
    }
    return false;
}
compareListenerEntry.__type = [
    ()=>__ΩEventListenerContainerEntry,
    'a',
    ()=>__ΩEventListenerContainerEntry,
    'b',
    'compareListenerEntry',
    'Pn!2"n#2$)/%'
];
const __ΩEventDispatcherFn = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'scopedContext',
    ()=>BaseEvent,
    'event',
    '',
    'EventDispatcherFn',
    'PPP7!2"P7#2$$`v%Mw&y'
];
const __ΩEventDispatcherUnsubscribe = [
    '',
    'EventDispatcherUnsubscribe',
    'P$/!w"y'
];
;
const __ΩEventDispatcherInterface = [
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    'hasListeners',
    ()=>__ΩEventOfEventToken,
    'event',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'dispatch',
    0,
    'fork',
    'EventDispatcherInterface',
    'PPP"7!2"n#2$n%1&P"2"".(fo\'"2)\'2*8n+1,PP"7-2")1.P"2""o/"208P71228$`13Pn415Mw6y'
];
;
function resolveEvent(eventToken, event) {
    if (!event) return new BaseEvent();
    return eventToken instanceof DataEventToken ? event instanceof DataEvent ? event : new DataEvent(event) : event;
}
resolveEvent.__type = [
    ()=>EventToken,
    'eventToken',
    ()=>__ΩEventOfEventToken,
    'event',
    'resolveEvent',
    'PP"7!2""o#"2$8"/%'
];
const __ΩEventListenerRegistered = [
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>EventToken,
    'eventToken',
    'EventListenerRegistered',
    'Pn!4"P"7#4$Mw%y'
];
;
class EventDispatcher {
    constructor(injector = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"].forProviders([])){
        this.injector = injector;
        this.listenerMap = (Map.Ω = [
            [
                ()=>EventToken,
                'P"7!'
            ],
            [
                ()=>__ΩEventListenerContainerEntry,
                'n!F'
            ]
        ], new Map());
        this.instances = [];
        this.registeredClassTypes = (Set.Ω = [
            [
                ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
                'n!'
            ]
        ], new Set());
        this.symbol = Symbol('eventDispatcher');
    }
    registerListener(classType, module) {
        if (this.registeredClassTypes.has(classType)) return [];
        this.registeredClassTypes.add(classType);
        const config = eventClass._fetch(classType);
        if (!config) return [];
        const result = [];
        for (const entry of config.listeners){
            const listener = {
                module,
                classType: classType,
                methodName: entry.methodName,
                order: entry.order
            };
            this.add(entry.eventToken, listener);
            result.push({
                eventToken: entry.eventToken,
                listener
            });
        }
        return result;
    }
    listen(eventToken, callback, order = 0) {
        return this.add(eventToken, {
            fn: callback,
            order: order
        });
    }
    add(eventToken, listener) {
        if (eventToken[this.symbol]) throw new EventError(`EventDispatcher already built for token ${eventToken.id}. Use eventDispatcher.fork() for late event binding.`);
        const listeners = this.getListeners(eventToken);
        listeners.push(listener);
        return ()=>{
            if (eventToken[this.symbol]) throw new EventError(`EventDispatcher already built for token ${eventToken.id}. Use eventDispatcher.fork() for late event binding.`);
            const index = listeners.findIndex(__assignType((v)=>compareListenerEntry(v, listener), [
                'v',
                '',
                'P"2!"/"'
            ]));
            if (index !== -1) listeners.splice(index, 1);
        };
    }
    getTokens() {
        return [
            ...this.listenerMap.keys()
        ];
    }
    hasListeners(eventToken) {
        return this.listenerMap.has(eventToken);
    }
    getListeners(eventToken) {
        let listeners = this.listenerMap.get(eventToken);
        if (!listeners) {
            listeners = [];
            this.listenerMap.set(eventToken, listeners);
        }
        return listeners;
    }
    buildFor(eventToken) {
        const compiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompilerContext"]();
        const lines = [];
        const listeners = this.listenerMap.get(eventToken) || [];
        if (!listeners.length) return;
        listeners.sort(__assignType((a, b)=>{
            if (a.order > b.order) return +1;
            if (a.order < b.order) return -1;
            return 0;
        }, [
            'a',
            'b',
            '',
            'P"2!"2""/#'
        ]));
        for (const listener of listeners){
            if (isEventListenerContainerEntryCallback(listener)) {
                const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                try {
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    const fnVar = compiler.reserveVariable('fn', fn);
                    lines.push(`
                        await ${fnVar}(scopedContext.scope, event);
                        if (event.isPropagationStopped()) return;
                    `);
                } catch (error) {
                    throw new Error(`Could not build listener ${listener.fn.name || 'anonymous function'} of event token ${eventToken.id}: ${error.message}`);
                }
            } else if (isEventListenerContainerEntryService(listener)) {
                const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                const classTypeVar = compiler.reserveVariable('classType', listener.classType);
                const moduleVar = compiler.reserveVariable('module', listener.module);
                const method = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionClass"].from(listener.classType).getMethod(listener.methodName);
                let call = `scopedContext.get(${classTypeVar}, ${moduleVar}).${listener.methodName}(event)`;
                if (method.getParameters().length > 1) {
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedFunction"])(__assignType((event, classInstance, ...args)=>{
                        return classInstance[listener.methodName](event, ...args);
                    }, [
                        'event',
                        'classInstance',
                        'args',
                        '',
                        'P"2!"2""@2#"/$'
                    ]), injector, 2, method.type, 1);
                    call = `${compiler.reserveVariable('fn', fn)}(scopedContext.scope, event, scopedContext.get(${classTypeVar}, ${moduleVar}))`;
                }
                lines.push(`
                    await ${call};
                    if (event.isPropagationStopped()) return;
                `);
            }
        }
        return compiler.buildAsync(lines.join('\n'), 'scopedContext', 'event');
    }
    async dispatch(eventToken, event, injector) {
        let build = eventToken[this.symbol];
        if (!build) {
            build = eventToken[this.symbol] = {
                fn: this.buildFor(eventToken)
            };
        }
        //no fn means for this token has no listeners
        if (!build.fn) return;
        return build.fn(injector || this.injector, resolveEvent(eventToken, event));
    }
    /**
     * A forked EventDispatcher does not use JIT compilation and thus is slightly slower in executing listeners,
     * but cheap in creating event dispatchers.
     */ fork() {
        return new ForkedEventDispatcher(this, this.injector);
    }
}
EventDispatcher.__type = [
    'instances',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"].forProviders([]),
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'classType',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__ΩEventListenerRegistered,
    'registerListener',
    'eventToken',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>0,
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>EventToken,
    'getTokens',
    ()=>EventToken,
    'hasListeners',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'getListeners',
    ()=>EventToken,
    ()=>__ΩEventDispatcherFn,
    'buildFor',
    ()=>__ΩEventOfEventToken,
    'event',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'dispatch',
    ()=>__ΩEventDispatcherInterface,
    'fork',
    ()=>__ΩEventDispatcherInterface,
    'EventDispatcher',
    '"F3!<>"PP7#2$:>%"0&Pn\'2(P7)2*n+F0,P"2-"./fo."20\'21>2n304PP"752-n627n809PP"7:F0;PP"7<2-)0=PP"7>2-n?F0@PP"7A2-PnB-J0C<P"2-"oD"2E8P7F2$8$`0GPnH0I5nJx"wK'
];
class ForkedEventDispatcher {
    constructor(parent, injector){
        this.parent = parent;
        this.injector = injector;
        this.listenerMap = (Map.Ω = [
            [
                ()=>EventToken,
                'P"7!'
            ],
            [
                ()=>__ΩEventListenerContainerEntry,
                'entries',
                'sorted',
                'Pn!F4")4#M'
            ]
        ], new Map());
    }
    async dispatch(eventToken, eventIn, injector) {
        await this.parent.dispatch(eventToken, eventIn, injector);
        const event = resolveEvent(eventToken, eventIn);
        const listeners = this.listenerMap.get(eventToken);
        if (!listeners) return;
        if (!listeners.sorted) {
            listeners.entries.sort(__assignType((a, b)=>{
                if (a.order > b.order) return +1;
                if (a.order < b.order) return -1;
                return 0;
            }, [
                'a',
                'b',
                '',
                'P"2!"2""/#'
            ]));
            listeners.sorted = true;
        }
        const scopedContext = injector || this.injector;
        for (const listener of listeners.entries){
            if (isEventListenerContainerEntryCallback(listener)) {
                if (!listener.builtFn) {
                    try {
                        const injector = listener.module ? this.injector.getInjector(listener.module) : this.injector.getRootInjector();
                        listener.builtFn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    } catch (error) {
                        throw new Error(`Could not build listener ${listener.fn.name || 'anonymous function'} of event token ${eventToken.id}: ${error.message}`);
                    }
                }
                await listener.builtFn(scopedContext.scope, event);
            } else if (isEventListenerContainerEntryService(listener)) {
                await scopedContext.get(listener.classType, listener.module)[listener.methodName](event);
            }
        }
    }
    getListeners(eventToken) {
        let listeners = this.listenerMap.get(eventToken);
        if (!listeners) {
            listeners = {
                entries: [],
                sorted: true
            };
            this.listenerMap.set(eventToken, listeners);
        }
        return listeners;
    }
    add(eventToken, listener) {
        const listeners = this.getListeners(eventToken);
        listeners.sorted = false;
        listeners.entries.push(listener);
        return ()=>{
            const index = listeners.entries.findIndex(__assignType((v)=>compareListenerEntry(v, listener), [
                'v',
                '',
                'P"2!"/"'
            ]));
            if (index !== -1) listeners.entries.splice(index, 1);
        };
    }
    listen(eventToken, callback, order = 0) {
        return this.add(eventToken, {
            fn: callback,
            order: order
        });
    }
    hasListeners(eventToken) {
        if (this.listenerMap.has(eventToken)) return true;
        return this.parent.hasListeners(eventToken);
    }
    fork() {
        return new ForkedEventDispatcher(this, this.injector);
    }
}
ForkedEventDispatcher.__type = [
    ()=>__ΩEventDispatcherInterface,
    'parent',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    'constructor',
    'eventToken',
    ()=>__ΩEventOfEventToken,
    'eventIn',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'dispatch',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'entries',
    'sorted',
    'getListeners',
    ()=>EventToken,
    ()=>__ΩEventListenerContainerEntry,
    'listener',
    ()=>__ΩEventDispatcherUnsubscribe,
    'add',
    ()=>__ΩEventListenerCallback,
    "event",
    'callback',
    'order',
    ()=>0,
    ()=>__ΩEventDispatcherUnsubscribe,
    'listen',
    ()=>EventToken,
    'hasListeners',
    ()=>__ΩEventDispatcherInterface,
    'fork',
    ()=>__ΩEventDispatcherInterface,
    'ForkedEventDispatcher',
    'Pn!2"<P7#2$<"0%P"2&"o\'"2(8P7)2$8$`0*PP"7+2&Pn,F4-)4.M0/PP"702&n122n304P"2&".6fo5"27\'28>9n:0;PP"7<2&)0=Pn>0?5n@x"wA'
]; //# sourceMappingURL=event.js.map
}}),
"[project]/node_modules/@deepkit/event/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/event/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Frame": (()=>Frame),
    "FrameCategory": (()=>FrameCategory),
    "FrameType": (()=>FrameType),
    "__ΩAnalyticData": (()=>__ΩAnalyticData),
    "__ΩFrameCategory": (()=>__ΩFrameCategory),
    "__ΩFrameCategoryData": (()=>__ΩFrameCategoryData),
    "__ΩFrameData": (()=>__ΩFrameData),
    "__ΩFrameEnd": (()=>__ΩFrameEnd),
    "__ΩFrameStart": (()=>__ΩFrameStart),
    "__ΩFrameType": (()=>__ΩFrameType),
    "__ΩTypeOfCategory": (()=>__ΩTypeOfCategory),
    "decodeCompoundKey": (()=>decodeCompoundKey),
    "encodeCompoundKey": (()=>encodeCompoundKey),
    "getTypeOfCategory": (()=>getTypeOfCategory),
    "incrementCompoundKey": (()=>incrementCompoundKey)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
const __ΩAnalyticData = [
    'timestamp',
    'cpu',
    'memory',
    'loopBlocked',
    'AnalyticData',
    'P\'4!\'4"\'4#\'4$Mw%y'
];
;
const __ΩFrameCategory = [
    'none',
    'http',
    'httpController',
    'rpc',
    'rpcAuthenticate',
    'cli',
    'job',
    'function',
    'lock',
    'workflow',
    'event',
    'database',
    'databaseQuery',
    'email',
    'template',
    'FrameCategory',
    'PC!C"C#C$C%C&C\'C(C)C*C+C,C-C.C/Bw0'
];
;
var FrameCategory;
(function(FrameCategory) {
    FrameCategory[FrameCategory["none"] = 0] = "none";
    FrameCategory[FrameCategory["http"] = 1] = "http";
    FrameCategory[FrameCategory["httpController"] = 2] = "httpController";
    FrameCategory[FrameCategory["rpc"] = 3] = "rpc";
    FrameCategory[FrameCategory["rpcAuthenticate"] = 4] = "rpcAuthenticate";
    FrameCategory[FrameCategory["cli"] = 5] = "cli";
    FrameCategory[FrameCategory["job"] = 6] = "job";
    FrameCategory[FrameCategory["function"] = 7] = "function";
    FrameCategory[FrameCategory["lock"] = 8] = "lock";
    FrameCategory[FrameCategory["workflow"] = 9] = "workflow";
    FrameCategory[FrameCategory["event"] = 10] = "event";
    FrameCategory[FrameCategory["database"] = 11] = "database";
    FrameCategory[FrameCategory["databaseQuery"] = 12] = "databaseQuery";
    FrameCategory[FrameCategory["email"] = 13] = "email";
    FrameCategory[FrameCategory["template"] = 14] = "template";
})(FrameCategory || (FrameCategory = {}));
const __ΩFrameType = [
    'start',
    'end',
    'FrameType',
    'PC!C"Bw#'
];
;
var FrameType;
(function(FrameType) {
    FrameType[FrameType["start"] = 0] = "start";
    FrameType[FrameType["end"] = 1] = "end";
})(FrameType || (FrameType = {}));
const __ΩFrameCategoryData = [
    'url',
    'method',
    'clientIp',
    'responseStatus',
    ()=>FrameCategory.http,
    'controller',
    'arguments',
    ()=>FrameCategory.rpc,
    'collection',
    'className',
    ()=>FrameCategory.database,
    'sql',
    'sqlParams',
    ()=>FrameCategory.databaseQuery,
    'FrameCategoryData',
    'PP&4!8&4"8&4#8\'4$8M4%P&4"&4&"F4\'M4(P&4)8&4*8M4+P&4,"F4-8M4.Mw/y'
];
;
const __ΩTypeOfCategory = [
    'C',
    ()=>__ΩFrameCategoryData,
    ()=>__ΩPartial,
    ()=>__ΩFrameCategoryData,
    'TypeOfCategory',
    'l<n$e$!fo#"R-RPe#!n"gqk#-QRb!Pde"!p/w%y'
];
;
const categorySchemas = {
    _loaded: false
};
function getTypeOfCategory(category) {
    if (!categorySchemas._loaded) {
        const types = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["typeOf"])([], [
            ()=>__ΩFrameCategoryData,
            'n!'
        ]);
        if (types.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
            for (const member of types.types){
                if (member.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].propertySignature) continue;
                categorySchemas[member.name] = member.type;
            }
        }
        categorySchemas._loaded = true;
    }
    return categorySchemas[category];
}
getTypeOfCategory.__type = [
    ()=>__ΩFrameCategory,
    'category',
    'Type',
    'getTypeOfCategory',
    'Pn!2"P"w#-J/$'
];
const __ΩFrameStart = [
    'cid',
    0,
    'type',
    'timestamp',
    'context',
    'label',
    ()=>__ΩFrameCategory,
    'category',
    'FrameStart',
    'P\'4!a"4#\'4$\'4%&4&n\'4(Mw)y'
];
;
const __ΩFrameEnd = [
    'cid',
    1,
    'type',
    'timestamp',
    'FrameEnd',
    'P\'4!a"4#\'4$Mw%y'
];
;
const __ΩFrameData = [
    'cid',
    ()=>__ΩFrameCategory,
    'category',
    'data',
    'FrameData',
    'P\'4!n"4#"4$Mw%y'
];
;
function encodeCompoundKey(id, worker) {
    return (id << 8) + worker;
}
encodeCompoundKey.__type = [
    'id',
    'worker',
    'encodeCompoundKey',
    'P\'2!\'2"\'/#'
];
function incrementCompoundKey(cid, id) {
    return cid + (id << 8);
}
incrementCompoundKey.__type = [
    'cid',
    'id',
    'incrementCompoundKey',
    'P\'2!\'2"\'/#'
];
function decodeCompoundKey(cid) {
    const id = cid >> 8;
    const worker = cid & 0xff;
    return [
        id,
        worker
    ];
}
decodeCompoundKey.__type = [
    'cid',
    'id',
    'worker',
    'decodeCompoundKey',
    'P\'2!P\'I"\'I#G/$'
];
class Frame {
    constructor(cid, start, context, label, category){
        this.cid = cid;
        this.start = start;
        this.context = context;
        this.label = label;
        this.category = category;
    }
}
Frame.__type = [
    'end',
    'data',
    'cid',
    'start',
    'context',
    'label',
    ()=>__ΩFrameCategory,
    'category',
    'constructor',
    'Frame',
    '\'3!8"3"8P\'2#:\'2$:\'2%:&2&:n\'2(:"0)5w*'
]; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "NoopStopwatchFrame": (()=>NoopStopwatchFrame),
    "Stopwatch": (()=>Stopwatch),
    "StopwatchFrame": (()=>StopwatchFrame),
    "StopwatchStore": (()=>StopwatchStore),
    "__ΩStopwatchFrameInterface": (()=>__ΩStopwatchFrameInterface)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
;
;
;
;
;
;
class StopwatchStore {
    constructor(){
        this.frameQueue = [];
        this.dataQueue = [];
        this.analytics = [];
        this.runningFrames = 0;
        this.lastCollectAnalytics = 0;
    }
    sync() {}
    async close() {}
    data(data) {
        this.dataQueue.push(data);
        this.sync();
    }
    collectAnalytics() {
        if ('undefined' === typeof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"]) return;
        const now = Date.now();
        const cpu = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].cpuUsage();
        const memory = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].memoryUsage();
        this.analytics.push({
            timestamp: now,
            cpu: cpu.user + cpu.system,
            memory: memory.heapUsed,
            loopBlocked: this.lastCollectAnalytics ? now - this.lastCollectAnalytics : 0
        });
        this.lastCollectAnalytics = now;
    }
    add(frame) {
        this.frameQueue.push(frame);
        if (frame.type === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameType"].start) {
            this.runningFrames++;
        } else {
            this.runningFrames--;
        }
        if (this.runningFrames === 0) {
            this.collectAnalytics();
            clearInterval(this.collectAnalyticsTimer);
            this.collectAnalyticsTimer = undefined;
        }
        if (this.runningFrames > 0 && !this.collectAnalyticsTimer) {
            this.collectAnalytics();
            this.collectAnalyticsTimer = setInterval(()=>{
                this.collectAnalytics();
            }, 25);
        }
        this.sync();
    }
}
StopwatchStore.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameStart"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameEnd"],
    'frameQueue',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameData"],
    'dataQueue',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩAnalyticData"],
    'analytics',
    function() {
        return [];
    },
    'collectAnalyticsTimer',
    'sync',
    'close',
    'data',
    '',
    'cb',
    'run',
    'getZone',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameData"],
    'collectAnalytics',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameStart"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩFrameEnd"],
    'frame',
    'add',
    'StopwatchStore',
    'Pn!n"JF3#>$n%F3&>\'n(F3)>*"3+8<P"0,<P"0-PP&"LM2.P"`//20"`01=PPP&"LM-J02=Pn32."0.P"04PPn5n6J27$085w9'
];
const __ΩStopwatchFrameInterface = [
    'C',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩTypeOfCategory"],
    'data',
    'end',
    '',
    'cb',
    'run',
    'StopwatchFrameInterface',
    'b!PPe#!o""2#$1#P$1$PPP"`"J/%2&P&"LM2#8"`1\'Mw(y'
];
;
class StopwatchFrame {
    constructor(store, context, category, cid){
        this.store = store;
        this.context = context;
        this.category = category;
        this.cid = cid;
        this.stopped = false;
    }
    data(data) {
        this.store.data({
            cid: this.cid,
            category: this.category,
            data
        });
    }
    end() {
        if (this.stopped) return;
        this.stopped = true;
        this.store.add({
            cid: this.cid,
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameType"].end,
            timestamp: 0
        });
    }
    run(cb, data = {}) {
        data.stopwatchContextId = this.context;
        return this.store.run(data, cb);
    }
}
StopwatchFrame.__type = [
    'C',
    ()=>StopwatchStore,
    'store',
    'context',
    'category',
    'cid',
    'constructor',
    ()=>__ΩPartial,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩTypeOfCategory"],
    'data',
    'end',
    '',
    'cb',
    ()=>({}),
    'run',
    ()=>__ΩStopwatchFrameInterface,
    'StopwatchFrame',
    'b!PP7"2#<\'2$:\'2%:\'2&:"0\'Pe"!o)"o("2*"0*P"0+PP"`/,2-P&"LM2*>."`0/5e!!o0"x"w1'
];
class NoopStopwatchFrame {
    data(data) {}
    end() {}
    run(cb, data = {}) {
        return cb();
    }
}
NoopStopwatchFrame.__type = [
    'C',
    'data',
    'end',
    '',
    'cb',
    ()=>({}),
    'run',
    ()=>__ΩStopwatchFrameInterface,
    'NoopStopwatchFrame',
    'b!P"2""0"P"0#PP"`/$2%P&"LM2">&"`0\'5e!!o("x"w)'
];
let frameId = 0;
let contextId = 0;
class Stopwatch {
    constructor(store){
        this.store = store;
        /**
         * It's active when there is a StopwatchStore attached.
         * Per default its inactive.
         */ this.active = false;
    }
    enable() {
        this.active = true;
    }
    disable() {
        this.active = false;
    }
    /**
     * Please check Stopwatch.active before using this method.
     *
     * When a new context is created, it's important to use StopwatchFrame.run() so that all
     * sub frames are correctly assigned to the new context.
     */ start(label, category = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameCategory"].none, newContext = false) {
        if (!this.active) return new NoopStopwatchFrame();
        if (!this.store) throw new Error('Stopwatch not active');
        let context = 0;
        const zone = this.store.getZone();
        if (newContext) {
            context = ++contextId;
        } else {
            if (!zone) return new NoopStopwatchFrame();
            context = zone.stopwatchContextId;
            // might be getting an empty object on some platforms, which we treat as no context (as we start new context only with stopwatchContextId)
            if (!context) return new NoopStopwatchFrame();
        }
        const id = ++frameId;
        const cid = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["encodeCompoundKey"])(id, 0);
        this.store.add({
            cid,
            type: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameType"].start,
            category,
            context: context,
            label,
            timestamp: 0
        });
        return new StopwatchFrame(this.store, context, category, cid);
    }
}
Stopwatch.__type = [
    'active',
    function() {
        return false;
    },
    ()=>StopwatchStore,
    'store',
    'constructor',
    'enable',
    'disable',
    'label',
    'category',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameCategory"].none,
    'newContext',
    ()=>false,
    ()=>__ΩStopwatchFrameInterface,
    'start',
    'Stopwatch',
    ')3!>"PP7#2$8<"0%P"0&P"0\'P&2("2)>*)2+>,"o-"0.5w/'
]; //# sourceMappingURL=stopwatch.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Workflow": (()=>Workflow),
    "WorkflowDefinition": (()=>WorkflowDefinition),
    "WorkflowError": (()=>WorkflowError),
    "WorkflowEvent": (()=>WorkflowEvent),
    "WorkflowStateSubject": (()=>WorkflowStateSubject),
    "__ΩWorkflowDefinitionEvents": (()=>__ΩWorkflowDefinitionEvents),
    "__ΩWorkflowNextEvent": (()=>__ΩWorkflowNextEvent),
    "__ΩWorkflowPlaces": (()=>__ΩWorkflowPlaces),
    "__ΩWorkflowState": (()=>__ΩWorkflowState),
    "createWorkflow": (()=>createWorkflow)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/event/dist/esm/src/event.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/stopwatch.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/string.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/perf.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/stopwatch/dist/esm/src/types.js [app-client] (ecmascript)");
const __ΩOmit = [
    'T',
    'K',
    ()=>__ΩPick,
    ()=>__ΩExclude,
    'Omit',
    'b!b"e!!e!!ge!"o$#o##w%y'
];
const __ΩCapitalize = [
    'S',
    'Capitalize',
    'b!!w"y'
];
const __ΩPick = [
    'T',
    'K',
    'Pick',
    'l+e#!e"!fRb!b"Pde""N#!w#y'
];
const __ΩExclude = [
    'T',
    'U',
    'Exclude',
    'l6!Re$!RPe#!e$"qk#%QRb!b"Pde"!p)w#y'
];
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
const __ΩWorkflowTransition = [
    'T',
    'from',
    'to',
    'label',
    'WorkflowTransition',
    'b!PPe#!g&K4"Pe#!g&K4#&4$8Mw%y'
];
class WorkflowEvent {
    constructor(){
        this.propagationStopped = false;
    }
    stopPropagation() {
        this.propagationStopped = true;
    }
    isPropagationStopped() {
        return this.propagationStopped;
    }
    clearNext() {
        this.nextState = undefined;
        this.nextStateEvent = undefined;
    }
    /**
     * @see WorkflowNextEvent.next
     */ next(nextState, event) {
        this.nextState = nextState;
        this.nextStateEvent = event;
    }
    hasNext() {
        return this.nextState !== undefined;
    }
}
WorkflowEvent.__type = [
    'stopPropagation',
    'isPropagationStopped',
    'nextState',
    'nextStateEvent',
    'clearNext',
    'event',
    'next',
    'hasNext',
    'WorkflowEvent',
    'P"0!P"0""3#8"3$8P"0%P&2#"2&8"0\'P)0(5w)'
];
const __ΩWorkflowPlaces = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>WorkflowEvent,
    'WorkflowPlaces',
    'P&P7"o!"LMw#y'
];
;
const __ΩWorkflowNextEvent = [
    'T',
    'nextState',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    'event',
    'next',
    'WorkflowNextEvent',
    'b!PPe#!g&K4"8P"2"e#!"fo#"2$8$1%Mw&y'
];
;
const __ΩWorkflowDefinitionEvents = [
    'T',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["BaseEvent"],
    ()=>__ΩOmit,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    "next",
    "nextState",
    ()=>__ΩWorkflowNextEvent,
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventToken"],
    'on',
    ()=>__ΩCapitalize,
    'WorkflowDefinitionEvents',
    'lQPPPP7"e&!e%!fo$"P.%.&Jo##e&!o\'"K7(P.)e$!o*"SGRb!PdPe#!g&Kt#!w+y'
];
;
class WorkflowDefinition {
    constructor(name, places, transitions = {}){
        this.name = name;
        this.places = places;
        this.transitions = [];
        this.tokens = {};
        this.next = {};
        this.symbol = Symbol('workflow');
        for(const placeName in this.places){
            if (!this.places.hasOwnProperty(placeName)) continue;
            const token = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventToken"](name + '.' + placeName, this.places[placeName]);
            this.tokens[placeName] = token;
            this['on' + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$string$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["capitalize"])(placeName)] = token;
        }
        for (const [i, value] of Object.entries(transitions)){
            if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(value)) {
                for (const v of value)this.addTransition(i, v);
            } else if (value !== undefined) {
                this.addTransition(i, value);
            }
        }
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFastProperties"])(this.tokens);
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$perf$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["toFastProperties"])(this.next);
    }
    getEventToken(name) {
        if (!this.tokens[name]) throw new Error(`No event token found for ${String(name)}`);
        return this.tokens[name];
    }
    addTransition(from, to, label) {
        this.transitions.push({
            from,
            to,
            label
        });
        if (!this.next[from]) this.next[from] = [];
        this.next[from].push(to);
    }
    create(state, eventDispatcher, injector, stopwatch) {
        return new Workflow(this, new WorkflowStateSubject(state), eventDispatcher, injector || eventDispatcher.injector, stopwatch);
    }
    getTransitionsFrom(state) {
        return this.next[state] || [];
    }
    buildApplier(eventDispatcher) {
        const compiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompilerContext"]();
        compiler.context.set('WorkflowError', WorkflowError);
        compiler.context.set('WorkflowEvent', WorkflowEvent);
        compiler.context.set('getClassName', __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"]);
        const lines = [];
        for (const [place, eventType] of Object.entries(this.places)){
            const stateString = JSON.stringify(place);
            const eventTypeVar = compiler.reserveVariable('eventType', eventType);
            const allowedFrom = this.transitions.filter(__assignType((v)=>v.to === place, [
                'v',
                '',
                'P"2!"/"'
            ]));
            const allowedFromCondition = allowedFrom.map(__assignType((v)=>`currentState === ${JSON.stringify(v.from)}`, [
                'v',
                '',
                'P"2!"/"'
            ])).join(' || ');
            const checkFrom = `if (!(${allowedFromCondition})) throw new WorkflowError(\`Can not apply state change from \${currentState}->\${nextState}. There's no transition between them or it was blocked.\`);`;
            const eventToken = this.tokens[place];
            const listeners = eventDispatcher.getListeners(eventToken);
            listeners.sort(__assignType((a, b)=>{
                if (a.order > b.order) return +1;
                if (a.order < b.order) return -1;
                return 0;
            }, [
                'a',
                'b',
                '',
                'P"2!"2""/#'
            ]));
            const listenerCode = [];
            for (const listener of listeners){
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEventListenerContainerEntryCallback"])(listener)) {
                    const injector = listener.module ? eventDispatcher.injector.getInjector(listener.module) : eventDispatcher.injector.getRootInjector();
                    const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedFunction"])(listener.fn, injector, 1);
                    const fnVar = compiler.reserveVariable('fn', fn);
                    listenerCode.push(`
                        if (!event.isPropagationStopped()) {
                            await ${fnVar}(scopedContext.scope, event);
                        }
                    `);
                } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isEventListenerContainerEntryService"])(listener)) {
                    const injector = listener.module ? eventDispatcher.injector.getInjector(listener.module) : eventDispatcher.injector.getRootInjector();
                    const classTypeVar = compiler.reserveVariable('classType', listener.classType);
                    const moduleVar = listener.module ? ', ' + compiler.reserveVariable('module', listener.module) : '';
                    const method = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionClass"].from(listener.classType).getMethod(listener.methodName);
                    const resolvedVar = compiler.reserveVariable('resolved');
                    let call = `${resolvedVar}.${listener.methodName}(event)`;
                    if (method.getParameters().length > 1) {
                        const fn = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["injectedFunction"])(__assignType((event, classInstance, ...args)=>{
                            return classInstance[listener.methodName](event, ...args);
                        }, [
                            'event',
                            'classInstance',
                            'args',
                            '',
                            'P"2!"2""@2#"/$'
                        ]), injector, 2, method.type, 1);
                        call = `${compiler.reserveVariable('fn', fn)}(scopedContext.scope, event, ${resolvedVar})`;
                    }
                    listenerCode.push(`
                        //${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(listener.classType)}.${listener.methodName}
                        if (!event.isPropagationStopped()) {
                            if (!${resolvedVar}) ${resolvedVar} = scopedContext.get(${classTypeVar}${moduleVar});
                            await ${call};
                        }
                    `);
                }
            }
            const stopWatchId = this.name + '/' + place;
            lines.push(`
            case ${stateString}: {
                ${allowedFrom.length ? checkFrom : ''}
                if (!(event instanceof ${eventTypeVar})) {
                    throw new Error(\`State ${place} got the wrong event. Expected ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(eventType)}, got \${getClassName(event)}\`);
                }
                const frame = stopwatch && stopwatch.active ? stopwatch.start(${JSON.stringify(stopWatchId)}, ${__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["FrameCategory"].workflow}) : undefined;

                ${listenerCode.join('\n')}

                if (frame) frame.end();
                state.set(${stateString});
                break;
            }
        `);
        }
        return compiler.buildAsync(`
            while (true) {
                const currentState = state.get();
                switch (nextState) {
                    ${lines.join('\n')}
                }

                if (event.nextState) {
                    nextState = event.nextState;
                    event = event.nextStateEvent || new WorkflowEvent();
                    continue;
                }
                return;
            }
        `, 'scopedContext', 'state', 'nextState', 'event', 'stopwatch');
    }
}
WorkflowDefinition.__type = [
    'T',
    ()=>__ΩWorkflowTransition,
    'transitions',
    function() {
        return [];
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventToken"],
    'tokens',
    function() {
        return {};
    },
    'next',
    function() {
        return {};
    },
    'name',
    'places',
    ()=>__ΩWorkflowTransitions,
    ()=>({}),
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventToken"],
    'getEventToken',
    'from',
    'to',
    'label',
    'addTransition',
    'state',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Stopwatch"],
    'stopwatch',
    ()=>Workflow,
    'create',
    'getTransitionsFrom',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'buildApplier',
    'WorkflowDefinition',
    'l1P"7%RPe$!g&KFRb!e!!o""F3#>$Pde"!gN#"3&>\'Pde"!gN("3(>)P&2*:9e"!2+:9e"!o,"2#>-"0.P"2*Pe#!"fo/"7001PPe#!g&K22Pe#!g&K23&248"05PPe#!g&K26P7728P792:8P7;2<8Pe#!7=0>PPe#!g&K26Pe#!g&KF0?PP7@28"0A5wB'
];
const __ΩWorkflowTransitions = [
    'T',
    'WorkflowTransitions',
    'l5PPe%!g&KPe%!g&KFJRb!Pde"!gN#"w"y'
];
function createWorkflow(name, definition, transitions = {}) {
    return new WorkflowDefinition(name, definition, transitions);
}
createWorkflow.__type = [
    'name',
    'definition',
    ()=>__ΩWorkflowTransitions,
    'transitions',
    ()=>({}),
    ()=>WorkflowDefinition,
    ()=>__ΩWorkflowDefinitionEvents,
    'createWorkflow',
    'P&2!"2""o#"2$>%PP"7&"o\'"K/('
];
const __ΩWorkflowState = [
    'T',
    'get',
    'v',
    'set',
    'WorkflowState',
    'b!PPPe$!g&K1"PPe$!g&K2#$1$Mw%y'
];
;
class WorkflowStateSubject {
    constructor(value){
        this.value = value;
    }
    get() {
        return this.value;
    }
    set(v) {
        this.value = v;
    }
}
WorkflowStateSubject.__type = [
    'T',
    'value',
    'constructor',
    'get',
    'v',
    'set',
    ()=>__ΩWorkflowState,
    'WorkflowStateSubject',
    'b!PPe#!g&K2":"0#P"0$PPe#!g&K2%"0&5e!!o\'"x"w('
];
class WorkflowError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"] {
}
WorkflowError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"],
    'WorkflowError',
    'P7!5w"'
];
class Workflow {
    constructor(definition, state, eventDispatcher, injector, stopwatch){
        this.definition = definition;
        this.state = state;
        this.eventDispatcher = eventDispatcher;
        this.injector = injector;
        this.stopwatch = stopwatch;
        this.events = {};
    }
    can(nextState) {
        return this.definition.getTransitionsFrom(this.state.get()).includes(nextState);
    }
    /**
     * @throws WorkflowError when next state is not possible to apply.
     */ apply(nextState, event) {
        let fn = this.eventDispatcher[this.definition.symbol];
        if (!fn) {
            fn = this.eventDispatcher[this.definition.symbol] = this.definition.buildApplier(this.eventDispatcher);
        }
        return fn(this.injector, this.state, nextState, event || new WorkflowEvent(), this.stopwatch);
    }
    isDone() {
        return this.definition.getTransitionsFrom(this.state.get()).length === 0;
    }
}
Workflow.__type = [
    'T',
    ()=>Function,
    'events',
    function() {
        return {};
    },
    ()=>WorkflowDefinition,
    'definition',
    ()=>__ΩWorkflowState,
    'state',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$event$2f$dist$2f$esm$2f$src$2f$event$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["EventDispatcher"],
    'eventDispatcher',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'injector',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$stopwatch$2f$dist$2f$esm$2f$src$2f$stopwatch$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Stopwatch"],
    'stopwatch',
    'constructor',
    'nextState',
    'can',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩExtractClassType"],
    'event',
    'apply',
    'isDone',
    'Workflow',
    'l\'Pu"Rb!Pde"!gN#"3#<>$PPe#!7%2&:e"!o\'"2(:P7)2*;P7+2,;P7-2.8;"0/PPe#!g&K20)01P"20e"!"fo2"238$`04P)055w6'
]; //# sourceMappingURL=workflow.js.map
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$src$2f$workflow$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/src/workflow.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$workflow$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/workflow/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/color-name/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
module.exports = {
    "aliceblue": [
        240,
        248,
        255
    ],
    "antiquewhite": [
        250,
        235,
        215
    ],
    "aqua": [
        0,
        255,
        255
    ],
    "aquamarine": [
        127,
        255,
        212
    ],
    "azure": [
        240,
        255,
        255
    ],
    "beige": [
        245,
        245,
        220
    ],
    "bisque": [
        255,
        228,
        196
    ],
    "black": [
        0,
        0,
        0
    ],
    "blanchedalmond": [
        255,
        235,
        205
    ],
    "blue": [
        0,
        0,
        255
    ],
    "blueviolet": [
        138,
        43,
        226
    ],
    "brown": [
        165,
        42,
        42
    ],
    "burlywood": [
        222,
        184,
        135
    ],
    "cadetblue": [
        95,
        158,
        160
    ],
    "chartreuse": [
        127,
        255,
        0
    ],
    "chocolate": [
        210,
        105,
        30
    ],
    "coral": [
        255,
        127,
        80
    ],
    "cornflowerblue": [
        100,
        149,
        237
    ],
    "cornsilk": [
        255,
        248,
        220
    ],
    "crimson": [
        220,
        20,
        60
    ],
    "cyan": [
        0,
        255,
        255
    ],
    "darkblue": [
        0,
        0,
        139
    ],
    "darkcyan": [
        0,
        139,
        139
    ],
    "darkgoldenrod": [
        184,
        134,
        11
    ],
    "darkgray": [
        169,
        169,
        169
    ],
    "darkgreen": [
        0,
        100,
        0
    ],
    "darkgrey": [
        169,
        169,
        169
    ],
    "darkkhaki": [
        189,
        183,
        107
    ],
    "darkmagenta": [
        139,
        0,
        139
    ],
    "darkolivegreen": [
        85,
        107,
        47
    ],
    "darkorange": [
        255,
        140,
        0
    ],
    "darkorchid": [
        153,
        50,
        204
    ],
    "darkred": [
        139,
        0,
        0
    ],
    "darksalmon": [
        233,
        150,
        122
    ],
    "darkseagreen": [
        143,
        188,
        143
    ],
    "darkslateblue": [
        72,
        61,
        139
    ],
    "darkslategray": [
        47,
        79,
        79
    ],
    "darkslategrey": [
        47,
        79,
        79
    ],
    "darkturquoise": [
        0,
        206,
        209
    ],
    "darkviolet": [
        148,
        0,
        211
    ],
    "deeppink": [
        255,
        20,
        147
    ],
    "deepskyblue": [
        0,
        191,
        255
    ],
    "dimgray": [
        105,
        105,
        105
    ],
    "dimgrey": [
        105,
        105,
        105
    ],
    "dodgerblue": [
        30,
        144,
        255
    ],
    "firebrick": [
        178,
        34,
        34
    ],
    "floralwhite": [
        255,
        250,
        240
    ],
    "forestgreen": [
        34,
        139,
        34
    ],
    "fuchsia": [
        255,
        0,
        255
    ],
    "gainsboro": [
        220,
        220,
        220
    ],
    "ghostwhite": [
        248,
        248,
        255
    ],
    "gold": [
        255,
        215,
        0
    ],
    "goldenrod": [
        218,
        165,
        32
    ],
    "gray": [
        128,
        128,
        128
    ],
    "green": [
        0,
        128,
        0
    ],
    "greenyellow": [
        173,
        255,
        47
    ],
    "grey": [
        128,
        128,
        128
    ],
    "honeydew": [
        240,
        255,
        240
    ],
    "hotpink": [
        255,
        105,
        180
    ],
    "indianred": [
        205,
        92,
        92
    ],
    "indigo": [
        75,
        0,
        130
    ],
    "ivory": [
        255,
        255,
        240
    ],
    "khaki": [
        240,
        230,
        140
    ],
    "lavender": [
        230,
        230,
        250
    ],
    "lavenderblush": [
        255,
        240,
        245
    ],
    "lawngreen": [
        124,
        252,
        0
    ],
    "lemonchiffon": [
        255,
        250,
        205
    ],
    "lightblue": [
        173,
        216,
        230
    ],
    "lightcoral": [
        240,
        128,
        128
    ],
    "lightcyan": [
        224,
        255,
        255
    ],
    "lightgoldenrodyellow": [
        250,
        250,
        210
    ],
    "lightgray": [
        211,
        211,
        211
    ],
    "lightgreen": [
        144,
        238,
        144
    ],
    "lightgrey": [
        211,
        211,
        211
    ],
    "lightpink": [
        255,
        182,
        193
    ],
    "lightsalmon": [
        255,
        160,
        122
    ],
    "lightseagreen": [
        32,
        178,
        170
    ],
    "lightskyblue": [
        135,
        206,
        250
    ],
    "lightslategray": [
        119,
        136,
        153
    ],
    "lightslategrey": [
        119,
        136,
        153
    ],
    "lightsteelblue": [
        176,
        196,
        222
    ],
    "lightyellow": [
        255,
        255,
        224
    ],
    "lime": [
        0,
        255,
        0
    ],
    "limegreen": [
        50,
        205,
        50
    ],
    "linen": [
        250,
        240,
        230
    ],
    "magenta": [
        255,
        0,
        255
    ],
    "maroon": [
        128,
        0,
        0
    ],
    "mediumaquamarine": [
        102,
        205,
        170
    ],
    "mediumblue": [
        0,
        0,
        205
    ],
    "mediumorchid": [
        186,
        85,
        211
    ],
    "mediumpurple": [
        147,
        112,
        219
    ],
    "mediumseagreen": [
        60,
        179,
        113
    ],
    "mediumslateblue": [
        123,
        104,
        238
    ],
    "mediumspringgreen": [
        0,
        250,
        154
    ],
    "mediumturquoise": [
        72,
        209,
        204
    ],
    "mediumvioletred": [
        199,
        21,
        133
    ],
    "midnightblue": [
        25,
        25,
        112
    ],
    "mintcream": [
        245,
        255,
        250
    ],
    "mistyrose": [
        255,
        228,
        225
    ],
    "moccasin": [
        255,
        228,
        181
    ],
    "navajowhite": [
        255,
        222,
        173
    ],
    "navy": [
        0,
        0,
        128
    ],
    "oldlace": [
        253,
        245,
        230
    ],
    "olive": [
        128,
        128,
        0
    ],
    "olivedrab": [
        107,
        142,
        35
    ],
    "orange": [
        255,
        165,
        0
    ],
    "orangered": [
        255,
        69,
        0
    ],
    "orchid": [
        218,
        112,
        214
    ],
    "palegoldenrod": [
        238,
        232,
        170
    ],
    "palegreen": [
        152,
        251,
        152
    ],
    "paleturquoise": [
        175,
        238,
        238
    ],
    "palevioletred": [
        219,
        112,
        147
    ],
    "papayawhip": [
        255,
        239,
        213
    ],
    "peachpuff": [
        255,
        218,
        185
    ],
    "peru": [
        205,
        133,
        63
    ],
    "pink": [
        255,
        192,
        203
    ],
    "plum": [
        221,
        160,
        221
    ],
    "powderblue": [
        176,
        224,
        230
    ],
    "purple": [
        128,
        0,
        128
    ],
    "rebeccapurple": [
        102,
        51,
        153
    ],
    "red": [
        255,
        0,
        0
    ],
    "rosybrown": [
        188,
        143,
        143
    ],
    "royalblue": [
        65,
        105,
        225
    ],
    "saddlebrown": [
        139,
        69,
        19
    ],
    "salmon": [
        250,
        128,
        114
    ],
    "sandybrown": [
        244,
        164,
        96
    ],
    "seagreen": [
        46,
        139,
        87
    ],
    "seashell": [
        255,
        245,
        238
    ],
    "sienna": [
        160,
        82,
        45
    ],
    "silver": [
        192,
        192,
        192
    ],
    "skyblue": [
        135,
        206,
        235
    ],
    "slateblue": [
        106,
        90,
        205
    ],
    "slategray": [
        112,
        128,
        144
    ],
    "slategrey": [
        112,
        128,
        144
    ],
    "snow": [
        255,
        250,
        250
    ],
    "springgreen": [
        0,
        255,
        127
    ],
    "steelblue": [
        70,
        130,
        180
    ],
    "tan": [
        210,
        180,
        140
    ],
    "teal": [
        0,
        128,
        128
    ],
    "thistle": [
        216,
        191,
        216
    ],
    "tomato": [
        255,
        99,
        71
    ],
    "turquoise": [
        64,
        224,
        208
    ],
    "violet": [
        238,
        130,
        238
    ],
    "wheat": [
        245,
        222,
        179
    ],
    "white": [
        255,
        255,
        255
    ],
    "whitesmoke": [
        245,
        245,
        245
    ],
    "yellow": [
        255,
        255,
        0
    ],
    "yellowgreen": [
        154,
        205,
        50
    ]
};
}}),
"[project]/node_modules/color-convert/conversions.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
/* MIT license */ /* eslint-disable no-mixed-operators */ const cssKeywords = __turbopack_require__("[project]/node_modules/color-name/index.js [app-client] (ecmascript)");
// NOTE: conversions should only return primitive values (i.e. arrays, or
//       values that give correct `typeof` results).
//       do not use box values types (i.e. Number(), String(), etc.)
const reverseKeywords = {};
for (const key of Object.keys(cssKeywords)){
    reverseKeywords[cssKeywords[key]] = key;
}
const convert = {
    rgb: {
        channels: 3,
        labels: 'rgb'
    },
    hsl: {
        channels: 3,
        labels: 'hsl'
    },
    hsv: {
        channels: 3,
        labels: 'hsv'
    },
    hwb: {
        channels: 3,
        labels: 'hwb'
    },
    cmyk: {
        channels: 4,
        labels: 'cmyk'
    },
    xyz: {
        channels: 3,
        labels: 'xyz'
    },
    lab: {
        channels: 3,
        labels: 'lab'
    },
    lch: {
        channels: 3,
        labels: 'lch'
    },
    hex: {
        channels: 1,
        labels: [
            'hex'
        ]
    },
    keyword: {
        channels: 1,
        labels: [
            'keyword'
        ]
    },
    ansi16: {
        channels: 1,
        labels: [
            'ansi16'
        ]
    },
    ansi256: {
        channels: 1,
        labels: [
            'ansi256'
        ]
    },
    hcg: {
        channels: 3,
        labels: [
            'h',
            'c',
            'g'
        ]
    },
    apple: {
        channels: 3,
        labels: [
            'r16',
            'g16',
            'b16'
        ]
    },
    gray: {
        channels: 1,
        labels: [
            'gray'
        ]
    }
};
module.exports = convert;
// Hide .channels and .labels properties
for (const model of Object.keys(convert)){
    if (!('channels' in convert[model])) {
        throw new Error('missing channels property: ' + model);
    }
    if (!('labels' in convert[model])) {
        throw new Error('missing channel labels property: ' + model);
    }
    if (convert[model].labels.length !== convert[model].channels) {
        throw new Error('channel and label counts mismatch: ' + model);
    }
    const { channels, labels } = convert[model];
    delete convert[model].channels;
    delete convert[model].labels;
    Object.defineProperty(convert[model], 'channels', {
        value: channels
    });
    Object.defineProperty(convert[model], 'labels', {
        value: labels
    });
}
convert.rgb.hsl = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const min = Math.min(r, g, b);
    const max = Math.max(r, g, b);
    const delta = max - min;
    let h;
    let s;
    if (max === min) {
        h = 0;
    } else if (r === max) {
        h = (g - b) / delta;
    } else if (g === max) {
        h = 2 + (b - r) / delta;
    } else if (b === max) {
        h = 4 + (r - g) / delta;
    }
    h = Math.min(h * 60, 360);
    if (h < 0) {
        h += 360;
    }
    const l = (min + max) / 2;
    if (max === min) {
        s = 0;
    } else if (l <= 0.5) {
        s = delta / (max + min);
    } else {
        s = delta / (2 - max - min);
    }
    return [
        h,
        s * 100,
        l * 100
    ];
};
convert.rgb.hsv = function(rgb) {
    let rdif;
    let gdif;
    let bdif;
    let h;
    let s;
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const v = Math.max(r, g, b);
    const diff = v - Math.min(r, g, b);
    const diffc = function(c) {
        return (v - c) / 6 / diff + 1 / 2;
    };
    if (diff === 0) {
        h = 0;
        s = 0;
    } else {
        s = diff / v;
        rdif = diffc(r);
        gdif = diffc(g);
        bdif = diffc(b);
        if (r === v) {
            h = bdif - gdif;
        } else if (g === v) {
            h = 1 / 3 + rdif - bdif;
        } else if (b === v) {
            h = 2 / 3 + gdif - rdif;
        }
        if (h < 0) {
            h += 1;
        } else if (h > 1) {
            h -= 1;
        }
    }
    return [
        h * 360,
        s * 100,
        v * 100
    ];
};
convert.rgb.hwb = function(rgb) {
    const r = rgb[0];
    const g = rgb[1];
    let b = rgb[2];
    const h = convert.rgb.hsl(rgb)[0];
    const w = 1 / 255 * Math.min(r, Math.min(g, b));
    b = 1 - 1 / 255 * Math.max(r, Math.max(g, b));
    return [
        h,
        w * 100,
        b * 100
    ];
};
convert.rgb.cmyk = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const k = Math.min(1 - r, 1 - g, 1 - b);
    const c = (1 - r - k) / (1 - k) || 0;
    const m = (1 - g - k) / (1 - k) || 0;
    const y = (1 - b - k) / (1 - k) || 0;
    return [
        c * 100,
        m * 100,
        y * 100,
        k * 100
    ];
};
function comparativeDistance(x, y) {
    /*
		See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance
	*/ return (x[0] - y[0]) ** 2 + (x[1] - y[1]) ** 2 + (x[2] - y[2]) ** 2;
}
convert.rgb.keyword = function(rgb) {
    const reversed = reverseKeywords[rgb];
    if (reversed) {
        return reversed;
    }
    let currentClosestDistance = Infinity;
    let currentClosestKeyword;
    for (const keyword of Object.keys(cssKeywords)){
        const value = cssKeywords[keyword];
        // Compute comparative distance
        const distance = comparativeDistance(rgb, value);
        // Check if its less, if so set as closest
        if (distance < currentClosestDistance) {
            currentClosestDistance = distance;
            currentClosestKeyword = keyword;
        }
    }
    return currentClosestKeyword;
};
convert.keyword.rgb = function(keyword) {
    return cssKeywords[keyword];
};
convert.rgb.xyz = function(rgb) {
    let r = rgb[0] / 255;
    let g = rgb[1] / 255;
    let b = rgb[2] / 255;
    // Assume sRGB
    r = r > 0.04045 ? ((r + 0.055) / 1.055) ** 2.4 : r / 12.92;
    g = g > 0.04045 ? ((g + 0.055) / 1.055) ** 2.4 : g / 12.92;
    b = b > 0.04045 ? ((b + 0.055) / 1.055) ** 2.4 : b / 12.92;
    const x = r * 0.4124 + g * 0.3576 + b * 0.1805;
    const y = r * 0.2126 + g * 0.7152 + b * 0.0722;
    const z = r * 0.0193 + g * 0.1192 + b * 0.9505;
    return [
        x * 100,
        y * 100,
        z * 100
    ];
};
convert.rgb.lab = function(rgb) {
    const xyz = convert.rgb.xyz(rgb);
    let x = xyz[0];
    let y = xyz[1];
    let z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y - 16;
    const a = 500 * (x - y);
    const b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.hsl.rgb = function(hsl) {
    const h = hsl[0] / 360;
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    let t2;
    let t3;
    let val;
    if (s === 0) {
        val = l * 255;
        return [
            val,
            val,
            val
        ];
    }
    if (l < 0.5) {
        t2 = l * (1 + s);
    } else {
        t2 = l + s - l * s;
    }
    const t1 = 2 * l - t2;
    const rgb = [
        0,
        0,
        0
    ];
    for(let i = 0; i < 3; i++){
        t3 = h + 1 / 3 * -(i - 1);
        if (t3 < 0) {
            t3++;
        }
        if (t3 > 1) {
            t3--;
        }
        if (6 * t3 < 1) {
            val = t1 + (t2 - t1) * 6 * t3;
        } else if (2 * t3 < 1) {
            val = t2;
        } else if (3 * t3 < 2) {
            val = t1 + (t2 - t1) * (2 / 3 - t3) * 6;
        } else {
            val = t1;
        }
        rgb[i] = val * 255;
    }
    return rgb;
};
convert.hsl.hsv = function(hsl) {
    const h = hsl[0];
    let s = hsl[1] / 100;
    let l = hsl[2] / 100;
    let smin = s;
    const lmin = Math.max(l, 0.01);
    l *= 2;
    s *= l <= 1 ? l : 2 - l;
    smin *= lmin <= 1 ? lmin : 2 - lmin;
    const v = (l + s) / 2;
    const sv = l === 0 ? 2 * smin / (lmin + smin) : 2 * s / (l + s);
    return [
        h,
        sv * 100,
        v * 100
    ];
};
convert.hsv.rgb = function(hsv) {
    const h = hsv[0] / 60;
    const s = hsv[1] / 100;
    let v = hsv[2] / 100;
    const hi = Math.floor(h) % 6;
    const f = h - Math.floor(h);
    const p = 255 * v * (1 - s);
    const q = 255 * v * (1 - s * f);
    const t = 255 * v * (1 - s * (1 - f));
    v *= 255;
    switch(hi){
        case 0:
            return [
                v,
                t,
                p
            ];
        case 1:
            return [
                q,
                v,
                p
            ];
        case 2:
            return [
                p,
                v,
                t
            ];
        case 3:
            return [
                p,
                q,
                v
            ];
        case 4:
            return [
                t,
                p,
                v
            ];
        case 5:
            return [
                v,
                p,
                q
            ];
    }
};
convert.hsv.hsl = function(hsv) {
    const h = hsv[0];
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const vmin = Math.max(v, 0.01);
    let sl;
    let l;
    l = (2 - s) * v;
    const lmin = (2 - s) * vmin;
    sl = s * vmin;
    sl /= lmin <= 1 ? lmin : 2 - lmin;
    sl = sl || 0;
    l /= 2;
    return [
        h,
        sl * 100,
        l * 100
    ];
};
// http://dev.w3.org/csswg/css-color/#hwb-to-rgb
convert.hwb.rgb = function(hwb) {
    const h = hwb[0] / 360;
    let wh = hwb[1] / 100;
    let bl = hwb[2] / 100;
    const ratio = wh + bl;
    let f;
    // Wh + bl cant be > 1
    if (ratio > 1) {
        wh /= ratio;
        bl /= ratio;
    }
    const i = Math.floor(6 * h);
    const v = 1 - bl;
    f = 6 * h - i;
    if ((i & 0x01) !== 0) {
        f = 1 - f;
    }
    const n = wh + f * (v - wh); // Linear interpolation
    let r;
    let g;
    let b;
    /* eslint-disable max-statements-per-line,no-multi-spaces */ switch(i){
        default:
        case 6:
        case 0:
            r = v;
            g = n;
            b = wh;
            break;
        case 1:
            r = n;
            g = v;
            b = wh;
            break;
        case 2:
            r = wh;
            g = v;
            b = n;
            break;
        case 3:
            r = wh;
            g = n;
            b = v;
            break;
        case 4:
            r = n;
            g = wh;
            b = v;
            break;
        case 5:
            r = v;
            g = wh;
            b = n;
            break;
    }
    /* eslint-enable max-statements-per-line,no-multi-spaces */ return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.cmyk.rgb = function(cmyk) {
    const c = cmyk[0] / 100;
    const m = cmyk[1] / 100;
    const y = cmyk[2] / 100;
    const k = cmyk[3] / 100;
    const r = 1 - Math.min(1, c * (1 - k) + k);
    const g = 1 - Math.min(1, m * (1 - k) + k);
    const b = 1 - Math.min(1, y * (1 - k) + k);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.rgb = function(xyz) {
    const x = xyz[0] / 100;
    const y = xyz[1] / 100;
    const z = xyz[2] / 100;
    let r;
    let g;
    let b;
    r = x * 3.2406 + y * -1.5372 + z * -0.4986;
    g = x * -0.9689 + y * 1.8758 + z * 0.0415;
    b = x * 0.0557 + y * -0.2040 + z * 1.0570;
    // Assume sRGB
    r = r > 0.0031308 ? 1.055 * r ** (1.0 / 2.4) - 0.055 : r * 12.92;
    g = g > 0.0031308 ? 1.055 * g ** (1.0 / 2.4) - 0.055 : g * 12.92;
    b = b > 0.0031308 ? 1.055 * b ** (1.0 / 2.4) - 0.055 : b * 12.92;
    r = Math.min(Math.max(0, r), 1);
    g = Math.min(Math.max(0, g), 1);
    b = Math.min(Math.max(0, b), 1);
    return [
        r * 255,
        g * 255,
        b * 255
    ];
};
convert.xyz.lab = function(xyz) {
    let x = xyz[0];
    let y = xyz[1];
    let z = xyz[2];
    x /= 95.047;
    y /= 100;
    z /= 108.883;
    x = x > 0.008856 ? x ** (1 / 3) : 7.787 * x + 16 / 116;
    y = y > 0.008856 ? y ** (1 / 3) : 7.787 * y + 16 / 116;
    z = z > 0.008856 ? z ** (1 / 3) : 7.787 * z + 16 / 116;
    const l = 116 * y - 16;
    const a = 500 * (x - y);
    const b = 200 * (y - z);
    return [
        l,
        a,
        b
    ];
};
convert.lab.xyz = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let x;
    let y;
    let z;
    y = (l + 16) / 116;
    x = a / 500 + y;
    z = y - b / 200;
    const y2 = y ** 3;
    const x2 = x ** 3;
    const z2 = z ** 3;
    y = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;
    x = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;
    z = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;
    x *= 95.047;
    y *= 100;
    z *= 108.883;
    return [
        x,
        y,
        z
    ];
};
convert.lab.lch = function(lab) {
    const l = lab[0];
    const a = lab[1];
    const b = lab[2];
    let h;
    const hr = Math.atan2(b, a);
    h = hr * 360 / 2 / Math.PI;
    if (h < 0) {
        h += 360;
    }
    const c = Math.sqrt(a * a + b * b);
    return [
        l,
        c,
        h
    ];
};
convert.lch.lab = function(lch) {
    const l = lch[0];
    const c = lch[1];
    const h = lch[2];
    const hr = h / 360 * 2 * Math.PI;
    const a = c * Math.cos(hr);
    const b = c * Math.sin(hr);
    return [
        l,
        a,
        b
    ];
};
convert.rgb.ansi16 = function(args, saturation = null) {
    const [r, g, b] = args;
    let value = saturation === null ? convert.rgb.hsv(args)[2] : saturation; // Hsv -> ansi16 optimization
    value = Math.round(value / 50);
    if (value === 0) {
        return 30;
    }
    let ansi = 30 + (Math.round(b / 255) << 2 | Math.round(g / 255) << 1 | Math.round(r / 255));
    if (value === 2) {
        ansi += 60;
    }
    return ansi;
};
convert.hsv.ansi16 = function(args) {
    // Optimization here; we already know the value and don't need to get
    // it converted for us.
    return convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);
};
convert.rgb.ansi256 = function(args) {
    const r = args[0];
    const g = args[1];
    const b = args[2];
    // We use the extended greyscale palette here, with the exception of
    // black and white. normal palette only has 4 greyscale shades.
    if (r === g && g === b) {
        if (r < 8) {
            return 16;
        }
        if (r > 248) {
            return 231;
        }
        return Math.round((r - 8) / 247 * 24) + 232;
    }
    const ansi = 16 + 36 * Math.round(r / 255 * 5) + 6 * Math.round(g / 255 * 5) + Math.round(b / 255 * 5);
    return ansi;
};
convert.ansi16.rgb = function(args) {
    let color = args % 10;
    // Handle greyscale
    if (color === 0 || color === 7) {
        if (args > 50) {
            color += 3.5;
        }
        color = color / 10.5 * 255;
        return [
            color,
            color,
            color
        ];
    }
    const mult = (~~(args > 50) + 1) * 0.5;
    const r = (color & 1) * mult * 255;
    const g = (color >> 1 & 1) * mult * 255;
    const b = (color >> 2 & 1) * mult * 255;
    return [
        r,
        g,
        b
    ];
};
convert.ansi256.rgb = function(args) {
    // Handle greyscale
    if (args >= 232) {
        const c = (args - 232) * 10 + 8;
        return [
            c,
            c,
            c
        ];
    }
    args -= 16;
    let rem;
    const r = Math.floor(args / 36) / 5 * 255;
    const g = Math.floor((rem = args % 36) / 6) / 5 * 255;
    const b = rem % 6 / 5 * 255;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hex = function(args) {
    const integer = ((Math.round(args[0]) & 0xFF) << 16) + ((Math.round(args[1]) & 0xFF) << 8) + (Math.round(args[2]) & 0xFF);
    const string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.hex.rgb = function(args) {
    const match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);
    if (!match) {
        return [
            0,
            0,
            0
        ];
    }
    let colorString = match[0];
    if (match[0].length === 3) {
        colorString = colorString.split('').map((char)=>{
            return char + char;
        }).join('');
    }
    const integer = parseInt(colorString, 16);
    const r = integer >> 16 & 0xFF;
    const g = integer >> 8 & 0xFF;
    const b = integer & 0xFF;
    return [
        r,
        g,
        b
    ];
};
convert.rgb.hcg = function(rgb) {
    const r = rgb[0] / 255;
    const g = rgb[1] / 255;
    const b = rgb[2] / 255;
    const max = Math.max(Math.max(r, g), b);
    const min = Math.min(Math.min(r, g), b);
    const chroma = max - min;
    let grayscale;
    let hue;
    if (chroma < 1) {
        grayscale = min / (1 - chroma);
    } else {
        grayscale = 0;
    }
    if (chroma <= 0) {
        hue = 0;
    } else if (max === r) {
        hue = (g - b) / chroma % 6;
    } else if (max === g) {
        hue = 2 + (b - r) / chroma;
    } else {
        hue = 4 + (r - g) / chroma;
    }
    hue /= 6;
    hue %= 1;
    return [
        hue * 360,
        chroma * 100,
        grayscale * 100
    ];
};
convert.hsl.hcg = function(hsl) {
    const s = hsl[1] / 100;
    const l = hsl[2] / 100;
    const c = l < 0.5 ? 2.0 * s * l : 2.0 * s * (1.0 - l);
    let f = 0;
    if (c < 1.0) {
        f = (l - 0.5 * c) / (1.0 - c);
    }
    return [
        hsl[0],
        c * 100,
        f * 100
    ];
};
convert.hsv.hcg = function(hsv) {
    const s = hsv[1] / 100;
    const v = hsv[2] / 100;
    const c = s * v;
    let f = 0;
    if (c < 1.0) {
        f = (v - c) / (1 - c);
    }
    return [
        hsv[0],
        c * 100,
        f * 100
    ];
};
convert.hcg.rgb = function(hcg) {
    const h = hcg[0] / 360;
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    if (c === 0.0) {
        return [
            g * 255,
            g * 255,
            g * 255
        ];
    }
    const pure = [
        0,
        0,
        0
    ];
    const hi = h % 1 * 6;
    const v = hi % 1;
    const w = 1 - v;
    let mg = 0;
    /* eslint-disable max-statements-per-line */ switch(Math.floor(hi)){
        case 0:
            pure[0] = 1;
            pure[1] = v;
            pure[2] = 0;
            break;
        case 1:
            pure[0] = w;
            pure[1] = 1;
            pure[2] = 0;
            break;
        case 2:
            pure[0] = 0;
            pure[1] = 1;
            pure[2] = v;
            break;
        case 3:
            pure[0] = 0;
            pure[1] = w;
            pure[2] = 1;
            break;
        case 4:
            pure[0] = v;
            pure[1] = 0;
            pure[2] = 1;
            break;
        default:
            pure[0] = 1;
            pure[1] = 0;
            pure[2] = w;
    }
    /* eslint-enable max-statements-per-line */ mg = (1.0 - c) * g;
    return [
        (c * pure[0] + mg) * 255,
        (c * pure[1] + mg) * 255,
        (c * pure[2] + mg) * 255
    ];
};
convert.hcg.hsv = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const v = c + g * (1.0 - c);
    let f = 0;
    if (v > 0.0) {
        f = c / v;
    }
    return [
        hcg[0],
        f * 100,
        v * 100
    ];
};
convert.hcg.hsl = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const l = g * (1.0 - c) + 0.5 * c;
    let s = 0;
    if (l > 0.0 && l < 0.5) {
        s = c / (2 * l);
    } else if (l >= 0.5 && l < 1.0) {
        s = c / (2 * (1 - l));
    }
    return [
        hcg[0],
        s * 100,
        l * 100
    ];
};
convert.hcg.hwb = function(hcg) {
    const c = hcg[1] / 100;
    const g = hcg[2] / 100;
    const v = c + g * (1.0 - c);
    return [
        hcg[0],
        (v - c) * 100,
        (1 - v) * 100
    ];
};
convert.hwb.hcg = function(hwb) {
    const w = hwb[1] / 100;
    const b = hwb[2] / 100;
    const v = 1 - b;
    const c = v - w;
    let g = 0;
    if (c < 1) {
        g = (v - c) / (1 - c);
    }
    return [
        hwb[0],
        c * 100,
        g * 100
    ];
};
convert.apple.rgb = function(apple) {
    return [
        apple[0] / 65535 * 255,
        apple[1] / 65535 * 255,
        apple[2] / 65535 * 255
    ];
};
convert.rgb.apple = function(rgb) {
    return [
        rgb[0] / 255 * 65535,
        rgb[1] / 255 * 65535,
        rgb[2] / 255 * 65535
    ];
};
convert.gray.rgb = function(args) {
    return [
        args[0] / 100 * 255,
        args[0] / 100 * 255,
        args[0] / 100 * 255
    ];
};
convert.gray.hsl = function(args) {
    return [
        0,
        0,
        args[0]
    ];
};
convert.gray.hsv = convert.gray.hsl;
convert.gray.hwb = function(gray) {
    return [
        0,
        100,
        gray[0]
    ];
};
convert.gray.cmyk = function(gray) {
    return [
        0,
        0,
        0,
        gray[0]
    ];
};
convert.gray.lab = function(gray) {
    return [
        gray[0],
        0,
        0
    ];
};
convert.gray.hex = function(gray) {
    const val = Math.round(gray[0] / 100 * 255) & 0xFF;
    const integer = (val << 16) + (val << 8) + val;
    const string = integer.toString(16).toUpperCase();
    return '000000'.substring(string.length) + string;
};
convert.rgb.gray = function(rgb) {
    const val = (rgb[0] + rgb[1] + rgb[2]) / 3;
    return [
        val / 255 * 100
    ];
};
}}),
"[project]/node_modules/color-convert/route.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
const conversions = __turbopack_require__("[project]/node_modules/color-convert/conversions.js [app-client] (ecmascript)");
/*
	This function routes a model to all other models.

	all functions that are routed have a property `.conversion` attached
	to the returned synthetic function. This property is an array
	of strings, each with the steps in between the 'from' and 'to'
	color models (inclusive).

	conversions that are not possible simply are not included.
*/ function buildGraph() {
    const graph = {};
    // https://jsperf.com/object-keys-vs-for-in-with-closure/3
    const models = Object.keys(conversions);
    for(let len = models.length, i = 0; i < len; i++){
        graph[models[i]] = {
            // http://jsperf.com/1-vs-infinity
            // micro-opt, but this is simple.
            distance: -1,
            parent: null
        };
    }
    return graph;
}
// https://en.wikipedia.org/wiki/Breadth-first_search
function deriveBFS(fromModel) {
    const graph = buildGraph();
    const queue = [
        fromModel
    ]; // Unshift -> queue -> pop
    graph[fromModel].distance = 0;
    while(queue.length){
        const current = queue.pop();
        const adjacents = Object.keys(conversions[current]);
        for(let len = adjacents.length, i = 0; i < len; i++){
            const adjacent = adjacents[i];
            const node = graph[adjacent];
            if (node.distance === -1) {
                node.distance = graph[current].distance + 1;
                node.parent = current;
                queue.unshift(adjacent);
            }
        }
    }
    return graph;
}
function link(from, to) {
    return function(args) {
        return to(from(args));
    };
}
function wrapConversion(toModel, graph) {
    const path = [
        graph[toModel].parent,
        toModel
    ];
    let fn = conversions[graph[toModel].parent][toModel];
    let cur = graph[toModel].parent;
    while(graph[cur].parent){
        path.unshift(graph[cur].parent);
        fn = link(conversions[graph[cur].parent][cur], fn);
        cur = graph[cur].parent;
    }
    fn.conversion = path;
    return fn;
}
module.exports = function(fromModel) {
    const graph = deriveBFS(fromModel);
    const conversion = {};
    const models = Object.keys(graph);
    for(let len = models.length, i = 0; i < len; i++){
        const toModel = models[i];
        const node = graph[toModel];
        if (node.parent === null) {
            continue;
        }
        conversion[toModel] = wrapConversion(toModel, graph);
    }
    return conversion;
};
}}),
"[project]/node_modules/color-convert/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
const conversions = __turbopack_require__("[project]/node_modules/color-convert/conversions.js [app-client] (ecmascript)");
const route = __turbopack_require__("[project]/node_modules/color-convert/route.js [app-client] (ecmascript)");
const convert = {};
const models = Object.keys(conversions);
function wrapRaw(fn) {
    const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        return fn(args);
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
function wrapRounded(fn) {
    const wrappedFn = function(...args) {
        const arg0 = args[0];
        if (arg0 === undefined || arg0 === null) {
            return arg0;
        }
        if (arg0.length > 1) {
            args = arg0;
        }
        const result = fn(args);
        // We're assuming the result is an array here.
        // see notice in conversions.js; don't use box types
        // in conversion functions.
        if (typeof result === 'object') {
            for(let len = result.length, i = 0; i < len; i++){
                result[i] = Math.round(result[i]);
            }
        }
        return result;
    };
    // Preserve .conversion property if there is one
    if ('conversion' in fn) {
        wrappedFn.conversion = fn.conversion;
    }
    return wrappedFn;
}
models.forEach((fromModel)=>{
    convert[fromModel] = {};
    Object.defineProperty(convert[fromModel], 'channels', {
        value: conversions[fromModel].channels
    });
    Object.defineProperty(convert[fromModel], 'labels', {
        value: conversions[fromModel].labels
    });
    const routes = route(fromModel);
    const routeModels = Object.keys(routes);
    routeModels.forEach((toModel)=>{
        const fn = routes[toModel];
        convert[fromModel][toModel] = wrapRounded(fn);
        convert[fromModel][toModel].raw = wrapRaw(fn);
    });
});
module.exports = convert;
}}),
"[project]/node_modules/ansi-styles/index.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
'use strict';
const wrapAnsi16 = (fn, offset)=>(...args)=>{
        const code = fn(...args);
        return `\u001B[${code + offset}m`;
    };
const wrapAnsi256 = (fn, offset)=>(...args)=>{
        const code = fn(...args);
        return `\u001B[${38 + offset};5;${code}m`;
    };
const wrapAnsi16m = (fn, offset)=>(...args)=>{
        const rgb = fn(...args);
        return `\u001B[${38 + offset};2;${rgb[0]};${rgb[1]};${rgb[2]}m`;
    };
const ansi2ansi = (n)=>n;
const rgb2rgb = (r, g, b)=>[
        r,
        g,
        b
    ];
const setLazyProperty = (object, property, get)=>{
    Object.defineProperty(object, property, {
        get: ()=>{
            const value = get();
            Object.defineProperty(object, property, {
                value,
                enumerable: true,
                configurable: true
            });
            return value;
        },
        enumerable: true,
        configurable: true
    });
};
/** @type {typeof import('color-convert')} */ let colorConvert;
const makeDynamicStyles = (wrap, targetSpace, identity, isBackground)=>{
    if (colorConvert === undefined) {
        colorConvert = __turbopack_require__("[project]/node_modules/color-convert/index.js [app-client] (ecmascript)");
    }
    const offset = isBackground ? 10 : 0;
    const styles = {};
    for (const [sourceSpace, suite] of Object.entries(colorConvert)){
        const name = sourceSpace === 'ansi16' ? 'ansi' : sourceSpace;
        if (sourceSpace === targetSpace) {
            styles[name] = wrap(identity, offset);
        } else if (typeof suite === 'object') {
            styles[name] = wrap(suite[targetSpace], offset);
        }
    }
    return styles;
};
function assembleStyles() {
    const codes = new Map();
    const styles = {
        modifier: {
            reset: [
                0,
                0
            ],
            // 21 isn't widely supported and 22 does the same thing
            bold: [
                1,
                22
            ],
            dim: [
                2,
                22
            ],
            italic: [
                3,
                23
            ],
            underline: [
                4,
                24
            ],
            inverse: [
                7,
                27
            ],
            hidden: [
                8,
                28
            ],
            strikethrough: [
                9,
                29
            ]
        },
        color: {
            black: [
                30,
                39
            ],
            red: [
                31,
                39
            ],
            green: [
                32,
                39
            ],
            yellow: [
                33,
                39
            ],
            blue: [
                34,
                39
            ],
            magenta: [
                35,
                39
            ],
            cyan: [
                36,
                39
            ],
            white: [
                37,
                39
            ],
            // Bright color
            blackBright: [
                90,
                39
            ],
            redBright: [
                91,
                39
            ],
            greenBright: [
                92,
                39
            ],
            yellowBright: [
                93,
                39
            ],
            blueBright: [
                94,
                39
            ],
            magentaBright: [
                95,
                39
            ],
            cyanBright: [
                96,
                39
            ],
            whiteBright: [
                97,
                39
            ]
        },
        bgColor: {
            bgBlack: [
                40,
                49
            ],
            bgRed: [
                41,
                49
            ],
            bgGreen: [
                42,
                49
            ],
            bgYellow: [
                43,
                49
            ],
            bgBlue: [
                44,
                49
            ],
            bgMagenta: [
                45,
                49
            ],
            bgCyan: [
                46,
                49
            ],
            bgWhite: [
                47,
                49
            ],
            // Bright color
            bgBlackBright: [
                100,
                49
            ],
            bgRedBright: [
                101,
                49
            ],
            bgGreenBright: [
                102,
                49
            ],
            bgYellowBright: [
                103,
                49
            ],
            bgBlueBright: [
                104,
                49
            ],
            bgMagentaBright: [
                105,
                49
            ],
            bgCyanBright: [
                106,
                49
            ],
            bgWhiteBright: [
                107,
                49
            ]
        }
    };
    // Alias bright black as gray (and grey)
    styles.color.gray = styles.color.blackBright;
    styles.bgColor.bgGray = styles.bgColor.bgBlackBright;
    styles.color.grey = styles.color.blackBright;
    styles.bgColor.bgGrey = styles.bgColor.bgBlackBright;
    for (const [groupName, group] of Object.entries(styles)){
        for (const [styleName, style] of Object.entries(group)){
            styles[styleName] = {
                open: `\u001B[${style[0]}m`,
                close: `\u001B[${style[1]}m`
            };
            group[styleName] = styles[styleName];
            codes.set(style[0], style[1]);
        }
        Object.defineProperty(styles, groupName, {
            value: group,
            enumerable: false
        });
    }
    Object.defineProperty(styles, 'codes', {
        value: codes,
        enumerable: false
    });
    styles.color.close = '\u001B[39m';
    styles.bgColor.close = '\u001B[49m';
    setLazyProperty(styles.color, 'ansi', ()=>makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, false));
    setLazyProperty(styles.color, 'ansi256', ()=>makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, false));
    setLazyProperty(styles.color, 'ansi16m', ()=>makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, false));
    setLazyProperty(styles.bgColor, 'ansi', ()=>makeDynamicStyles(wrapAnsi16, 'ansi16', ansi2ansi, true));
    setLazyProperty(styles.bgColor, 'ansi256', ()=>makeDynamicStyles(wrapAnsi256, 'ansi256', ansi2ansi, true));
    setLazyProperty(styles.bgColor, 'ansi16m', ()=>makeDynamicStyles(wrapAnsi16m, 'rgb', rgb2rgb, true));
    return styles;
}
// Make the export immutable
Object.defineProperty(module, 'exports', {
    enumerable: true,
    get: assembleStyles
});
}}),
"[project]/node_modules/format-util/format.js [app-client] (ecmascript)": (function(__turbopack_context__) {

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, m: module, e: exports, t: require } = __turbopack_context__;
{
function format(fmt) {
    var re = /(%?)(%([jds]))/g, args = Array.prototype.slice.call(arguments, 1);
    if (args.length) {
        fmt = fmt.replace(re, function(match, escaped, ptn, flag) {
            var arg = args.shift();
            switch(flag){
                case 's':
                    arg = '' + arg;
                    break;
                case 'd':
                    arg = Number(arg);
                    break;
                case 'j':
                    arg = JSON.stringify(arg);
                    break;
            }
            if (!escaped) {
                return arg;
            }
            args.unshift(arg);
            return match;
        });
    }
    // arguments remain after formatting
    if (args.length) {
        fmt += ' ' + args.join(' ');
    }
    // update escaped %% values
    fmt = fmt.replace(/%{2,2}/g, '%');
    return '' + fmt;
}
module.exports = format;
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "MemoryLoggerTransport": (()=>MemoryLoggerTransport)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-client] (ecmascript)");
;
;
class MemoryLoggerTransport {
    constructor(){
        this.messages = [];
        this.messageStrings = [];
    }
    clear() {
        this.messages.length = 0;
        this.messageStrings.length = 0;
    }
    write(message) {
        this.messages.push(message);
        this.messageStrings.push(message.message);
    }
    supportsColor() {
        return false;
    }
}
MemoryLoggerTransport.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩLogMessage"],
    'messages',
    function() {
        return [];
    },
    'messageStrings',
    function() {
        return [];
    },
    'clear',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩLogMessage"],
    'message',
    'write',
    'supportsColor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩLoggerTransport"],
    'MemoryLoggerTransport',
    'n!F3">#&F3$>%P$0&Pn\'2("0)P"0*5n+x"w,'
]; //# sourceMappingURL=memory-logger.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "ColorFormatter": (()=>ColorFormatter),
    "ConsoleLogger": (()=>ConsoleLogger),
    "ConsoleTransport": (()=>ConsoleTransport),
    "DefaultFormatter": (()=>DefaultFormatter),
    "JSONTransport": (()=>JSONTransport),
    "LogLevelFormatter": (()=>LogLevelFormatter),
    "Logger": (()=>Logger),
    "LoggerLevel": (()=>LoggerLevel),
    "MemoryLogger": (()=>MemoryLogger),
    "RemoveColorFormatter": (()=>RemoveColorFormatter),
    "ScopeFormatter": (()=>ScopeFormatter),
    "ScopedLogger": (()=>ScopedLogger),
    "TimestampFormatter": (()=>TimestampFormatter),
    "__ΩLogData": (()=>__ΩLogData),
    "__ΩLogMessage": (()=>__ΩLogMessage),
    "__ΩLoggerFormatter": (()=>__ΩLoggerFormatter),
    "__ΩLoggerInterface": (()=>__ΩLoggerInterface),
    "__ΩLoggerLevel": (()=>__ΩLoggerLevel),
    "__ΩLoggerTransport": (()=>__ΩLoggerTransport),
    "__ΩScopedLogger": (()=>__ΩScopedLogger)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/ansi-styles/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$format$2d$util$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/format-util/format.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
const __ΩLoggerLevel = [
    'none',
    'alert',
    'error',
    'warning',
    'log',
    'info',
    'debug',
    'LoggerLevel',
    'PC!C"C#C$C%C&C\'Bw('
];
;
var LoggerLevel;
(function(LoggerLevel) {
    LoggerLevel[LoggerLevel["none"] = 0] = "none";
    LoggerLevel[LoggerLevel["alert"] = 1] = "alert";
    LoggerLevel[LoggerLevel["error"] = 2] = "error";
    LoggerLevel[LoggerLevel["warning"] = 3] = "warning";
    LoggerLevel[LoggerLevel["log"] = 4] = "log";
    LoggerLevel[LoggerLevel["info"] = 5] = "info";
    LoggerLevel[LoggerLevel["debug"] = 6] = "debug";
})(LoggerLevel || (LoggerLevel = {}));
const __ΩLogData = [
    'LogData',
    'P&"LMw!y'
];
;
const __ΩLogMessage = [
    'message',
    'rawMessage',
    'date',
    ()=>__ΩLoggerLevel,
    'level',
    'scope',
    ()=>__ΩLogData,
    'data',
    'LogMessage',
    'P&4!&4"T4#n$4%&4&n\'4(Mw)y'
];
;
class ConsoleTransport {
    constructor(withColors = true){
        this.withColors = withColors;
    }
    write(message) {
        if (message.level === LoggerLevel.error) {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stderr.write(message.message + '\n');
        } else {
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stdout.write(message.message + '\n');
        }
    }
    supportsColor() {
        return this.withColors;
    }
}
ConsoleTransport.__type = [
    'withColors',
    ()=>true,
    'constructor',
    ()=>__ΩLogMessage,
    'message',
    'write',
    'supportsColor',
    ()=>__ΩLoggerTransport,
    'ConsoleTransport',
    'P)2!<>""0#Pn$2%$0&P"0\'5n(x"w)'
];
class JSONTransport {
    constructor(){
        this.out = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stdout;
    }
    write(message) {
        this.out.write(JSON.stringify({
            message: message.message,
            level: message.level,
            date: message.date,
            scope: message.scope,
            data: message.data
        }) + '\n');
    }
    supportsColor() {
        return false;
    }
}
JSONTransport.__type = [
    'v',
    '',
    'write',
    'out',
    function() {
        return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stdout;
    },
    ()=>__ΩLogMessage,
    'message',
    'supportsColor',
    ()=>__ΩLoggerTransport,
    'JSONTransport',
    'PP&2!"/"4#M3$>%Pn&2\'"0#P"0(5n)x"w*'
];
const __ΩLoggerTransport = [
    ()=>__ΩLogMessage,
    'message',
    'write',
    'supportsColor',
    'LoggerTransport',
    'PPn!2"$1#P)1$Mw%y'
];
;
const __ΩLoggerFormatter = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    'LoggerFormatter',
    'PPn!2"$1#Mw$y'
];
;
class ColorFormatter {
    format(message) {
        if (message.level === LoggerLevel.error || message.level === LoggerLevel.alert) {
            message.message = `<red>${message.message}</red>`;
        }
        if (message.message.includes('<')) {
            message.message = message.message.replace(/<(\/)?([a-zA-Z]+)>/g, __assignType(function(a, end, color) {
                if (!__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"][color]) return a;
                if (end === '/') return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"][color].close;
                return __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$ansi$2d$styles$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"][color].open;
            }, [
                'a',
                'end',
                'color',
                '',
                'P"2!"2""2#"/$'
            ]));
        }
    }
}
ColorFormatter.colors = [
    'black',
    'red',
    'green',
    'yellow',
    'blue',
    'cyan',
    'magenta',
    'white',
    'gray',
    'grey'
];
ColorFormatter.__type = [
    'colors',
    function() {
        return [
            'black',
            'red',
            'green',
            'yellow',
            'blue',
            'cyan',
            'magenta',
            'white',
            'gray',
            'grey'
        ];
    },
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'ColorFormatter',
    '&F3!s>"Pn#2$$0%5n&x"w\''
];
class RemoveColorFormatter {
    format(message) {
        if (message.message.includes('<')) {
            message.message = message.message.replace(/<(\/)?([a-zA-Z]+)>/g, __assignType(function(a, end, color) {
                return '';
            }, [
                'a',
                'end',
                'color',
                '',
                'P"2!"2""2#"/$'
            ]));
        }
    }
}
RemoveColorFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'RemoveColorFormatter',
    'Pn!2"$0#5n$x"w%'
];
class DefaultFormatter {
    constructor(){
        this.formatters = [
            new ScopeFormatter(),
            new LogLevelFormatter(),
            new TimestampFormatter()
        ];
    }
    format(message) {
        for (const formatter of this.formatters){
            formatter.format(message);
        }
    }
}
DefaultFormatter.__type = [
    ()=>__ΩLoggerFormatter,
    'formatters',
    function() {
        return [
            new ScopeFormatter(),
            new LogLevelFormatter(),
            new TimestampFormatter()
        ];
    },
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'DefaultFormatter',
    'n!F3">#Pn$2%$0&5n\'x"w('
];
class TimestampFormatter {
    format(message) {
        message.message = `<yellow>${new Date().toISOString()}</yellow> ${message.message}`;
    }
}
TimestampFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'TimestampFormatter',
    'Pn!2"$0#5n$x"w%'
];
class LogLevelFormatter {
    format(message) {
        message.message = `[${String(LoggerLevel[message.level]).toUpperCase()}] ${message.message}`;
    }
}
LogLevelFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'LogLevelFormatter',
    'Pn!2"$0#5n$x"w%'
];
class ScopeFormatter {
    format(message) {
        if (!message.scope) return;
        message.message = `(<yellow>${message.scope}</yellow>) ${message.message}`;
    }
}
ScopeFormatter.__type = [
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerFormatter,
    'ScopeFormatter',
    'Pn!2"$0#5n$x"w%'
];
const __ΩLoggerInterface = [
    ()=>__ΩLoggerLevel,
    'level',
    'name',
    0,
    'scoped',
    ()=>__ΩLogData,
    'data',
    0,
    ()=>__ΩLoggerLevel,
    'is',
    'message',
    'alert',
    'error',
    'warn',
    'log',
    'info',
    'debug',
    'LoggerInterface',
    'Pn!4"P&2#n$1%Pn&2\'n(1\'Pn)2")1*P"@2+$1,P"@2+$1-P"@2+$1.P"@2+$1/P"@2+$10P"@2+$11Mw2y'
];
;
class Logger {
    constructor(transporter = [], formatter = [], scope = ''){
        this.transporter = transporter;
        this.formatter = formatter;
        this.scope = scope;
        this.colorFormatter = new ColorFormatter;
        this.removeColorFormatter = new RemoveColorFormatter;
        /**
         * Setting a log level means only logs below or equal to this level will be handled.
         */ this.level = LoggerLevel.info;
        this.scopedLevel = {};
        this.scopes = {};
    }
    data(data) {
        this.logData = data;
        return this;
    }
    scoped(name) {
        var _a;
        const scopedLogger = (_a = this.scopes)[name] || (_a[name] = new this.constructor(this.transporter, this.formatter, name));
        scopedLogger.level = this.level;
        return scopedLogger;
    }
    addTransport(transport) {
        this.transporter.push(transport);
    }
    setTransport(transport) {
        this.transporter = transport;
    }
    removeTransport(transport) {
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.transporter, transport);
    }
    hasFormatter(formatterType) {
        for (const formatter of this.formatter){
            if (formatter instanceof formatterType) return true;
        }
        return false;
    }
    hasFormatters() {
        return this.formatter.length > 0;
    }
    addFormatter(formatter) {
        this.formatter.push(formatter);
    }
    setFormatter(formatter) {
        this.formatter = formatter;
    }
    format(message) {
        for (const formatter of this.formatter){
            formatter.format(message);
        }
    }
    is(level) {
        return level <= this.level;
    }
    send(messages, level, data = {}) {
        if (!this.is(level)) return;
        if (this.logData) {
            data = this.logData;
            this.logData = undefined;
        }
        const rawMessage = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$format$2d$util$2f$format$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"])(...messages);
        const message = {
            message: rawMessage,
            rawMessage,
            level,
            date: new Date,
            scope: this.scope,
            data
        };
        this.format(message);
        for (const transport of this.transporter){
            const formattedMessage = {
                ...message
            };
            if (transport.supportsColor()) {
                this.colorFormatter.format(formattedMessage);
                transport.write(formattedMessage);
            } else {
                this.removeColorFormatter.format(formattedMessage);
                transport.write(formattedMessage);
            }
        }
    }
    alert(...message) {
        this.send(message, LoggerLevel.alert);
    }
    error(...message) {
        this.send(message, LoggerLevel.error);
    }
    warn(...message) {
        this.send(message, LoggerLevel.warning);
    }
    log(...message) {
        this.send(message, LoggerLevel.log);
    }
    info(...message) {
        this.send(message, LoggerLevel.info);
    }
    debug(...message) {
        this.send(message, LoggerLevel.debug);
    }
}
Logger.__type = [
    ()=>__ΩLoggerLevel,
    'level',
    function() {
        return LoggerLevel.info;
    },
    ()=>__ΩLogData,
    'logData',
    ()=>__ΩLoggerLevel,
    'scopedLevel',
    function() {
        return {};
    },
    ()=>Logger,
    'scopes',
    function() {
        return {};
    },
    ()=>__ΩLoggerTransport,
    'transporter',
    ()=>[],
    ()=>__ΩLoggerFormatter,
    'formatter',
    ()=>[],
    'scope',
    ()=>"",
    'constructor',
    ()=>__ΩLogData,
    'data',
    'name',
    ()=>Logger,
    'scoped',
    ()=>__ΩLoggerTransport,
    'transport',
    'addTransport',
    ()=>__ΩLoggerTransport,
    'setTransport',
    ()=>__ΩLoggerTransport,
    'removeTransport',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__ΩLoggerFormatter,
    'formatterType',
    'hasFormatter',
    'hasFormatters',
    ()=>__ΩLoggerFormatter,
    'addFormatter',
    ()=>__ΩLoggerFormatter,
    'setFormatter',
    ()=>__ΩLogMessage,
    'message',
    'format',
    ()=>__ΩLoggerLevel,
    'is',
    'messages',
    ()=>__ΩLoggerLevel,
    ()=>__ΩLogData,
    ()=>({}),
    'send',
    'alert',
    'error',
    'warn',
    'log',
    'info',
    'debug',
    ()=>__ΩLoggerInterface,
    'Logger',
    'n!3">#n$3%8<P&n&LM3\'>(P&P7)LM3*<>+Pn,F2-<>.n/F20<>1&22<>3"04Pn526!06P&27P7809Pn:2;"0<Pn=F2;"0>Pn?2;"0@PnBoA"2C"0DP)0EPnF20"0GPnHF20"0IPnJ2K$0L<PnM2")0NP"F2OnP2"nQ26>R"0S<P"@2K"0TP"@2K"0UP"@2K"0VP"@2K"0WP"@2K"0XP"@2K"0Y5nZx"w['
];
class ConsoleLogger extends Logger {
    constructor(){
        super([
            new ConsoleTransport
        ]);
    }
}
ConsoleLogger.__type = [
    ()=>Logger,
    'constructor',
    'ConsoleLogger',
    'P7!P"0"5w#'
];
class MemoryLogger extends Logger {
    constructor(){
        super([]);
        this.memory = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["MemoryLoggerTransport"]();
        this.transporter.push(this.memory);
    }
    getOutput() {
        return this.memory.messageStrings.join('\n');
    }
    clear() {
        this.memory.messageStrings = [];
        this.memory.messages = [];
    }
}
MemoryLogger.__type = [
    ()=>Logger,
    'constructor',
    'getOutput',
    'clear',
    'MemoryLogger',
    'P7!P"0"P&0#P"0$5w%'
];
const __ΩScopedLogger = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩInject"],
    ()=>__ΩLoggerInterface,
    "scoped-logger",
    'ScopedLogger',
    'n".#o!#w$y'
];
;
const ScopedLogger = {
    provide: 'scoped-logger',
    transient: true,
    useFactory: __assignType((target, logger = new Logger())=>{
        var _a, _b;
        return logger.scoped((_b = (_a = target.token) === null || _a === void 0 ? void 0 : _a.name) !== null && _b !== void 0 ? _b : String(target.token));
    }, [
        ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TransientInjectionTarget"],
        'target',
        ()=>Logger,
        'logger',
        ()=>new Logger(),
        '',
        'PP7!2"P7#2$>%"/&'
    ])
}; //# sourceMappingURL=logger.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$memory$2d$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/memory-logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
"[project]/node_modules/pybridge/dist/esm/src/config.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "PyBridgeConfig": (()=>PyBridgeConfig)
});
class PyBridgeConfig {
    constructor(){
        /**
         * The path to the python executable.
         */ this.python = 'python3';
        this.cwd = '';
    }
}
PyBridgeConfig.__type = [
    'python',
    function() {
        return 'python3';
    },
    'cwd',
    function() {
        return '';
    },
    'PyBridgeConfig',
    '&3!>"&3#>$5w%'
];
;
 //# sourceMappingURL=config.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "Controller": (()=>Controller),
    "PyBridge": (()=>PyBridge),
    "__ΩRemoteController": (()=>__ΩRemoteController)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
(()=>{
    const e = new Error("Cannot find module 'child_process'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$path$2d$browserify$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/path-browserify/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
(()=>{
    const e = new Error("Cannot find module 'rxjs'");
    e.code = 'MODULE_NOT_FOUND';
    throw e;
})();
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/utils.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/build/polyfills/process.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/next/dist/compiled/buffer/index.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/serializer-facade.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/logger/dist/esm/src/logger.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
const __ΩParameters = [
    'T',
    'args',
    '',
    'Parameters',
    'l>e"!R!RPde#!Ph"!@2""/#qk#\'QRb!Pde"!p)w$y'
];
const __ΩReturnType = [
    'T',
    'args',
    '',
    'ReturnType',
    'l>e"!R"RPde#!P"@2"h"!/#qk#\'QRb!Pde"!p)w$y'
];
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
;
;
const __ΩRpcMessage = [
    'id',
    true,
    'ready',
    'result',
    'yield',
    'error',
    'RpcMessage',
    'P\'4!."4#8"4$8"4%8&4&8Mw\'y'
];
function fromCode(code) {
    return `
import sys
import types

module = types.ModuleType('my_module')
my_code = ${JSON.stringify(code)}
exec(my_code, module.__dict__)
`;
}
fromCode.__type = [
    'code',
    'fromCode',
    'P&2!&/"'
];
const hook = `
import sys
import traceback
import json
from typing import Generator

def debug(*args):
    print(*args, file=sys.stderr, flush=True)

# redirect all output to stderr
orig_stdout = sys.stdout
sys.stdout = sys.stderr

{{__load__}}

try:
    for line in sys.stdin:
        p = None
        try:
            # debug("got: ", line)
            p = json.loads(line)
            result = getattr(module, p['method'])(*p['args'])
            # if result is a generator, iterate over it
            if isinstance(result, Generator):
                for r in result:
                    message = {'id': p['id'], 'yield': r}
                    print(json.dumps(message) + '\\n', file=orig_stdout, flush=True)
                print(json.dumps({'id': p['id']}) + '\\n', file=orig_stdout, flush=True)
            else:
                print(json.dumps({'id': p['id'], 'yield': result}) + '\\n', file=orig_stdout, flush=True)
                print(json.dumps({'id': p['id']}) + '\\n', file=orig_stdout, flush=True)
        except Exception as e:
            if p is not None:
                message = {'id': p['id'], 'error': traceback.format_exception(*sys.exc_info())}
                print(json.dumps(message) + '\\n', file=orig_stdout, flush=True)
            print("Failed nlp method\\n", file=sys.stderr, flush=True)
            traceback.print_exception(*sys.exc_info(), file=sys.stderr)
except KeyboardInterrupt:
    sys.exit(0)
`;
function isSubjectType(type) {
    return Boolean(type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && type.classType === Subject && type.typeArguments);
}
isSubjectType.__type = [
    'Type',
    'type',
    'isSubjectType',
    'P"w!2"!/#'
];
class Controller {
    constructor(moduleNameOrCode, config, logger){
        this.moduleNameOrCode = moduleNameOrCode;
        this.config = config;
        this.logger = logger;
        this.messageId = 0;
        this.subscribers = {};
    }
    ensureProcess() {
        if (this.process) return this.process;
        let python = this.config.python;
        if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$path$2d$browserify$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isAbsolute"])(python)) {
            const venvBin = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$utils$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findParentPath"])('venv/bin');
            if (venvBin) {
                python = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$path$2d$browserify$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["join"])(venvBin, python);
            }
        }
        let cwd = this.config.cwd;
        this.logger.log(`Start python via ${python} in ${cwd} for ${this.moduleNameOrCode.replace(/\n/g, '\\n').substring(0, 50)}`);
        let load = this.moduleNameOrCode.includes(' ') ? fromCode(this.moduleNameOrCode) : `import ${this.moduleNameOrCode} as module;`;
        if (this.moduleNameOrCode.endsWith('.py')) {
            load = `import sys; sys.path.append('${cwd}'); import ${this.moduleNameOrCode.replace('.py', '')} as module;`;
        }
        const code = hook.replace('{{__load__}}', load);
        // console.log(code);
        this.process = spawn(python, [
            '-c',
            code
        ], {
            stdio: [
                'pipe',
                'pipe',
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].stderr
            ],
            cwd: cwd
        });
        const onExit = ()=>{
            var _a;
            (_a = this.process) === null || _a === void 0 ? void 0 : _a.kill();
        };
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].on('exit', onExit);
        this.process.on('close', ()=>{
            this.process = undefined;
            __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$build$2f$polyfills$2f$process$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["default"].off('exit', onExit);
        });
        const buffer = [];
        const read = __assignType((data)=>{
            buffer.push(data);
            // console.log('read', data.includes('\n'), Buffer.concat(buffer).toString('utf8'));
            if (data.includes('\n'.charCodeAt(0))) {
                const messages = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$next$2f$dist$2f$compiled$2f$buffer$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Buffer"].concat(buffer).toString('utf8').trim().split('\n');
                for (const message of messages){
                    if (!message.startsWith('{"')) continue;
                    try {
                        const res = JSON.parse(message);
                        const messageId = res.id;
                        if (this.subscribers[messageId]) {
                            this.subscribers[messageId](res);
                        }
                    } catch (error) {
                        console.warn('Could not parse: ' + message);
                    }
                }
                buffer.length = 0;
            }
        }, [
            'data',
            '',
            'P!2!"/"'
        ]);
        this.process.stdout.on('data', read);
        return this.process;
    }
    send(method, args, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.send.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.send.Ω = undefined;
        const pythonProcess = this.ensureProcess();
        const messageId = this.messageId++;
        type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type);
        if (isSubjectType(type)) {
            type = type.typeArguments[0];
        }
        const subject = (Subject.Ω = [
            [
                '"'
            ]
        ], new Subject());
        const deserializer = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$serializer$2d$facade$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["deserializeFunction"])(undefined, undefined, type);
        this.subscribers[messageId] = __assignType((data)=>{
            try {
                if (data.ready) {} else if (data.yield) {
                    const v = deserializer(data.yield);
                    subject.next(v);
                } else if (data.error) {
                    delete this.subscribers[messageId];
                    subject.error(new Error(data.error));
                } else {
                    delete this.subscribers[messageId];
                    subject.complete();
                }
            } catch (_a) {}
        }, [
            'data',
            '',
            'P"2!"/"'
        ]);
        pythonProcess.stdin.write(JSON.stringify({
            id: messageId,
            method,
            args
        }) + '\n');
        return subject;
    }
}
Controller.__type = [
    'process',
    'messageId',
    function() {
        return 0;
    },
    ()=>__ΩRpcMessage,
    'data',
    '',
    'subscribers',
    function() {
        return {};
    },
    'moduleNameOrCode',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"],
    'logger',
    'constructor',
    'ensureProcess',
    'method',
    'args',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    ()=>Subject,
    'send',
    'Controller',
    '!3!8\'3">#P\'Pn$2%$/&LM3\'>(P&2);P7*2+;P7,2-;"0.P!0/P&20"F21"o2"238P"74055w6'
];
;
const __ΩPromisifyFn = [
    'T',
    ()=>__ΩParameters,
    'args',
    ()=>__ΩReturnType,
    ()=>Subject,
    '',
    'PromisifyFn',
    'lUe$!Re$!Re$!`RPe#!"`qk\'+QRPde%!p0RPde#!Ph"!7%qk#<QRb!Pe"!o""@2#Pde#!o$"pD/&w\'y'
];
const __ΩRemoteController = [
    'T',
    'args',
    '',
    ()=>__ΩPromisifyFn,
    ()=>Controller,
    'RemoteController',
    'lFe&!e$!fo$"R!RPe%!e#!fP"@2""/#qk#.QRb!PPde#!gN0!P7%Kw&y'
];
;
class PyBridge {
    constructor(config, logger = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"]([
        new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConsoleTransport"]()
    ])){
        this.config = config;
        this.logger = logger;
        this.controllers = {};
    }
    close() {
        var _a;
        for (const controller of Object.values(this.controllers)){
            (_a = controller.process) === null || _a === void 0 ? void 0 : _a.kill();
        }
    }
    controller(moduleName, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.controller.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.controller.Ω = undefined;
        if (this.controllers[moduleName]) return this.controllers[moduleName];
        const controller = new Controller(moduleName, this.config, this.logger);
        if (!type) throw new Error('No controller type T given');
        const reflectionClass = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionClass"].from((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type));
        return this.controllers[moduleName] = new Proxy({}, {
            get: __assignType((target, name)=>{
                if (name === 'process') return controller.process;
                return __assignType((...args)=>{
                    const returnType = reflectionClass.getMethod(name).getReturnType();
                    const subject = controller.send(name, args, returnType);
                    return isSubjectType(returnType) ? subject : subject.toPromise();
                }, [
                    'args',
                    '',
                    'P"@2!"/"'
                ]);
            }, [
                'target',
                'name',
                '',
                'P"2!&2""/#'
            ])
        });
    }
}
PyBridge.__type = [
    ()=>__ΩRemoteController,
    'controllers',
    function() {
        return {};
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    'config',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"],
    'logger',
    ()=>new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Logger"]([
            new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$logger$2f$dist$2f$esm$2f$src$2f$logger$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConsoleTransport"]()
        ]),
    'constructor',
    'close',
    'moduleName',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    ()=>__ΩRemoteController,
    'controller',
    'PyBridge',
    'P&"o!"LM3"<>#PP7$2%<P7&2\'<>("0)P"0*P&2+"o,"2-8"o."0/5w0'
];
;
 //# sourceMappingURL=bridge.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/src/module.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "PyBridgeModule": (()=>PyBridgeModule)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/app.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/app/dist/esm/src/module.js [app-client] (ecmascript)");
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
class PyBridgeModule extends (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createModule"])({
    config: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
    providers: [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridge"]
    ],
    exports: [
        __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridge"]
    ]
}) {
    process() {
        this.addListener(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$app$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["onAppShutdown"].listen(__assignType((event, python)=>{
            // disconnect all open python processes when app shuts down
            python.close();
        }, [
            'event',
            ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridge"],
            'python',
            '',
            'P"2!P7"2#"/$'
        ])));
    }
}
PyBridgeModule.__type = [
    ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$app$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["createModule"])({
            config: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridgeConfig"],
            providers: [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridge"]
            ],
            exports: [
                __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["PyBridge"]
            ]
        }),
    'process',
    'PyBridgeModule',
    'P7!P"0"5w#'
];
;
 //# sourceMappingURL=module.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/pybridge/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$bridge$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/bridge.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$config$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/config.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/src/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f$pybridge$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/pybridge/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_9798c3._.js.map