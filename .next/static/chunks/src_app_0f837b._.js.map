{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/filters/searchbar.tsx"],"sourcesContent":["\"use client\"\r\n\r\nimport { useEffect, useState, FormEvent } from \"react\";\r\n\r\nfunction useTypeIn() {\r\n    \r\n    const [text, setText] = useState([]);\r\n    const [error, setError] = useState<Error | null>(null);\r\n\r\n    /*useEffect(() => {\r\n        (async () => {\r\n\r\n        }\r\n        \r\n        )\r\n    })*/\r\n\r\n    return {text, setText, error,}\r\n}\r\n \r\nexport default function SearchBar() {\r\n\r\n  const { text, setText, error } = useTypeIn()\r\n  const contentClass = [text !== \"\" && \"visible\", \"content\"].join(\" \")\r\n\r\n  function onSubmit(e: FormEvent)\r\n  {\r\n    e.preventDefault()\r\n    console.log(\"sent\")\r\n  }\r\n\r\n  return (\r\n    <div className=\"justify-self-center rounded-sm w-42\">\r\n      <form onSubmit={onSubmit}>\r\n        <input \r\n          type=\"text\" \r\n          placeholder=\"search books or authors\"\r\n          className=\"search-bar__input\"\r\n          onChange={e => setText(e.target.value)} \r\n          value={text} \r\n        />\r\n        <button type=\"submit\" className=\"justify-self-center background-slate-300 border-solid border border-slate-400\">Search</button>\r\n      </form>\r\n    </div>\r\n  )\r\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIA,SAAS;;IAEL,MAAM,CAAC,MAAM,QAAQ,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,EAAE;IACnC,MAAM,CAAC,OAAO,SAAS,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAgB;IAEjD;;;;;;MAME,GAEF,OAAO;QAAC;QAAM;QAAS;IAAM;AACjC;GAdS;AAgBM,SAAS;;IAEtB,MAAM,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG;IACjC,MAAM,eAAe;QAAC,SAAS,MAAM;QAAW;KAAU,CAAC,IAAI,CAAC;IAEhE,SAAS,SAAS,CAAY;QAE5B,EAAE,cAAc;QAChB,QAAQ,GAAG,CAAC;IACd;IAEA,qBACE,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YAAK,UAAU;;8BACd,6LAAC;oBACC,MAAK;oBACL,aAAY;oBACZ,WAAU;oBACV,UAAU,CAAA,IAAK,QAAQ,EAAE,MAAM,CAAC,KAAK;oBACrC,OAAO;;;;;;8BAET,6LAAC;oBAAO,MAAK;oBAAS,WAAU;8BAAgF;;;;;;;;;;;;;;;;;AAIxH;IAzBwB;;QAEW;;;KAFX"}},
    {"offset": {"line": 92, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 98, "column": 0}, "map": {"version":3,"sources":["turbopack://[project]/src/app/components/tagTable.tsx"],"sourcesContent":["\"use client\";\r\n\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nexport default function TagTable() {\r\n  // State to hold the list of sub-tags to display as checkboxes\r\n  const [subTags, setSubTags] = useState<string[]>([]);\r\n  \r\n  // State to track selected tags across categories\r\n  const [selectedTags, setSelectedTags] = useState<string[]>([]);\r\n  const [topics, setTopics] = useState<any[]>([]);\r\n\r\n\r\n  // Function to handle the subTag_View logic and update the displayed sub-tags\r\n  const subTag_View = (selectedValue: \"1\" | \"2\" | \"3\") => {\r\n    const tagOptions = {\r\n      \"1\": [\"Art\", \"Language\", \"Music\"],         // culture sub-tags\r\n      \"2\": [\"Community\", \"Events\", \"Networking\"], // social sub-tags\r\n      \"3\": [\"Parenting\", \"Education\", \"Health\"],  // family sub-tags\r\n    };\r\n\r\n    const newSubTags = tagOptions[selectedValue] || [];\r\n    setSubTags(newSubTags);\r\n  };\r\n\r\n  // Handle change event on the <select> element\r\n  const handleSelectChange = (e: React.ChangeEvent<HTMLSelectElement>) => {\r\n    const selectedValue = e.target.value as \"1\" | \"2\" | \"3\";\r\n    subTag_View(selectedValue);\r\n  };\r\n\r\n  // Handle checkbox change for each sub-tag\r\n  const handleCheckboxChange = (tag: string) => {\r\n    setSelectedTags((prevSelectedTags) => {\r\n      // Add the tag if itâ€™s not already selected, otherwise remove it\r\n      if (prevSelectedTags.includes(tag)) {\r\n        return prevSelectedTags.filter((t) => t !== tag);\r\n      } else {\r\n        return [...prevSelectedTags, tag];\r\n      }\r\n    });\r\n  };\r\n\r\n  //=====\r\n  useEffect(() => {\r\n    const fetchTopics = async () => {\r\n      try {\r\n        // Call the API endpoint to get the list of topics\r\n        const response = await fetch('/api/getTopics');\r\n        if (response.ok) {\r\n          const data = await response.json();  // Parse the JSON response\r\n          setTopics(data);  // Store topics in the state\r\n        } else {\r\n          console.error('Error fetching topics');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching topics:', error);\r\n      }\r\n    };\r\n\r\n    fetchTopics();\r\n  }, []);\r\n  //=====\r\n\r\n  return (\r\n    <div>\r\n      {/* Dropdown to select the main category */}\r\n      <select\r\n        className=\"form-select\"\r\n        aria-label=\"Default select example\"\r\n        onChange={handleSelectChange}\r\n      >\r\n        <option value=\"0\">Select a tag</option>\r\n        <option value=\"1\">culture</option>\r\n        <option value=\"2\">social</option>\r\n        <option value=\"3\">family</option>\r\n      </select>\r\n\r\n      {/* Render the list of sub-tags with checkboxes */}\r\n      {subTags.length > 0 && (\r\n        <div>\r\n          {subTags.map((tag, index) => (\r\n            <div key={index}>\r\n              <input\r\n                type=\"checkbox\"\r\n                id={tag}\r\n                name={tag}\r\n                value={tag}\r\n                checked={selectedTags.includes(tag)}\r\n                onChange={() => handleCheckboxChange(tag)}\r\n              />\r\n              <label htmlFor={tag}>{tag}</label>\r\n            </div>\r\n          ))}\r\n        </div>\r\n      )}\r\n\r\n      {/* Display selected tags */}\r\n      {selectedTags.length > 0 && (\r\n        <div>\r\n          <h3>Selected Tags:</h3>\r\n          <ul>\r\n            {selectedTags.map((tag, index) => (\r\n              <li key={index}>{tag}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}"],"names":[],"mappings":";;;;AAEA;;;AAFA;;AAIe,SAAS;;IACtB,8DAA8D;IAC9D,MAAM,CAAC,SAAS,WAAW,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAEnD,iDAAiD;IACjD,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAY,EAAE;IAC7D,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAS,EAAE;IAG9C,6EAA6E;IAC7E,MAAM,cAAc,CAAC;QACnB,MAAM,aAAa;YACjB,KAAK;gBAAC;gBAAO;gBAAY;aAAQ;YACjC,KAAK;gBAAC;gBAAa;gBAAU;aAAa;YAC1C,KAAK;gBAAC;gBAAa;gBAAa;aAAS;QAC3C;QAEA,MAAM,aAAa,UAAU,CAAC,cAAc,IAAI,EAAE;QAClD,WAAW;IACb;IAEA,8CAA8C;IAC9C,MAAM,qBAAqB,CAAC;QAC1B,MAAM,gBAAgB,EAAE,MAAM,CAAC,KAAK;QACpC,YAAY;IACd;IAEA,0CAA0C;IAC1C,MAAM,uBAAuB,CAAC;QAC5B,gBAAgB,CAAC;YACf,gEAAgE;YAChE,IAAI,iBAAiB,QAAQ,CAAC,MAAM;gBAClC,OAAO,iBAAiB,MAAM,CAAC,CAAC,IAAM,MAAM;YAC9C,OAAO;gBACL,OAAO;uBAAI;oBAAkB;iBAAI;YACnC;QACF;IACF;IAEA,OAAO;IACP,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD,EAAE;QACR,MAAM,cAAc;YAClB,IAAI;gBACF,kDAAkD;gBAClD,MAAM,WAAW,MAAM,MAAM;gBAC7B,IAAI,SAAS,EAAE,EAAE;oBACf,MAAM,OAAO,MAAM,SAAS,IAAI,IAAK,0BAA0B;oBAC/D,UAAU,OAAQ,4BAA4B;gBAChD,OAAO;oBACL,QAAQ,KAAK,CAAC;gBAChB;YACF,EAAE,OAAO,OAAO;gBACd,QAAQ,KAAK,CAAC,0BAA0B;YAC1C;QACF;QAEA;IACF,GAAG,EAAE;IACL,OAAO;IAEP,qBACE,6LAAC;;0BAEC,6LAAC;gBACC,WAAU;gBACV,cAAW;gBACX,UAAU;;kCAEV,6LAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,6LAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,6LAAC;wBAAO,OAAM;kCAAI;;;;;;kCAClB,6LAAC;wBAAO,OAAM;kCAAI;;;;;;;;;;;;YAInB,QAAQ,MAAM,GAAG,mBAChB,6LAAC;0BACE,QAAQ,GAAG,CAAC,CAAC,KAAK,sBACjB,6LAAC;;0CACC,6LAAC;gCACC,MAAK;gCACL,IAAI;gCACJ,MAAM;gCACN,OAAO;gCACP,SAAS,aAAa,QAAQ,CAAC;gCAC/B,UAAU,IAAM,qBAAqB;;;;;;0CAEvC,6LAAC;gCAAM,SAAS;0CAAM;;;;;;;uBATd;;;;;;;;;;YAgBf,aAAa,MAAM,GAAG,mBACrB,6LAAC;;kCACC,6LAAC;kCAAG;;;;;;kCACJ,6LAAC;kCACE,aAAa,GAAG,CAAC,CAAC,KAAK,sBACtB,6LAAC;0CAAgB;+BAAR;;;;;;;;;;;;;;;;;;;;;;AAOvB;GA1GwB;KAAA"}},
    {"offset": {"line": 295, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}