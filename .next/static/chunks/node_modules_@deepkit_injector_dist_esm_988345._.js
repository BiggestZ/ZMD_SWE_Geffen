(globalThis.TURBOPACK = globalThis.TURBOPACK || []).push(["static/chunks/node_modules_@deepkit_injector_dist_esm_988345._.js", {

"[project]/node_modules/@deepkit/injector/dist/esm/src/provider.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "Tag": (()=>Tag),
    "TagProvider": (()=>TagProvider),
    "TagRegistry": (()=>TagRegistry),
    "__ΩClassProvider": (()=>__ΩClassProvider),
    "__ΩExistingProvider": (()=>__ΩExistingProvider),
    "__ΩFactoryProvider": (()=>__ΩFactoryProvider),
    "__ΩProviderBase": (()=>__ΩProviderBase),
    "__ΩValueProvider": (()=>__ΩValueProvider),
    "getProviders": (()=>getProviders),
    "isClassProvider": (()=>isClassProvider),
    "isExistingProvider": (()=>isExistingProvider),
    "isFactoryProvider": (()=>isFactoryProvider),
    "isInjectionProvider": (()=>isInjectionProvider),
    "isScopedProvider": (()=>isScopedProvider),
    "isTransient": (()=>isTransient),
    "isValueProvider": (()=>isValueProvider),
    "provide": (()=>provide)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*
 * Deepkit Framework
 * Copyright (C) 2021 Deepkit UG, Marc J. Schmidt
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the MIT License.
 *
 * You should have received a copy of the MIT License along with this program.
 */ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
;
;
;
;
const __ΩProviderBase = [
    true,
    'transient',
    'ProviderBase',
    'P.!4"8Mw#y'
];
;
function provide(provider, type) {
    var _a;
    if (type === void 0) {
        type = (_a = provide.Ω) === null || _a === void 0 ? void 0 : _a[0];
    }
    provide.Ω = undefined;
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) return {
        provide: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type),
        useClass: provider
    };
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(provider)) return {
        provide: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type),
        useFactory: provider
    };
    return {
        ...provider,
        provide: (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type)
    };
}
provide.__type = [
    ()=>__ΩProviderBase,
    'ProviderScope',
    'useValue',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'useClass',
    'useExisting',
    'args',
    '',
    'useFactory',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'provider',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    'NormalizedProvider',
    'provide',
    'PPPn!"w"PP"4#MPn$4%MP"4&MPP"@2\'P"-J/(4)MJKn*P"@2\'"/(J2+"o,"2-8"w.//'
];
const __ΩValueProvider = [
    'T',
    ()=>__ΩProviderBase,
    'Token',
    'provide',
    'useValue',
    'ValueProvider',
    'b!Pn""w#4$e"!4%Mw&y'
];
;
const __ΩClassProvider = [
    'T',
    ()=>__ΩProviderBase,
    'Token',
    'provide',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'useClass',
    'ClassProvider',
    'b!Pn""w#4$e"!o%"4&8Mw\'y'
];
;
const __ΩExistingProvider = [
    'T',
    ()=>__ΩProviderBase,
    'Token',
    'provide',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'useExisting',
    'ExistingProvider',
    'b!Pn""w#4$e"!o%"4&Mw\'y'
];
;
const __ΩFactoryProvider = [
    'T',
    ()=>__ΩProviderBase,
    'Token',
    'provide',
    'args',
    '',
    'useFactory',
    'FactoryProvider',
    'b!Pn""w#4$P"@2%Pe$!-J/&4\'Mw(y'
];
;
class TagRegistry {
    constructor(tags = []){
        this.tags = tags;
    }
    register(tagProvider, module) {
        return this.tags.push({
            tagProvider,
            module
        });
    }
    resolve(tag) {
        return this.tags.filter((v)=>v.tagProvider.tag instanceof tag);
    }
}
class TagProvider {
    constructor(provider, tag){
        this.provider = provider;
        this.tag = tag;
    }
}
class Tag {
    constructor(services = []){
        this.services = services;
    }
    createTagProvider(provider) {
        return new TagProvider(provider, this);
    }
    static provide(provider) {
        const t = new this;
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) {
            return t.createTagProvider({
                provide: provider
            });
        }
        return t.createTagProvider(provider);
    }
}
function isScopedProvider(obj) {
    return obj.provide && obj.hasOwnProperty('scope');
}
isScopedProvider.__type = [
    'obj',
    'isScopedProvider',
    'P"2!!/"'
];
function isValueProvider(obj) {
    return obj.provide && obj.hasOwnProperty('useValue');
}
isValueProvider.__type = [
    'obj',
    'isValueProvider',
    'P"2!!/"'
];
function isClassProvider(obj) {
    return obj.provide && !isValueProvider(obj) && !isExistingProvider(obj) && !isFactoryProvider(obj);
}
isClassProvider.__type = [
    'obj',
    'isClassProvider',
    'P"2!!/"'
];
function isExistingProvider(obj) {
    return obj.provide && obj.hasOwnProperty('useExisting');
}
isExistingProvider.__type = [
    'obj',
    'isExistingProvider',
    'P"2!!/"'
];
function isFactoryProvider(obj) {
    return obj.provide && obj.hasOwnProperty('useFactory');
}
isFactoryProvider.__type = [
    'obj',
    'isFactoryProvider',
    'P"2!!/"'
];
function isInjectionProvider(obj) {
    return isValueProvider(obj) || isClassProvider(obj) || isExistingProvider(obj) || isFactoryProvider(obj);
}
isInjectionProvider.__type = [
    'obj',
    'isInjectionProvider',
    'P"2!!/"'
];
function isTransient(provider) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) return false;
    if (provider instanceof TagProvider) return false;
    return provider.transient === true;
}
isTransient.__type = [
    'ProviderWithScope',
    'provider',
    'isTransient',
    'P"w!2")/#'
];
function getProviders(providers, requestScope) {
    const result = [];
    function normalize(provider) {
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) {
            return provider;
        }
        return provider;
    }
    normalize.__type = [
        'ProviderWithScope',
        'provider',
        'Provider',
        'normalize',
        'P"w!2""w#/$'
    ];
    for (const provider of providers){
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) {
            if (requestScope === 'module') result.push(provider);
            continue;
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) {
            if (requestScope === 'module') result.push(provider);
            continue;
        }
        const scope = isScopedProvider(provider) ? provider.scope : 'module';
        if (scope === requestScope) {
            result.push(normalize(provider));
        }
    }
    return result;
}
getProviders.__type = [
    'ProviderWithScope',
    'providers',
    "module",
    "session",
    "request",
    'requestScope',
    'getProviders',
    'P"w!F2"P.#.$.%&J2&"/\''
]; //# sourceMappingURL=provider.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/src/types.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "__ΩInject": (()=>__ΩInject),
    "__ΩInjectMeta": (()=>__ΩInjectMeta),
    "nominalCompatibility": (()=>nominalCompatibility)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
;
;
const __ΩInjectMeta = [
    'T',
    "inject",
    '__meta',
    'InjectMeta',
    '!c!PP!P."e$!GK4#8Mw$y'
];
;
const __ΩInject = [
    'Type',
    'Token',
    ()=>__ΩInjectMeta,
    'Inject',
    'b!!c"Pe"!e""o#"Kw$y'
];
;
function nominalCompatibility(token, provider) {
    //we want to check if the token is nominal the same with the provider.
    if (token === provider) return 1;
    const stack = [
        {
            spec: 1,
            type: provider
        }
    ];
    while(stack.length){
        const entry = stack.pop();
        const current = entry.type;
        if (current.id && current.id === token.id) return entry.spec;
        if (!current.id && !token.id) {
            //both have no nominal ID, so compare by value identity (literal, classType, function)
            if (current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && current.function && current.function === token.function) return entry.spec;
            if (current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && current.classType && current.classType === token.classType) return entry.spec;
            if (current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal && token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal && current.literal === token.literal) return entry.spec;
        }
        if (current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            const parent = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getParentClass"])(current.classType);
            if (parent && parent.__type) {
                const next = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(parent);
                stack.push({
                    spec: entry.spec + 1,
                    type: next
                });
            }
        }
        if ((current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class || current.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) && current.implements) {
            for (const i of current.implements){
                stack.push({
                    spec: entry.spec + 1,
                    type: i
                });
            }
        }
    }
    return 0;
}
nominalCompatibility.__type = [
    'Type',
    'token',
    'provider',
    'nominalCompatibility',
    'P"w!2""w!2#\'/$'
]; //# sourceMappingURL=types.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "ConfigurationProviderRegistry": (()=>ConfigurationProviderRegistry),
    "InjectorModule": (()=>InjectorModule),
    "__ΩConfigureProviderEntry": (()=>__ΩConfigureProviderEntry),
    "__ΩConfigureProviderOptions": (()=>__ΩConfigureProviderOptions),
    "__ΩExportType": (()=>__ΩExportType),
    "__ΩPreparedProvider": (()=>__ΩPreparedProvider),
    "findModuleForConfig": (()=>findModuleForConfig),
    "getScope": (()=>getScope),
    "isProvided": (()=>isProvided)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/array.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$processor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/processor.js [app-client] (ecmascript)");
;
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
;
const __ΩConfigureProviderOptions = [
    'order',
    'replace',
    'global',
    'ConfigureProviderOptions',
    'P\'4!)4")4#Mw$y'
];
;
const __ΩConfigureProviderEntry = [
    'Type',
    'type',
    ()=>__ΩConfigureProviderOptions,
    'options',
    ()=>Function,
    'call',
    'ConfigureProviderEntry',
    'P"w!4"n#4$Pu%4&Mw\'y'
];
;
class ConfigurationProviderRegistry {
    constructor(){
        this.configurations = [];
    }
    add(type, call, options) {
        this.configurations.push({
            type,
            options,
            call
        });
    }
    mergeInto(registry) {
        for (const { type, options, call } of this.configurations){
            registry.add(type, call, options);
        }
    }
    get(token) {
        const results = [];
        for (const configure of this.configurations){
            const lookup = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(token) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(token) : token;
            if (dependencyLookupMatcher(configure.type, lookup)) {
                results.push(configure);
            }
        }
        return results;
    }
}
ConfigurationProviderRegistry.__type = [
    ()=>__ΩConfigureProviderEntry,
    'configurations',
    function() {
        return [];
    },
    'Type',
    'type',
    ()=>Function,
    'call',
    ()=>__ΩConfigureProviderOptions,
    'options',
    'add',
    ()=>ConfigurationProviderRegistry,
    'registry',
    'mergeInto',
    'Token',
    'token',
    ()=>__ΩConfigureProviderEntry,
    'get',
    'ConfigurationProviderRegistry',
    'n!F3">#P"w$2%Pu&2\'n(2)"0*PP7+2,$0-P"w.2/n0F015w2'
];
let moduleIds = 0;
const __ΩPreparedProvider = [
    'Token',
    'token',
    'InjectorModule',
    'modules',
    'NormalizedProvider',
    'providers',
    'resolveFrom',
    'PreparedProvider',
    'P"w!4""w#F4$"w%F4&"w#4\'8Mw(y'
];
;
/**
 * 0 means not compatible, 1 means exactly compatible, n>1 means compatible but not exactly. The higher the number the further away the compatibility is (the inheritance chain).
 */ function getSpecificity(a, b) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["nominalCompatibility"])(a, b);
}
getSpecificity.__type = [
    'Type',
    'a',
    'b',
    'getSpecificity',
    'P"w!2""w!2#\'/$'
];
function getTypeFromToken(token) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(token) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasTypeInformation"])(token) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(token) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(token) ? token : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$processor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["typeInfer"])(token);
}
getTypeFromToken.__type = [
    'Token',
    'token',
    'Type',
    'getTypeFromToken',
    'P"w!2""w#/$'
];
function getTypeFromProvider(preparedProvider) {
    return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(preparedProvider.token) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["hasTypeInformation"])(preparedProvider.token) ? (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(preparedProvider.token) : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(preparedProvider.token) ? preparedProvider.token : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$processor$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["typeInfer"])(preparedProvider.token);
}
getTypeFromProvider.__type = [
    ()=>__ΩPreparedProvider,
    'preparedProvider',
    'Type',
    'getTypeFromProvider',
    'Pn!2""w#/$'
];
const __ΩLookupMatcher = [
    'Type',
    'token',
    'provider',
    'candidate',
    '',
    'LookupMatcher',
    'P"w!2""w!2#"w!2$8)/%w&y'
];
function exportLookupMatcher(token, provider, candidate) {
    if (token.id) return token.id === provider.id;
    if (token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && provider.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && provider.function && provider.function === token.function) return true;
    if (token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && provider.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && provider.classType && provider.classType === token.classType) return true;
    if (token.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal && provider.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal && provider.literal === token.literal) return true;
    return false;
}
exportLookupMatcher.__type = [
    'Type',
    'token',
    'provider',
    'candidate',
    'exportLookupMatcher',
    'P"w!2""w!2#"w!2$8)/%'
];
function dependencyLookupMatcher(token, provider, candidate) {
    if (token.id && token.id === provider.id) return true;
    const spec = getSpecificity(token, provider);
    if (!spec) return false;
    if (candidate) {
        //if we have already a matching old candidate, we check if the old candidate was more specific than the new one.
        //if the old one was more specific, we don't want to replace it. (lower number means more specific)
        const oldSpec = getSpecificity(token, candidate);
        if (oldSpec <= spec) return false;
    }
    return true;
}
dependencyLookupMatcher.__type = [
    'Type',
    'token',
    'provider',
    'candidate',
    'dependencyLookupMatcher',
    'P"w!2""w!2#"w!2$8)/%'
];
function lookupPreparedProviders(preparedProviders, token, matcher, candidate) {
    const tokenProvider = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPlainObject"])(token) && 'provide' in token && !('kind' in token) ? token : undefined;
    const tokenType = tokenProvider ? undefined : getTypeFromToken(token);
    for (const preparedProvider of preparedProviders){
        if (tokenProvider) {
            //token is a PreparedProvider, which matches only by identity
            if (preparedProvider === tokenProvider || preparedProvider.providers.includes(tokenProvider)) return preparedProvider;
            continue;
        }
        if (!tokenType) continue;
        const preparedProviderType = getTypeFromToken(preparedProvider.token);
        if (matcher(tokenType, preparedProviderType, candidate ? getTypeFromProvider(candidate) : undefined)) {
            candidate = preparedProvider;
        }
    }
    return candidate;
}
lookupPreparedProviders.__type = [
    ()=>__ΩPreparedProvider,
    'preparedProviders',
    'Token',
    ()=>__ΩPreparedProvider,
    'token',
    ()=>__ΩLookupMatcher,
    'matcher',
    ()=>__ΩPreparedProvider,
    'candidate',
    ()=>__ΩPreparedProvider,
    'lookupPreparedProviders',
    'Pn!F2"P"w#n$J2%n&2\'n(2)8Pn*-J/+'
];
function registerPreparedProvider(preparedProviders, modules, providers, replaceExistingScope = true) {
    const token = providers[0].provide;
    if (token === undefined) {
        throw new Error('token is undefined: ' + JSON.stringify(providers));
    }
    const preparedProvider = lookupPreparedProviders(preparedProviders, token, exportLookupMatcher);
    if (preparedProvider) {
        preparedProvider.token = token;
        for (const m of modules){
            if (preparedProvider.modules.includes(m)) continue;
            preparedProvider.modules.push(m);
        }
        for (const provider of providers){
            const scope = getScope(provider);
            //check if given provider has an unknown scope, if so set it.
            //if the scope is known, overwrite it (we want always the last known provider to be valid)
            const knownProvider = preparedProvider.providers.findIndex(__assignType((v)=>getScope(v) === scope, [
                'v',
                '',
                'P"2!"/"'
            ]));
            if (knownProvider === -1) {
                //scope not known, add it
                preparedProvider.providers.push(provider);
            } else if (replaceExistingScope) {
                //scope already known, replace it
                preparedProvider.providers.splice(knownProvider, 1, provider);
            }
        }
    } else {
        //just add it
        preparedProviders.push({
            token,
            modules,
            providers: providers.slice()
        });
    }
}
registerPreparedProvider.__type = [
    ()=>__ΩPreparedProvider,
    'preparedProviders',
    'InjectorModule',
    'modules',
    'NormalizedProvider',
    'providers',
    'replaceExistingScope',
    ()=>true,
    'registerPreparedProvider',
    'Pn!F2""w#F2$"w%F2&)2\'>("/)'
];
function isInChildOfConfig(findType, inType) {
    if (!inType) return;
    const inTypeType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(inType);
    if (inTypeType.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && inTypeType.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) return;
    let found = undefined;
    (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["visit"])(inTypeType, __assignType((type, path)=>{
        if (type === findType) {
            found = path;
            return false;
        } else if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && findType.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && type.classType === findType.classType) {
            found = path;
            return false;
        }
    }, [
        'type',
        'path',
        false,
        '',
        'P"2!"2"P.#$J/$'
    ]));
    return found;
}
isInChildOfConfig.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩTypeClass"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩTypeObjectLiteral"],
    'findType',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'inType',
    'isInChildOfConfig',
    'PPn!n"J2#n$2%8P&-J/&'
];
function findModuleForConfig(config, modules) {
    //go first through first level tree, then second, the third, etc., until no left
    const next = modules.slice();
    const configType = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflectOrUndefined"])(config);
    if (!configType) return;
    if (configType.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && configType.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) return;
    while(next.length){
        const iterateOver = next.slice();
        next.length = 0;
        for (const m of iterateOver){
            if (m.configDefinition === config) return {
                module: m,
                path: ''
            };
            const foundInChild = isInChildOfConfig(configType, m.configDefinition);
            if (foundInChild) return {
                module: m,
                path: foundInChild
            };
            let parent = m.parent;
            while(parent){
                if (parent.configDefinition === config) return {
                    module: parent,
                    path: ''
                };
                const foundInChild = isInChildOfConfig(configType, parent.configDefinition);
                if (foundInChild) return {
                    module: parent,
                    path: foundInChild
                };
                parent = parent.parent;
            }
            next.push(...m.imports);
        }
    }
    return undefined;
}
findModuleForConfig.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'config',
    'InjectorModule',
    'modules',
    'module',
    'path',
    'findModuleForConfig',
    'Pn!2""w#F2$PP"w#4%&4&M-J/\''
];
const __ΩExportType = [
    'Token',
    'InjectorModule',
    'ExportType',
    'P"w!"w"Jw#y'
];
;
function isProvided(providers, token) {
    return providers.some(__assignType((v)=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContainerToken"])((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveToken"])(v)) === (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getContainerToken"])(token), [
        'v',
        '',
        'P"2!"/"'
    ]));
}
isProvided.__type = [
    'ProviderWithScope',
    'providers',
    'Token',
    'token',
    'isProvided',
    'P"w!F2""w#2$)/%'
];
function getScope(provider) {
    return ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider) ? '' : provider instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"] ? provider.provider.scope : provider.scope) || '';
}
getScope.__type = [
    'ProviderWithScope',
    'provider',
    'getScope',
    'P"w!2"&/#'
];
class InjectorModule {
    constructor(providers = [], parent, config = {}, exports = []){
        this.providers = providers;
        this.parent = parent;
        this.config = config;
        this.exports = exports;
        this.id = moduleIds++;
        /**
         * Whether this module is for the root module. All its providers are automatically exported and moved to the root level.
         */ this.root = false;
        this.configurationProviderRegistry = new ConfigurationProviderRegistry;
        this.globalConfigurationProviderRegistry = new ConfigurationProviderRegistry;
        this.imports = [];
        this.exportsDisabled = false;
        this.exported = false;
        if (this.parent) this.parent.registerAsChildren(this);
    }
    registerAsChildren(child) {
        if (this.imports.includes(child)) return;
        this.imports.push(child);
    }
    /**
     * When the module exports providers the importer doesn't want, then `disableExports` disable all exports.
     */ disableExports() {
        this.exportsDisabled = true;
        return this;
    }
    /**
     * Makes all the providers, controllers, etc available at the root module, basically exporting everything.
     */ forRoot() {
        this.root = true;
        return this;
    }
    /**
     * Reverts the root default setting to false.
     */ notForRoot() {
        this.root = false;
        return this;
    }
    unregisterAsChildren(child) {
        if (!this.imports.includes(child)) return;
        child.parent = undefined;
        (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$array$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["arrayRemoveItem"])(this.imports, child);
    }
    getChildren() {
        return this.imports;
    }
    setConfigDefinition(config) {
        this.configDefinition = config;
        const configDefaults = new config;
        this.config = Object.assign(configDefaults, this.config);
        return this;
    }
    setParent(parent) {
        if (this.parent === parent) return this;
        this.assertInjectorNotBuilt();
        if (this.parent) this.parent.unregisterAsChildren(this);
        this.parent = parent;
        this.parent.registerAsChildren(this);
        return this;
    }
    getParent() {
        return this.parent;
    }
    assertInjectorNotBuilt() {
        if (!this.injector) return;
        throw new Error(`Injector already built for ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this)}. Can not modify its provider or tree structure.`);
    }
    addExport(...types) {
        this.assertInjectorNotBuilt();
        this.exports.push(...types.flat());
        return this;
    }
    isExported(token) {
        return this.exports.includes(token);
    }
    isProvided(token, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.isProvided.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.isProvided.Ω = undefined;
        if (!token) {
            token = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type);
        }
        return isProvided.Ω = [
            undefined
        ], isProvided(this.getProviders(), token);
    }
    addProvider(...provider) {
        this.assertInjectorNotBuilt();
        this.providers.push(...provider.flat());
        return this;
    }
    getProviders() {
        return this.providers;
    }
    getConfig() {
        return this.config;
    }
    configure(config) {
        Object.assign(this.config, config);
        return this;
    }
    getImports() {
        return this.imports;
    }
    getImportedModulesByClass(classType) {
        return this.getImports().filter((v)=>v instanceof classType);
    }
    getImportedModuleByClass(classType) {
        const v = this.getImports().find((v)=>v instanceof classType);
        if (!v) {
            throw new Error(`No module ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(classType)} in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this)}#${this.id} imported.`);
        }
        return v;
    }
    getImportedModule(module) {
        const v = this.getImports().find((v)=>v.id === module.id);
        if (!v) {
            throw new Error(`No module ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(module)}#${module.id} in ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this)}#${this.id} imported.`);
        }
        return v;
    }
    getExports() {
        return this.exports;
    }
    hasImport(moduleClass) {
        for (const importModule of this.getImports()){
            if (importModule instanceof moduleClass) return true;
        }
        return false;
    }
    /**
     * Adds a new import at the end.
     */ addImport(...modules) {
        this.assertInjectorNotBuilt();
        for (const module of modules){
            module.setParent(this);
        }
        return this;
    }
    /**
     * Adds a new import at the beginning. Since import order matters, it might be useful to import a module first
     * so its exported providers can be overwritten by imports following this module.
     */ addImportAtBeginning(...modules) {
        this.assertInjectorNotBuilt();
        for (const module of modules){
            module.parent = this;
            this.imports.unshift(module);
        }
        return this;
    }
    /**
     * Configures a provider by applying a custom configuration function to its instance.
     * The passed configure function is executed when instance was created.
     * If the provider is in a scope and the scope created multiple instances,
     * the configure function is executed for each instance.
     *
     * The purpose of a provider configuration is to configure the instance, for example
     * call methods on it, set properties, etc.
     *
     * The first parameter of the function is always the instance of the provider that was created.
     * All additional defined parameters will be provided by the dependency injection container.
     *
     * if `options.replace` is true, the returned value of `configure` will
     * replace the instance.
     * if `options.global` is true, the configuration function is applied to all
     * providers in the whole module tree.
     * The `options.order` defines the order of execution of the configuration function.
     * The lower the number, the earlier it is executed.
     */ configureProvider(configure, options, type) {
        var _a;
        if (options === void 0) {
            options = {};
        }
        if (type === void 0) {
            type = (_a = this./**
         * Configures a provider by applying a custom configuration function to its instance.
         * The passed configure function is executed when instance was created.
         * If the provider is in a scope and the scope created multiple instances,
         * the configure function is executed for each instance.
         *
         * The purpose of a provider configuration is to configure the instance, for example
         * call methods on it, set properties, etc.
         *
         * The first parameter of the function is always the instance of the provider that was created.
         * All additional defined parameters will be provided by the dependency injection container.
         *
         * if `options.replace` is true, the returned value of `configure` will
         * replace the instance.
         * if `options.global` is true, the configuration function is applied to all
         * providers in the whole module tree.
         * The `options.order` defines the order of execution of the configuration function.
         * The lower the number, the earlier it is executed.
         */ configureProvider.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.configureProvider.Ω = undefined;
        const optionsResolved = Object.assign({
            order: 0,
            replace: false,
            global: false
        }, options);
        type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type);
        const registry = options.global ? this.globalConfigurationProviderRegistry : this.configurationProviderRegistry;
        registry.add(type, configure, optionsResolved);
        return this;
    }
    getOrCreateInjector(buildContext) {
        if (this.injector) return this.injector;
        //notify everyone we know to prepare providers
        if (this.parent) this.parent.getPreparedProviders(buildContext);
        this.getPreparedProviders(buildContext);
        //handle exports, from bottom to up
        if (this.parent) this.parent.handleExports(buildContext);
        this.handleExports(buildContext);
        //build the injector context
        if (this.parent) this.parent.getOrCreateInjector(buildContext);
        this.injector = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Injector"](this, buildContext);
        for (const child of this.imports)child.getOrCreateInjector(buildContext);
        return this.injector;
    }
    getPreparedProvider(token, candidate) {
        if (!this.preparedProviders) return;
        return lookupPreparedProviders(this.preparedProviders, token, dependencyLookupMatcher, candidate);
    }
    getSetupProvider(token, candidate) {
        if (!this.preparedProviders) return;
        return lookupPreparedProviders(this.preparedProviders, token, exportLookupMatcher, candidate);
    }
    resolveToken(token) {
        const found = this.getPreparedProvider(token);
        if (found) return this;
        if (this.parent) return this.parent.resolveToken(token);
        return;
    }
    getBuiltPreparedProviders() {
        return this.preparedProviders;
    }
    /**
     * Prepared the module for an injector tree build.
     *
     *  - Index providers by token so that last known provider is picked (so they can be overwritten).
     *  - Register TagProvider in TagRegistry
     *  - Put TagProvider in providers if not already made.
     *  - Put exports to parent's module with the reference to this, so the dependencies are fetched from the correct module.
     */ getPreparedProviders(buildContext) {
        if (this.preparedProviders) return this.preparedProviders;
        for (const m of this.imports){
            m.getPreparedProviders(buildContext);
        }
        this.preparedProviders = [];
        this.globalConfigurationProviderRegistry.mergeInto(buildContext.globalConfigurationProviderRegistry);
        //make sure that providers that declare the same provider token will be filtered out so that the last will be used.
        for (const provider of this.providers){
            if (!provider) continue;
            if (provider instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"]) {
                buildContext.tagRegistry.register(provider, this);
                if (!lookupPreparedProviders(this.preparedProviders, provider.provider.provide, exportLookupMatcher)) {
                    //we don't want to overwrite that provider with a tag
                    registerPreparedProvider(this.preparedProviders, [
                        this
                    ], [
                        provider.provider
                    ]);
                }
            } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) {
                registerPreparedProvider(this.preparedProviders, [
                    this
                ], [
                    {
                        provide: provider
                    }
                ]);
            } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPlainObject"])(provider)) {
                registerPreparedProvider(this.preparedProviders, [
                    this
                ], [
                    provider
                ]);
            }
        }
        return this.preparedProviders;
    }
    handleExports(buildContext) {
        if (this.exported) return;
        this.exported = true;
        //the import order is important. the last entry is the most important and should be able to overwrite
        //previous modules. In order to make that work, we call handleExports in reversed order.
        //this lets providers from the last import register their provider first, and make them available first
        //in the injector (which equals to be resolved first).
        for(let i = this.imports.length - 1; i >= 0; i--){
            this.imports[i].setParent(this);
            this.imports[i].handleExports(buildContext);
        }
        // for (const m of this.imports) {
        //     m.setParent(this);
        //     m.handleExports(buildContext);
        // }
        if (!this.preparedProviders) return;
        if (!this.parent) return;
        if (this.exportsDisabled) return;
        const exportToken = (token, to)=>{
            if (!this.preparedProviders) return;
            const preparedProvider = lookupPreparedProviders(this.preparedProviders, token, exportLookupMatcher);
            //if it was not in provider, we continue
            if (!preparedProvider) return;
            //mark this provider as redirect to `exportTo`
            preparedProvider.resolveFrom = to;
            const parentProviders = to.getPreparedProviders(buildContext);
            const parentProvider = lookupPreparedProviders(parentProviders, token, exportLookupMatcher);
            //if the parent has this token already defined, we just switch its module to ours,
            //so it's able to inject our encapsulated services.
            if (parentProvider) {
                //we add our module as additional source for potential dependencies
                registerPreparedProvider(parentProviders, preparedProvider.modules, preparedProvider.providers, false);
            } else {
                // [this, to] is used so that this service resolves dependencies from the target first (so it can overwrite them)
                // and falls back to the module it was defined in. This includes configureProvider() calls.
                parentProviders.push({
                    token: preparedProvider.token,
                    modules: [
                        to,
                        this
                    ],
                    providers: preparedProvider.providers.slice()
                });
            }
        };
        if (this.root) {
            if (this.exports.length !== 0) {
                throw new Error(`Can not use forRoot and exports at the same time in module ${this.constructor.name}. Either you want to export everything to the root (via forRoot: true), or export a subset to the parent (via exports)`);
            }
            const root = this.findRoot();
            if (root !== this) {
                for (const prepared of this.preparedProviders){
                    exportToken(prepared.token, root);
                }
            }
        } else {
            for (const entry of this.exports){
                if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(entry) && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPrototypeOfBase"])(entry, InjectorModule) || entry instanceof InjectorModule) {
                    const moduleInstance = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(entry) ? this.imports.find((v)=>v instanceof entry) : entry;
                    if (!moduleInstance) {
                        throw new Error(`Unknown module ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(entry)} exported from ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this)}. The module was never imported.`);
                    }
                    //export everything to the parent that we received from that `entry` module
                    for (const preparedProvider of this.preparedProviders){
                        if (preparedProvider.modules.includes(moduleInstance)) {
                            //this provider was received from `entry`
                            //mark this provider as redirect to `exportTo`
                            preparedProvider.resolveFrom = this.parent;
                            const parentProviders = this.parent.getPreparedProviders(buildContext);
                            const parentProvider = lookupPreparedProviders(parentProviders, preparedProvider.token, exportLookupMatcher);
                            //if the parent has this token already defined, we just switch its module to ours,
                            //so it's able to inject our encapsulated services.
                            if (parentProvider) {
                                //we add our module as additional source for potential dependencies
                                registerPreparedProvider(parentProviders, preparedProvider.modules, preparedProvider.providers, false);
                            } else {
                                parentProviders.push({
                                    token: preparedProvider.token,
                                    modules: [
                                        this,
                                        ...preparedProvider.modules
                                    ],
                                    providers: preparedProvider.providers.slice()
                                });
                            }
                        }
                    }
                } else {
                    //export single token
                    exportToken(entry, this.parent);
                }
            }
        }
    }
    findRoot() {
        if (this.parent) return this.parent.findRoot();
        return this;
    }
} //# sourceMappingURL=module.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({
    "BuildContext": (()=>BuildContext),
    "CircularDependencyError": (()=>CircularDependencyError),
    "DependenciesUnmetError": (()=>DependenciesUnmetError),
    "Injector": (()=>Injector),
    "InjectorContext": (()=>InjectorContext),
    "InjectorError": (()=>InjectorError),
    "ServiceNotFoundError": (()=>ServiceNotFoundError),
    "TransientInjectionTarget": (()=>TransientInjectionTarget),
    "__ΩContainerToken": (()=>__ΩContainerToken),
    "__ΩInjectorInterface": (()=>__ΩInjectorInterface),
    "__ΩPartialFactory": (()=>__ΩPartialFactory),
    "__ΩResolveToken": (()=>__ΩResolveToken),
    "__ΩResolver": (()=>__ΩResolver),
    "getContainerToken": (()=>getContainerToken),
    "getInjectOptions": (()=>getInjectOptions),
    "injectedFunction": (()=>injectedFunction),
    "partialFactory": (()=>partialFactory),
    "resolveToken": (()=>resolveToken),
    "tokenLabel": (()=>tokenLabel)
});
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
/*@ts-ignore*/ var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/compiler.js [app-client] (ecmascript)");
const __ΩReturnType = [
    'T',
    'args',
    '',
    'ReturnType',
    'l>e"!R"RPde#!P"@2"h"!/#qk#\'QRb!Pde"!p)w$y'
];
const __ΩPartial = [
    'T',
    'Partial',
    'l+e#!e"!fRb!Pde"!gN#"w"y'
];
const __ΩExclude = [
    'T',
    'U',
    'Exclude',
    'l6!Re$!RPe#!e$"qk#%QRb!b"Pde"!p)w#y'
];
;
;
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
class InjectorError extends __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"] {
}
InjectorError.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CustomError"],
    'InjectorError',
    'P7!5w"'
];
class CircularDependencyError extends InjectorError {
}
CircularDependencyError.__type = [
    ()=>InjectorError,
    'CircularDependencyError',
    'P7!5w"'
];
class ServiceNotFoundError extends InjectorError {
}
ServiceNotFoundError.__type = [
    ()=>InjectorError,
    'ServiceNotFoundError',
    'P7!5w"'
];
class DependenciesUnmetError extends InjectorError {
}
DependenciesUnmetError.__type = [
    ()=>InjectorError,
    'DependenciesUnmetError',
    'P7!5w"'
];
function tokenLabel(token) {
    if (token === null) return 'null';
    if (token === undefined) return 'undefined';
    if (token instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"]) return 'Tag(' + (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(token.provider.provide) + ')';
    if (typeof token === 'symbol') return token.toString();
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(token)) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(token);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(token)) return (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringifyType"])(token).replace(/\n/gm, '');
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(token.toString)) return token.name;
    return token + '';
}
tokenLabel.__type = [
    'Token',
    'token',
    'tokenLabel',
    'P"w!2"&/#'
];
function functionParameterNotFound(ofName, name, position, token) {
    const argsCheck = [];
    for(let i = 0; i < position; i++)argsCheck.push('✓');
    argsCheck.push('?');
    throw new DependenciesUnmetError(`Unknown function argument '${name}: ${tokenLabel(token)}' of ${ofName}(${argsCheck.join(', ')}). Make sure '${tokenLabel(token)}' is provided.`);
}
functionParameterNotFound.__type = [
    'ofName',
    'name',
    'position',
    'token',
    'functionParameterNotFound',
    'P&2!&2"\'2#"2$"/%'
];
function constructorParameterNotFound(ofName, name, position, token) {
    const argsCheck = [];
    for(let i = 0; i < position; i++)argsCheck.push('✓');
    argsCheck.push('?');
    throw new DependenciesUnmetError(`Unknown constructor argument '${name}: ${tokenLabel(token)}' of ${ofName}(${argsCheck.join(', ')}). Make sure '${tokenLabel(token)}' is provided.`);
}
constructorParameterNotFound.__type = [
    'ofName',
    'name',
    'position',
    'token',
    'constructorParameterNotFound',
    'P&2!&2"\'2#"2$"/%'
];
function serviceNotfoundError(token, moduleName) {
    throw new ServiceNotFoundError(`Service '${tokenLabel(token)}' in ${moduleName} not found. Make sure it is provided.`);
}
serviceNotfoundError.__type = [
    'token',
    'moduleName',
    'serviceNotfoundError',
    'P"2!&2""/#'
];
function factoryDependencyNotFound(ofName, name, position, token) {
    const argsCheck = [];
    for(let i = 0; i < position; i++)argsCheck.push('✓');
    argsCheck.push('?');
    for (const reset of CircularDetectorResets)reset();
    throw new DependenciesUnmetError(`Unknown factory dependency argument '${tokenLabel(token)}' of ${ofName}(${argsCheck.join(', ')}). Make sure '${tokenLabel(token)}' is provided.`);
}
factoryDependencyNotFound.__type = [
    'ofName',
    'name',
    'position',
    'token',
    'factoryDependencyNotFound',
    'P&2!&2"\'2#"2$"/%'
];
function propertyParameterNotFound(ofName, name, position, token) {
    for (const reset of CircularDetectorResets)reset();
    throw new DependenciesUnmetError(`Unknown property parameter ${name} of ${ofName}. Make sure '${tokenLabel(token)}' is provided.`);
}
propertyParameterNotFound.__type = [
    'ofName',
    'name',
    'position',
    'token',
    'propertyParameterNotFound',
    'P&2!&2"\'2#"2$"/%'
];
function transientInjectionTargetUnavailable(ofName, name, position, token) {
    throw new DependenciesUnmetError(`${TransientInjectionTarget.name} is not available for ${name} of ${ofName}. ${TransientInjectionTarget.name} is only available when injecting into other providers`);
}
transientInjectionTargetUnavailable.__type = [
    'ofName',
    'name',
    'position',
    'token',
    'transientInjectionTargetUnavailable',
    'P&2!&2"\'2#"2$"/%'
];
const __ΩDestination = [
    'Token',
    'token',
    'Destination',
    'P"w!4"Mw#y'
];
function createTransientInjectionTarget(destination) {
    if (!destination) {
        return undefined;
    }
    return new TransientInjectionTarget(destination.token);
}
createTransientInjectionTarget.__type = [
    ()=>__ΩDestination,
    'destination',
    'createTransientInjectionTarget',
    'PPn!-J2""/#'
];
const CircularDetector = [];
const CircularDetectorResets = [];
function throwCircularDependency() {
    const path = CircularDetector.map(tokenLabel).join(' -> ');
    CircularDetector.length = 0;
    for (const reset of CircularDetectorResets)reset();
    throw new CircularDependencyError(`Circular dependency found ${path}`);
}
throwCircularDependency.__type = [
    'throwCircularDependency',
    'P"/!'
];
const __ΩScope = [
    'name',
    'instances',
    'Scope',
    'P&4!P&"LM4"Mw#y'
];
const __ΩResolveToken = [
    'T',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩAbstractClassType"],
    'ResolveToken',
    'lXe"!Re&!Re$!RPe#!h%!o#"qk\'+QRPde%!p/RPde#!h!!o""qk#?QRb!Pde"!pGw$y'
];
;
function resolveToken(provider) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider)) return provider;
    if (provider instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"]) return resolveToken(provider.provider);
    return provider.provide;
}
resolveToken.__type = [
    'ProviderWithScope',
    'provider',
    'Token',
    'resolveToken',
    'P"w!2""w#/$'
];
const __ΩContainerToken = [
    ()=>__ΩExclude,
    'Token',
    'Type',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"],
    'ContainerToken',
    '"w"P"w#P"7$Jo!#w%y'
];
;
function getContainerToken(type) {
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(type)) return type;
    if (type instanceof __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagProvider"]) return getContainerToken(type.provider);
    if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(type)) {
        if (type.id) return type.id;
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) return type.literal;
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) return type.classType;
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && type.function) return type.function;
    }
    return type;
}
getContainerToken.__type = [
    'Token',
    'type',
    ()=>__ΩContainerToken,
    'getContainerToken',
    'P"w!2"n#/$'
];
const __ΩInjectorInterface = [
    'token',
    ()=>__ΩScope,
    'scope',
    ()=>__ΩResolveToken,
    'get',
    'InjectorInterface',
    'PP"2!n"2#8"o$"1%Mw&y'
];
;
function getInjectOptions(type) {
    const annotations = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["metaAnnotation"].getForName(type, 'inject');
    if (!annotations) return;
    const t = annotations[0];
    return t && t.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].never ? t : type;
}
getInjectOptions.__type = [
    'Type',
    'type',
    'getInjectOptions',
    'P"w!2"P"w!-J/#'
];
function getPickArguments(type) {
    if (type.typeName === 'Pick' && type.typeArguments && type.typeArguments.length === 2) {
        return type.typeArguments;
    }
    if (!type.originTypes) return;
    for (const origin of type.originTypes){
        if (origin.typeName === 'Pick' && origin.typeArguments && origin.typeArguments.length === 2) {
            return origin.typeArguments;
        }
    }
    return;
}
getPickArguments.__type = [
    'Type',
    'type',
    'getPickArguments',
    'P"w!2"P"w!F-J/#'
];
class TransientInjectionTarget {
    constructor(token){
        this.token = token;
    }
}
const __ΩPartialFactory = [
    'C',
    ()=>__ΩPartial,
    'args',
    '',
    'PartialFactory',
    'l+e$!e"!fRb!PPde#!gN#!o""2#e"!/$w%y'
];
;
class Injector {
    constructor(module, buildContext){
        this.module = module;
        this.buildContext = buildContext;
        /**
         * All unscoped provider instances. Scoped instances are attached to `Scope`.
         */ this.instances = {};
        this.instantiated = {};
        module.injector = this;
        this.build(buildContext);
    }
    static from(providers, parent) {
        return new Injector(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"](providers, parent === null || parent === void 0 ? void 0 : parent.module), new BuildContext);
    }
    static fromModule(module, parent) {
        return new Injector(module, new BuildContext);
    }
    get(token, scope) {
        var _a;
        if (token === void 0) {
            token = (_a = this.get.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.get.Ω = undefined;
        if (!this.resolver) throw new Error('Injector was not built');
        if ('string' === typeof token || 'number' === typeof token || 'bigint' === typeof token || 'boolean' === typeof token || 'symbol' === typeof token || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(token) || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(token) || token instanceof RegExp) {
            return this.resolver(getContainerToken(token), scope);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(token)) {
            return this.createResolver((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isType"])(token) ? token : (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(token), scope)(scope);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(token)) {
            return this.createResolver((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(token), scope)(scope);
        }
        throw new Error(`Invalid get<T> argument given ${token}`);
    }
    set(token, value, scope) {
        if (!this.setter) throw new Error('Injector was not built');
        this.setter(token, value, scope);
    }
    instantiationCount(token, scope) {
        if (!this.instantiations) throw new Error('Injector was not built');
        return this.instantiations(token, scope);
    }
    clear() {
        this.instances = {};
    }
    build(buildContext) {
        const resolverCompiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompilerContext"]();
        resolverCompiler.context.set('CircularDetector', CircularDetector);
        resolverCompiler.context.set('CircularDetectorResets', CircularDetectorResets);
        resolverCompiler.context.set('throwCircularDependency', throwCircularDependency);
        resolverCompiler.context.set('tokenNotfoundError', serviceNotfoundError);
        resolverCompiler.context.set('constructorParameterNotFound', constructorParameterNotFound);
        resolverCompiler.context.set('functionParameterNotFound', functionParameterNotFound);
        resolverCompiler.context.set('propertyParameterNotFound', propertyParameterNotFound);
        resolverCompiler.context.set('factoryDependencyNotFound', factoryDependencyNotFound);
        resolverCompiler.context.set('transientInjectionTargetUnavailable', transientInjectionTargetUnavailable);
        resolverCompiler.context.set('createTransientInjectionTarget', createTransientInjectionTarget);
        resolverCompiler.context.set('injector', this);
        const lines = [];
        const resets = [];
        const creating = [];
        const instantiationCompiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompilerContext"]();
        instantiationCompiler.context.set('injector', this);
        const instantiationLines = [];
        const setterCompiler = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$compiler$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["CompilerContext"]();
        setterCompiler.context.set('injector', this);
        const setterLines = [];
        for (const prepared of this.module.getPreparedProviders(buildContext)){
            //scopes will be created first, so they are returned instead of the unscoped instance
            prepared.providers.sort((a, b)=>{
                if (a.scope && !b.scope) return -1;
                if (!a.scope && b.scope) return +1;
                return 0;
            });
            for (const provider of prepared.providers){
                const scope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getScope"])(provider);
                const name = 'i' + this.buildContext.providerIndex.reserve();
                creating.push(`let creating_${name} = false;`);
                resets.push(`creating_${name} = false;`);
                const accessor = scope ? 'scope.instances.' + name : 'injector.instances.' + name;
                const scopeObjectCheck = scope ? ` && scope && scope.name === ${JSON.stringify(scope)}` : '';
                const scopeCheck = scope ? ` && scope === ${JSON.stringify(scope)}` : '';
                const diToken = getContainerToken(prepared.token);
                setterLines.push(`case token === ${setterCompiler.reserveVariable('token', diToken)}${scopeObjectCheck}: {
                    if (${accessor} === undefined) {
                        injector.instantiated.${name} = injector.instantiated.${name} ? injector.instantiated.${name} + 1 : 1;
                    }
                    ${accessor} = value;
                    break;
                }`);
                if (prepared.resolveFrom) {
                    //it's a redirect
                    lines.push(`
                    case token === ${resolverCompiler.reserveConst(diToken, 'token')}${scopeObjectCheck}: {
                        return ${resolverCompiler.reserveConst(prepared.resolveFrom, 'resolveFrom')}.injector.resolver(${resolverCompiler.reserveConst(diToken, 'token')}, scope, destination);
                    }
                    `);
                    instantiationLines.push(`
                    case token === ${instantiationCompiler.reserveConst(diToken, 'token')}${scopeCheck}: {
                        return ${instantiationCompiler.reserveConst(prepared.resolveFrom, 'resolveFrom')}.injector.instantiations(${instantiationCompiler.reserveConst(diToken, 'token')}, scope);
                    }
                    `);
                } else {
                    //we own and instantiate the service
                    lines.push(this.buildProvider(buildContext, resolverCompiler, name, accessor, scope, prepared.token, provider, prepared.modules));
                    instantiationLines.push(`
                    case token === ${instantiationCompiler.reserveConst(diToken, 'token')}${scopeCheck}: {
                        return injector.instantiated.${name} || 0;
                    }
                    `);
                }
            }
        }
        this.instantiations = instantiationCompiler.build(`
            //for ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this.module)}
            switch (true) {
                ${instantiationLines.join('\n')}
            }
            return 0;
        `, 'token', 'scope');
        this.setter = setterCompiler.build(`
            //for ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this.module)}
            switch (true) {
                ${setterLines.join('\n')}
            }
        `, 'token', 'value', 'scope');
        this.resolver = resolverCompiler.raw(`
            //for ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this.module)}
            ${creating.join('\n')};

            CircularDetectorResets.push(() => {
                ${resets.join('\n')};
            });

            return function(token, scope, destination) {
                switch (true) {
                    ${lines.join('\n')}
                }

                tokenNotfoundError(token, '${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(this.module)}');
            }
        `);
    }
    buildProvider(buildContext, compiler, name, accessor, scope, token, provider, resolveDependenciesFrom) {
        let transient = false;
        let factory = {
            code: '',
            dependencies: 0
        };
        const tokenVar = compiler.reserveConst(getContainerToken(token));
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isValueProvider"])(provider)) {
            transient = provider.transient === true;
            const valueVar = compiler.reserveVariable('useValue', provider.useValue);
            factory.code = `${accessor} = ${valueVar};`;
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClassProvider"])(provider)) {
            transient = provider.transient === true;
            let useClass = provider.useClass;
            if (!useClass) {
                if (!(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isClass"])(provider.provide)) {
                    throw new Error(`UseClassProvider needs to set either 'useClass' or 'provide' as a ClassType. Got ${provider.provide}`);
                }
                useClass = provider.provide;
            }
            factory = this.createFactory(provider, accessor, compiler, useClass, resolveDependenciesFrom);
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isExistingProvider"])(provider)) {
            transient = provider.transient === true;
            factory.code = `${accessor} = injector.resolver(${compiler.reserveConst(getContainerToken(provider.useExisting))}, scope, destination)`;
        } else if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFactoryProvider"])(provider)) {
            transient = provider.transient === true;
            const args = [];
            const reflection = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionFunction"].from(provider.useFactory);
            const ofName = reflection.name === 'anonymous' ? 'useFactory' : reflection.name;
            for (const parameter of reflection.getParameters()){
                factory.dependencies++;
                const tokenType = getInjectOptions(parameter.getType());
                args.push(this.createFactoryProperty({
                    name: parameter.name,
                    type: tokenType || parameter.getType(),
                    optional: !parameter.isValueRequired()
                }, provider, compiler, resolveDependenciesFrom, ofName, args.length, 'factoryDependencyNotFound'));
            }
            factory.code = `${accessor} = ${compiler.reserveVariable('factory', provider.useFactory)}(${args.join(', ')});`;
        } else {
            throw new Error('Invalid provider');
        }
        const configureProvider = [];
        const configurations = [];
        for (const module of resolveDependenciesFrom){
            configurations.push(...module.configurationProviderRegistry.get(token));
        }
        configurations.push(...buildContext.globalConfigurationProviderRegistry.get(token));
        if (configurations === null || configurations === void 0 ? void 0 : configurations.length) {
            configurations.sort((a, b)=>{
                return a.options.order - b.options.order;
            });
            for (const configure of configurations){
                const args = [
                    accessor
                ];
                const reflection = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionFunction"].from(configure.call);
                const ofName = reflection.name === 'anonymous' ? 'configureProvider' : reflection.name;
                for (const parameter of reflection.getParameters().slice(1)){
                    const tokenType = getInjectOptions(parameter.getType());
                    args.push(this.createFactoryProperty({
                        name: parameter.name,
                        type: tokenType || parameter.getType(),
                        optional: !parameter.isValueRequired()
                    }, provider, compiler, resolveDependenciesFrom, ofName, args.length, 'functionParameterNotFound'));
                }
                const call = `${compiler.reserveVariable('configure', configure.call)}(${args.join(', ')});`;
                if (configure.options.replace) {
                    configureProvider.push(`${accessor} = ${call}`);
                } else {
                    configureProvider.push(call);
                }
            }
        } else {
            configureProvider.push('//no custom provider setup');
        }
        const scopeCheck = scope ? ` && scope && scope.name === ${JSON.stringify(scope)}` : '';
        //circular dependencies can happen, when for example a service with InjectorContext injected manually instantiates a service.
        //if that service references back to the first one, it will be a circular loop. So we track that with `creating` state.
        const creatingVar = `creating_${name}`;
        const circularDependencyCheckStart = factory.dependencies ? `if (${creatingVar}) throwCircularDependency();${creatingVar} = true;` : '';
        const circularDependencyCheckEnd = factory.dependencies ? `${creatingVar} = false;` : '';
        return `
            //${tokenLabel(token)}, from ${resolveDependenciesFrom.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"]).join(', ')}
            case token === ${tokenVar}${scopeCheck}: {
                ${!transient ? `if (${accessor} !== undefined) return ${accessor};` : ''}
                CircularDetector.push(${tokenVar});
                ${circularDependencyCheckStart}
                injector.instantiated.${name} = injector.instantiated.${name} ? injector.instantiated.${name} + 1 : 1;
                ${factory.code}
                ${circularDependencyCheckEnd}
                CircularDetector.pop();
                ${configureProvider.join('\n')}
                return ${accessor};
            }
        `;
    }
    createFactory(provider, resolvedName, compiler, classType, resolveDependenciesFrom) {
        if (!classType) throw new Error('Can not create factory for undefined ClassType');
        const reflectionClass = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionClass"].from(classType);
        const args = [];
        const propertyAssignment = [];
        const classTypeVar = compiler.reserveVariable('classType', classType);
        let dependencies = 0;
        const constructor = reflectionClass.getMethodOrUndefined('constructor');
        if (constructor) {
            for (const parameter of constructor.getParameters()){
                dependencies++;
                const tokenType = getInjectOptions(parameter.getType());
                args.push(this.createFactoryProperty({
                    name: parameter.name,
                    type: tokenType || parameter.getType(),
                    optional: !parameter.isValueRequired()
                }, provider, compiler, resolveDependenciesFrom, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(classType), args.length, 'constructorParameterNotFound'));
            }
        }
        for (const property of reflectionClass.getProperties()){
            const tokenType = getInjectOptions(property.type);
            if (!tokenType) continue;
            dependencies++;
            try {
                const resolveProperty = this.createFactoryProperty({
                    name: property.name,
                    type: tokenType,
                    optional: !property.isValueRequired()
                }, provider, compiler, resolveDependenciesFrom, (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(classType), -1, 'propertyParameterNotFound');
                propertyAssignment.push(`${resolvedName}.${String(property.getName())} = ${resolveProperty};`);
            } catch (error) {
                throw new Error(`Could not resolve property injection token ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getClassName"])(classType)}.${String(property.getName())}: ${error.message}`);
            }
        }
        return {
            code: `${resolvedName} = new ${classTypeVar}(${args.join(',')});\n${propertyAssignment.join('\n')}`,
            dependencies
        };
    }
    createFactoryProperty(options, fromProvider, compiler, resolveDependenciesFrom, ofName, argPosition, notFoundFunction) {
        var _a;
        let of = `${ofName}.${options.name}`;
        const destinationVar = compiler.reserveConst({
            token: fromProvider.provide
        });
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            const found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(options.type.classType, resolveDependenciesFrom);
            if (found) {
                return compiler.reserveVariable('fullConfig', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPathValue"])(found.module.getConfig(), found.path));
            }
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && options.type.classType === TransientInjectionTarget) {
            if (fromProvider.transient === true) {
                const tokenVar = compiler.reserveVariable('token', options.type.classType);
                const orThrow = options.optional ? '' : `?? transientInjectionTargetUnavailable(${JSON.stringify(ofName)}, ${JSON.stringify(options.name)}, ${argPosition}, ${tokenVar})`;
                return `createTransientInjectionTarget(destination) ${orThrow}`;
            } else {
                throw new Error(`Cannot inject ${TransientInjectionTarget.name} into ${JSON.stringify(ofName)}.${JSON.stringify(options.name)}, as ${JSON.stringify(ofName)} is not transient`);
            }
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && options.type.classType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagRegistry"]) {
            return compiler.reserveVariable('tagRegistry', this.buildContext.tagRegistry);
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            for (const module of resolveDependenciesFrom){
                if (module instanceof options.type.classType) {
                    return compiler.reserveConst(module, 'module');
                }
            }
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPrototypeOfBase"])(options.type.classType, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Tag"])) {
            const tokenVar = compiler.reserveVariable('token', options.type.classType);
            const resolvedVar = compiler.reserveVariable('tagResolved');
            const entries = this.buildContext.tagRegistry.resolve(options.type.classType);
            const args = [];
            for (const entry of entries){
                args.push(`${compiler.reserveConst(entry.module)}.injector.resolver(${compiler.reserveConst(getContainerToken(entry.tagProvider.provider.provide))}, scope, ${destinationVar})`);
            }
            return `new ${tokenVar}(${resolvedVar} || (${resolvedVar} = [${args.join(', ')}]))`;
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && options.type.typeName === 'PartialFactory') {
            const type = (_a = options.type.typeArguments) === null || _a === void 0 ? void 0 : _a[0];
            const factory = partialFactory(type, this);
            const factoryVar = compiler.reserveConst(factory, 'factory');
            return `${factoryVar}(scope)`;
        }
        if (options.type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
            const pickArguments = getPickArguments(options.type);
            if (pickArguments) {
                if (pickArguments[0].kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
                    const found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(pickArguments[0].classType, resolveDependenciesFrom);
                    if (found) {
                        const fullConfig = compiler.reserveVariable('fullConfig', (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPathValue"])(found.module.getConfig(), found.path));
                        let index = pickArguments[1];
                        if (index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                            index = {
                                kind: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].union,
                                types: [
                                    index
                                ]
                            };
                        }
                        if (index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].union) {
                            const members = [];
                            for (const t of index.types){
                                if (t.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                                    const index = JSON.stringify(t.literal);
                                    members.push(`${index}: ${fullConfig}[${index}]`);
                                }
                            }
                            return `{${members.join(', ')}}`;
                        }
                    }
                }
            }
        }
        if (options.type.indexAccessOrigin) {
            let current = options.type;
            let module = undefined;
            const accesses = [];
            while(current && current.indexAccessOrigin){
                let found = undefined;
                if (current.indexAccessOrigin.container.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
                    found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(current.indexAccessOrigin.container.classType, resolveDependenciesFrom);
                }
                if (current.indexAccessOrigin.index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                    accesses.unshift(`[${JSON.stringify(current.indexAccessOrigin.index.literal)}]`);
                }
                current = current.indexAccessOrigin.container;
                if (found) {
                    module = found.module;
                    if (found.path) accesses.unshift(`[${JSON.stringify(found.path)}]`);
                    break;
                }
            }
            if (module) {
                const fullConfig = compiler.reserveVariable('fullConfig', module.getConfig());
                return `${fullConfig}${accesses.join('')}`;
            }
        }
        let foundPreparedProvider = undefined;
        for (const module of resolveDependenciesFrom){
            foundPreparedProvider = module.getPreparedProvider(options.type, foundPreparedProvider);
        }
        if (resolveDependenciesFrom[0] !== this.module) {
            //the provider was exported from another module, so we need to check if there is a more specific candidate
            foundPreparedProvider = this.module.getPreparedProvider(options.type, foundPreparedProvider);
        }
        if (!foundPreparedProvider) {
            //go up parent hierarchy
            let current = this.module;
            while(current && !foundPreparedProvider){
                foundPreparedProvider = current.getPreparedProvider(options.type, foundPreparedProvider);
                current = current.parent;
            }
        }
        if (!foundPreparedProvider && options.optional) return 'undefined';
        const fromScope = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getScope"])(fromProvider);
        if (!foundPreparedProvider) {
            if (argPosition >= 0) {
                const argsCheck = [];
                for(let i = 0; i < argPosition; i++)argsCheck.push('✓');
                argsCheck.push('?');
                of = `${ofName}(${argsCheck.join(', ')})`;
            }
            const type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringifyType"])(options.type, {
                showFullDefinition: false
            }).replace(/\n/g, '').replace(/\s\s+/g, ' ').replace(' & InjectMeta', '');
            if (options.optional) return 'undefined';
            throw new DependenciesUnmetError(`Undefined dependency "${options.name}: ${type}" of ${of}. Type has no provider${fromScope ? ' in scope ' + fromScope : ''}.`);
        }
        const tokenVar = compiler.reserveVariable('token', getContainerToken(foundPreparedProvider.token));
        const allPossibleScopes = foundPreparedProvider.providers.map(__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getScope"]);
        const unscoped = allPossibleScopes.includes('') && allPossibleScopes.length === 1;
        const foundProviderLabel = foundPreparedProvider.providers.map((v)=>v.provide).map(tokenLabel).join(', ');
        if (!unscoped && !allPossibleScopes.includes(fromScope)) {
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringifyType"])(options.type, {
                showFullDefinition: false
            });
            throw new DependenciesUnmetError(`Dependency '${options.name}: ${t}' of ${of} can not be injected into ${fromScope ? 'scope ' + fromScope : 'no scope'}, ` + `since ${foundProviderLabel} only exists in scope${allPossibleScopes.length === 1 ? '' : 's'} ${allPossibleScopes.join(', ')}.`);
        }
        //when the dependency is FactoryProvider it might return undefined.
        //in this case, if the dependency is not optional, we throw an error.
        const orThrow = options.optional ? '' : `?? ${notFoundFunction}(${JSON.stringify(ofName)}, ${JSON.stringify(options.name)}, ${argPosition}, ${tokenVar})`;
        const resolveFromModule = foundPreparedProvider.resolveFrom || foundPreparedProvider.modules[0];
        if (resolveFromModule === this.module) {
            return `injector.resolver(${tokenVar}, scope, ${destinationVar}) ${orThrow}`;
        }
        return `${compiler.reserveConst(resolveFromModule)}.injector.resolver(${tokenVar}, scope, ${destinationVar}) ${orThrow}`;
    }
    createResolver(type, scope, label) {
        var _a;
        const resolveDependenciesFrom = [
            this.module
        ];
        const optional = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isOptional"])(type);
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].propertySignature || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].property) type = type.type;
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].parameter) type = type.type;
        type = getInjectOptions(type) || type;
        // if (type.kind === ReflectionKind.union) {
        //     type = type.types.some(v => v.kind !== ReflectionKind.undefined);
        // }
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            const found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(type.classType, resolveDependenciesFrom);
            if (found) return ()=>(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPathValue"])(found.module.getConfig(), found.path);
        }
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && type.classType === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagRegistry"]) return ()=>this.buildContext.tagRegistry;
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
            for (const module of resolveDependenciesFrom){
                if (module instanceof type.classType) return ()=>module;
            }
        }
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isPrototypeOfBase"])(type.classType, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["Tag"])) {
            const entries = this.buildContext.tagRegistry.resolve(type.classType);
            const args = [];
            for (const entry of entries){
                args.push(entry.module.injector.resolver(entry.tagProvider.provider.provide, scope));
            }
            return new type.classType(args);
        }
        if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function && type.typeName === 'PartialFactory') {
            const factoryType = (_a = type.typeArguments) === null || _a === void 0 ? void 0 : _a[0];
            const factory = partialFactory(factoryType, this);
            return (scopeIn)=>factory(scopeIn);
        }
        if ((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isWithAnnotations"])(type)) {
            if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
                const pickArguments = getPickArguments(type);
                if (pickArguments) {
                    if (pickArguments[0].kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
                        const found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(pickArguments[0].classType, resolveDependenciesFrom);
                        if (found) {
                            const fullConfig = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPathValue"])(found.module.getConfig(), found.path);
                            let index = pickArguments[1];
                            if (index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                                index = {
                                    kind: __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].union,
                                    types: [
                                        index
                                    ]
                                };
                            }
                            if (index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].union) {
                                const pickedConfig = {};
                                for (const t of index.types){
                                    if (t.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                                        const index = JSON.stringify(t.literal);
                                        pickedConfig[index] = fullConfig[index];
                                    }
                                }
                                return ()=>pickedConfig;
                            }
                        }
                    }
                }
            }
            if (type.indexAccessOrigin) {
                let current = type;
                let config = undefined;
                while(current && current.indexAccessOrigin){
                    if (current.indexAccessOrigin.container.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
                        const found = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["findModuleForConfig"])(current.indexAccessOrigin.container.classType, resolveDependenciesFrom);
                        // Only because it has indexAccessOrigin as class doesn't mean it must be a config reference.
                        // We can safely ignore it if it's not a config reference.
                        if (found) {
                            config = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["getPathValue"])(found.module.getConfig(), found.path);
                        }
                    }
                    if (config !== undefined && current.indexAccessOrigin.index.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].literal) {
                        const index = current.indexAccessOrigin.index.literal;
                        config = config[String(index)];
                    }
                    current = current.indexAccessOrigin.container;
                }
                if (config !== undefined) return ()=>config;
            }
        }
        let foundPreparedProvider = undefined;
        for (const module of resolveDependenciesFrom){
            foundPreparedProvider = module.getPreparedProvider(type, foundPreparedProvider);
        }
        if (resolveDependenciesFrom[0] !== this.module) {
            //the provider was exported from another module, so we need to check if there is a more specific candidate
            foundPreparedProvider = this.module.getPreparedProvider(type, foundPreparedProvider);
        }
        if (!foundPreparedProvider) {
            //go up parent hierarchy
            let current = this.module;
            while(current && !foundPreparedProvider){
                foundPreparedProvider = current.getPreparedProvider(type, foundPreparedProvider);
                current = current.parent;
            }
        }
        const fromScope = scope ? scope.name : '';
        if (!foundPreparedProvider) {
            if (optional) return ()=>undefined;
            const t = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringifyType"])(type, {
                showFullDefinition: false
            });
            throw new ServiceNotFoundError(`Undefined service "${label ? label + ': ' : ''}${t}". Type has no matching provider in ${fromScope ? 'scope ' + fromScope : 'no scope'}.`);
        }
        // const allPossibleScopes = foundPreparedProvider.providers.map(getScope);
        // const unscoped = allPossibleScopes.includes('') && allPossibleScopes.length === 1;
        //
        // if (!unscoped && !allPossibleScopes.includes(fromScope)) {
        //     const t = stringifyType(type, { showFullDefinition: false });
        //     throw new ServiceNotFoundError(
        //         `Service "${t}" can not be received from ${fromScope ? 'scope ' + fromScope : 'no scope'}, ` +
        //         `since it only exists in scope${allPossibleScopes.length === 1 ? '' : 's'} ${allPossibleScopes.join(', ')}.`
        //     );
        // }
        const resolveFromModule = foundPreparedProvider.resolveFrom || foundPreparedProvider.modules[0];
        return (scopeIn)=>resolveFromModule.injector.resolver(getContainerToken(foundPreparedProvider.token), scopeIn || scope);
    }
}
class BuildProviderIndex {
    constructor(){
        this.offset = 0;
    }
    reserve() {
        return this.offset++;
    }
}
BuildProviderIndex.__type = [
    'offset',
    function() {
        return 0;
    },
    'reserve',
    'BuildProviderIndex',
    '\'3!<>"P\'0#5w$'
];
class BuildContext {
    constructor(){
        this.id = BuildContext.ids++;
        this.tagRegistry = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagRegistry"];
        this.providerIndex = new BuildProviderIndex;
        /**
         * In the process of preparing providers, each module redirects their
         * global setup calls in this registry.
         */ this.globalConfigurationProviderRegistry = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConfigurationProviderRegistry"];
    }
}
BuildContext.ids = 0;
BuildContext.__type = [
    'ids',
    function() {
        return 0;
    },
    'id',
    function() {
        return BuildContext.ids++;
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagRegistry"],
    'tagRegistry',
    function() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["TagRegistry"];
    },
    ()=>BuildProviderIndex,
    'providerIndex',
    function() {
        return new BuildProviderIndex;
    },
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConfigurationProviderRegistry"],
    'globalConfigurationProviderRegistry',
    function() {
        return new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ConfigurationProviderRegistry"];
    },
    'BuildContext',
    '\'3!s>"\'3#>$P7%3&>\'P7(3)>*P7+3,>-5w.'
];
const __ΩResolver = [
    'T',
    ()=>__ΩScope,
    'scope',
    '',
    'Resolver',
    'b!Pn"2#8e"!/$w%y'
];
;
class InjectorContext {
    constructor(rootModule, scope, buildContext = new BuildContext){
        this.rootModule = rootModule;
        this.scope = scope;
        this.buildContext = buildContext;
    }
    resolve(module, type) {
        var _a;
        if (type === void 0) {
            type = (_a = this.resolve.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.resolve.Ω = undefined;
        return this.getInjector(module || this.rootModule).createResolver((0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["resolveReceiveType"])(type), this.scope);
    }
    getOrUndefined(token, module) {
        var _a;
        if (token === void 0) {
            token = (_a = this.getOrUndefined.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.getOrUndefined.Ω = undefined;
        try {
            return this.get(token, module);
        } catch (error) {
            return;
        }
    }
    get(token, module) {
        var _a;
        if (token === void 0) {
            token = (_a = this.get.Ω) === null || _a === void 0 ? void 0 : _a[0];
        }
        this.get.Ω = undefined;
        const injector = this.getInjector(module || this.rootModule);
        return injector.get(token, this.scope);
    }
    instantiationCount(token, module, scope) {
        return this.getInjector(module || this.rootModule).instantiationCount(token, this.scope ? this.scope.name : scope);
    }
    set(token, value, module) {
        return this.getInjector(module || this.rootModule).set(getContainerToken(token), value, this.scope);
    }
    static forProviders(providers) {
        return new InjectorContext(new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"](providers));
    }
    /**
     * Returns the unscoped injector. Use `.get(T, Scope)` for resolving scoped token.
     */ getInjector(module) {
        return module.getOrCreateInjector(this.buildContext);
    }
    getRootInjector() {
        return this.getInjector(this.rootModule);
    }
    createChildScope(scope) {
        return new InjectorContext(this.rootModule, {
            name: scope,
            instances: {}
        }, this.buildContext);
    }
}
InjectorContext.__type = [
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'rootModule',
    ()=>__ΩScope,
    'scope',
    ()=>BuildContext,
    'buildContext',
    ()=>new BuildContext,
    'constructor',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'type',
    ()=>__ΩResolver,
    'resolve',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    'token',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    ()=>__ΩResolveToken,
    'getOrUndefined',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩReceiveType"],
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    ()=>__ΩResolveToken,
    'get',
    'Token',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'instantiationCount',
    'value',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'set',
    'ProviderWithScope',
    'providers',
    'forProviders',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'Injector',
    'getInjector',
    'getRootInjector',
    ()=>InjectorContext,
    'createChildScope',
    'InjectorContext',
    'PP7!2":n#2$8:9P7%2&<>\'"0(PP7)2*8"o+"2,8"o-"0.P"o/"208P712*8P"o2"-J03P"o4"208P752*8"o6"07P"w820P792*8&2$8\'0:P"20"2;P7<2*8$0=P"w>F2?"0@sPP7A2*"wB0CP"wB0DP&2$P7E0F5wG'
];
function injectedFunction(fn, injector, skipParameters = 0, type, skipTypeParameters) {
    type = type || (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(fn);
    skipTypeParameters = skipTypeParameters === undefined ? skipParameters : skipTypeParameters;
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function || type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].method) {
        const args = [];
        for(let i = skipTypeParameters; i < type.parameters.length; i++){
            args.push(injector.createResolver(type.parameters[i], undefined, type.parameters[i].name));
        }
        if (skipParameters === 0) {
            return __assignType((scope)=>{
                return fn(...args.map(__assignType((v)=>v(scope), [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
            }, [
                ()=>__ΩScope,
                'scope',
                '',
                'PPn!-J2""/#'
            ]);
        } else if (skipParameters === 1) {
            return __assignType((scope, p1)=>{
                return fn(p1, ...args.map(__assignType((v)=>v(scope), [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
            }, [
                ()=>__ΩScope,
                'scope',
                'p1',
                '',
                'PPn!-J2""2#"/$'
            ]);
        } else if (skipParameters === 2) {
            return __assignType((scope, p1, p2)=>{
                return fn(p1, p2, ...args.map(__assignType((v)=>v(scope), [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
            }, [
                ()=>__ΩScope,
                'scope',
                'p1',
                'p2',
                '',
                'PPn!-J2""2#"2$"/%'
            ]);
        } else if (skipParameters === 3) {
            return __assignType((scope, p1, p2, p3)=>{
                return fn(p1, p2, p3, ...args.map(__assignType((v)=>v(scope), [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
            }, [
                ()=>__ΩScope,
                'scope',
                'p1',
                'p2',
                'p3',
                '',
                'PPn!-J2""2#"2$"2%"/&'
            ]);
        } else {
            return __assignType((scope, ...input)=>{
                while(input.length !== skipParameters){
                    input.push(undefined);
                }
                return fn(...input.slice(0, skipParameters), ...args.map(__assignType((v)=>v(scope), [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
            }, [
                ()=>__ΩScope,
                'scope',
                'input',
                '',
                'PPn!-J2""@2#"/$'
            ]);
        }
    }
    return fn;
}
injectedFunction.__type = [
    'fn',
    'Injector',
    'injector',
    'skipParameters',
    ()=>0,
    'Type',
    'type',
    'skipTypeParameters',
    ()=>__ΩScope,
    'scope',
    'args',
    ()=>__ΩReturnType,
    '',
    'injectedFunction',
    'P"2!"w"2#\'2$>%"w&2\'8\'2(8Pn)2*8"@2+"o,"/-/.'
];
function partialFactory(type, injector) {
    if (!type) throw new Error('Can not create partial factory for undefined type');
    // must be lazy because creating resolvers for types that are never resolved & unresolvable will throw
    function createLazyResolver(type, label) {
        let resolver = undefined;
        return __assignType((scope)=>{
            if (!resolver) {
                resolver = injector.createResolver(type, scope, label);
            }
            return resolver(scope);
        }, [
            ()=>__ΩScope,
            'scope',
            '',
            'Pn!2"8"/#'
        ]);
    }
    createLazyResolver.__type = [
        'Type',
        'type',
        'label',
        ()=>__ΩResolver,
        'createLazyResolver',
        'P"w!2"&2#8"o$"/%'
    ];
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].class) {
        const classType = type.classType;
        const reflectionClass = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionClass"].from(classType);
        const args = [];
        const constructor = reflectionClass.getMethodOrUndefined('constructor');
        if (constructor) {
            for (const parameter of constructor.getParameters()){
                args.push({
                    name: parameter.name,
                    resolve: createLazyResolver(parameter.getType(), parameter.name)
                });
            }
        }
        const properties = (Map.Ω = [
            [
                '"g'
            ],
            [
                ()=>__ΩScope,
                'scope',
                ()=>__ΩReturnType,
                ()=>__ΩResolver,
                '',
                'Pn!2"8"o$"o#"/%'
            ]
        ], new Map());
        for (const property of reflectionClass.getProperties()){
            const tokenType = getInjectOptions(property.type);
            if (!tokenType) continue;
            properties.set(property.getName(), createLazyResolver(tokenType, property.name));
        }
        return __assignType((scope)=>__assignType((partial)=>{
                var _a, _b;
                const instance = new classType(...args.map(__assignType((v)=>{
                    var _a;
                    return (_a = partial[v.name]) !== null && _a !== void 0 ? _a : v.resolve(scope);
                }, [
                    'v',
                    '',
                    'P"2!"/"'
                ])));
                for (const [property, resolve] of properties.entries()){
                    (_a = instance[property]) !== null && _a !== void 0 ? _a : instance[property] = (_b = partial[property]) !== null && _b !== void 0 ? _b : resolve(scope);
                }
                return instance;
            }, [
                ()=>__ΩPartial,
                'partial',
                '',
                'l)"e"!fRPPd"gN#!o!"2""/#'
            ]), [
            ()=>__ΩScope,
            'scope',
            '',
            'Pn!2"8"/#'
        ]);
    }
    if (type.kind === __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].objectLiteral) {
        const properties = (Map.Ω = [
            [
                '"g'
            ],
            [
                ()=>__ΩScope,
                'scope',
                ()=>__ΩReturnType,
                ()=>__ΩResolver,
                '',
                'Pn!2"8"o$"o#"/%'
            ]
        ], new Map());
        for (const property of type.types){
            if (property.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].propertySignature) continue;
            properties.set(property.name, createLazyResolver(property, String(property.name)));
        }
        return __assignType((scope)=>__assignType((partial)=>{
                var _a;
                const obj = {};
                for (const [property, resolve] of properties.entries()){
                    obj[property] = (_a = partial[property]) !== null && _a !== void 0 ? _a : resolve(scope);
                }
                return obj;
            }, [
                ()=>__ΩPartial,
                'partial',
                '',
                'l)"e"!fRPPd"gN#!o!"2""/#'
            ]), [
            ()=>__ΩScope,
            'scope',
            '',
            'Pn!2"8"/#'
        ]);
    }
    throw new Error(`Can not create partial factory for ${(0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["stringifyType"])(type, {
        showFullDefinition: false
    })}`);
}
partialFactory.__type = [
    'Type',
    'type',
    'Injector',
    'injector',
    'partialFactory',
    'PP"w!-J2""w#2$"/%'
]; //# sourceMappingURL=injector.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/src/jsx.js [app-client] (ecmascript)": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
/*@ts-ignore*/ __turbopack_esm__({
    "ServiceContainer": (()=>ServiceContainer),
    "provideServices": (()=>provideServices),
    "wrapComponent": (()=>wrapComponent)
});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$module__evaluation$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/index.js [app-client] (ecmascript) <module evaluation>");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/core/dist/esm/src/core.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/reflection.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/type/dist/esm/src/reflection/type.js [app-client] (ecmascript)");
;
function __assignType(fn, args) {
    fn.__type = args;
    return fn;
}
;
;
;
;
function wrapComponent(fn, container) {
    if (fn.__injected) return fn.__injected;
    const type = (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$reflection$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["reflect"])(fn);
    if (type.kind !== __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$type$2f$dist$2f$esm$2f$src$2f$reflection$2f$type$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["ReflectionKind"].function) return fn;
    const args = [];
    const injector = container.getRootInjector();
    const componentName = fn.name;
    for(let i = 1; i < type.parameters.length; i++){
        args.push(injector.createResolver(type.parameters[i], undefined, `${componentName}.${type.parameters[i].name}`));
    }
    const fnWithInjected = __assignType((props)=>{
        return fn(props, ...args.map(__assignType((v)=>v(), [
            'v',
            '',
            'P"2!"/"'
        ])));
    }, [
        'props',
        '',
        'P"2!"/"'
    ]);
    return fn.__injected = __assignType(function(props) {
        const children = fnWithInjected(props);
        const propsChildren = [];
        let changed = false;
        // console.log('children.props.children', children);
        if ('object' === typeof children && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isFunction"])(children.type)) {
            // NextJS server side has different children return type
            return {
                ...children,
                type: wrapComponent(children.type, container)
            };
        } else if ('object' === typeof children && children.props && (0, __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["isArray"])(children.props.children)) {
            //that's React in frontend
            for (const child of children.props.children){
                if ('object' === typeof child && 'function' === typeof child.type) {
                    propsChildren.push({
                        ...child,
                        type: wrapComponent(child.type, container)
                    });
                    changed = false;
                } else {
                    propsChildren.push(child);
                }
            }
            if ("TURBOPACK compile-time falsy", 0) {
                "TURBOPACK unreachable";
            }
        }
        return children;
    }, [
        'props',
        '',
        'P"2!"/"'
    ]);
}
wrapComponent.__type = [
    '__injected',
    'fn',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"],
    'container',
    'wrapComponent',
    'PP"P"4!8MK2"P7#2$"/%'
];
function provideServices(fn, providers) {
    const container = __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"].forProviders(providers);
    return wrapComponent(fn, container);
}
provideServices.__type = [
    'fn',
    'ProviderWithScope',
    'providers',
    'provideServices',
    'P"2!"w"F2#"/$'
];
function ServiceContainer(props) {
    const children = props.children;
    const cacheContainer = props.providers || props.module;
    if (!cacheContainer) throw new Error('No providers or module given');
    if (!cacheContainer.__injected) {
        const module = props.module || new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"](props.providers || []);
        if (props.state) module.setConfigDefinition(props.state);
        const container = new __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorContext"](module);
        cacheContainer.__injected = wrapComponent(children.type, container);
    }
    return {
        ...props.children,
        type: cacheContainer.__injected
    };
}
ServiceContainer.__type = [
    'ProviderWithScope',
    'providers',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["InjectorModule"],
    'module',
    ()=>__TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$core$2f$dist$2f$esm$2f$src$2f$core$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__["__ΩClassType"],
    'state',
    'children',
    'props',
    'ServiceContainer',
    'PP"w!F4"8P7#4$8n%4&8"4\'8M2("/)'
]; //# sourceMappingURL=jsx.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <locals>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, z: require } = __turbopack_context__;
{
__turbopack_esm__({});
;
;
;
;
;
 //# sourceMappingURL=index.js.map
}}),
"[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <module evaluation>": ((__turbopack_context__) => {
"use strict";

var { r: __turbopack_require__, f: __turbopack_module_context__, i: __turbopack_import__, s: __turbopack_esm__, v: __turbopack_export_value__, n: __turbopack_export_namespace__, c: __turbopack_cache__, M: __turbopack_modules__, l: __turbopack_load__, j: __turbopack_dynamic__, P: __turbopack_resolve_absolute_path__, U: __turbopack_relative_url__, R: __turbopack_resolve_module_id_path__, b: __turbopack_worker_blob_url__, g: global, __dirname, t: require } = __turbopack_context__;
{
__turbopack_esm__({});
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$injector$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/injector.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$provider$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/provider.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$module$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/module.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$types$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/types.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$src$2f$jsx$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/src/jsx.js [app-client] (ecmascript)");
var __TURBOPACK__imported__module__$5b$project$5d2f$node_modules$2f40$deepkit$2f$injector$2f$dist$2f$esm$2f$index$2e$js__$5b$app$2d$client$5d$__$28$ecmascript$29$__$3c$locals$3e$__ = __turbopack_import__("[project]/node_modules/@deepkit/injector/dist/esm/index.js [app-client] (ecmascript) <locals>");
}}),
}]);

//# sourceMappingURL=node_modules_%40deepkit_injector_dist_esm_988345._.js.map